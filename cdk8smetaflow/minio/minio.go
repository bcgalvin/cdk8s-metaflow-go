package minio

import (
	"time"

	_jsii_ "github.com/aws/jsii-runtime-go/runtime"
	_init_ "github.com/bcgalvin/cdk8s-metaflow-go/cdk8smetaflow/jsii"

	"github.com/aws/constructs-go/constructs/v10"
	"github.com/bcgalvin/cdk8s-metaflow-go/cdk8smetaflow/minio/internal"
	"github.com/cdk8s-team/cdk8s-core-go/cdk8s/v2"
)

// Experimental.
type Tenant interface {
	cdk8s.ApiObject
	// The group portion of the API version (e.g. `authorization.k8s.io`).
	// Experimental.
	ApiGroup() *string
	// The object's API version (e.g. `authorization.k8s.io/v1`).
	// Experimental.
	ApiVersion() *string
	// The chart in which this object is defined.
	// Experimental.
	Chart() cdk8s.Chart
	// The object kind.
	// Experimental.
	Kind() *string
	// Metadata associated with this API object.
	// Experimental.
	Metadata() cdk8s.ApiObjectMetadataDefinition
	// The name of the API object.
	//
	// If a name is specified in `metadata.name` this will be the name returned.
	// Otherwise, a name will be generated by calling
	// `Chart.of(this).generatedObjectName(this)`, which by default uses the
	// construct path to generate a DNS-compatible name for the resource.
	// Experimental.
	Name() *string
	// The tree node.
	// Experimental.
	Node() constructs.Node
	// Create a dependency between this ApiObject and other constructs.
	//
	// These can be other ApiObjects, Charts, or custom.
	// Experimental.
	AddDependency(dependencies ...constructs.IConstruct)
	// Applies a set of RFC-6902 JSON-Patch operations to the manifest synthesized for this API object.
	//
	// Example:
	//     kubePod.addJsonPatch(JsonPatch.replace('/spec/enableServiceLinks', true));
	//
	// Experimental.
	AddJsonPatch(ops ...cdk8s.JsonPatch)
	// Renders the object to Kubernetes JSON.
	// Experimental.
	ToJson() interface{}
	// Returns a string representation of this construct.
	// Experimental.
	ToString() *string
}

// The jsii proxy struct for Tenant
type jsiiProxy_Tenant struct {
	internal.Type__cdk8sApiObject
}

func (j *jsiiProxy_Tenant) ApiGroup() *string {
	var returns *string
	_jsii_.Get(
		j,
		"apiGroup",
		&returns,
	)
	return returns
}

func (j *jsiiProxy_Tenant) ApiVersion() *string {
	var returns *string
	_jsii_.Get(
		j,
		"apiVersion",
		&returns,
	)
	return returns
}

func (j *jsiiProxy_Tenant) Chart() cdk8s.Chart {
	var returns cdk8s.Chart
	_jsii_.Get(
		j,
		"chart",
		&returns,
	)
	return returns
}

func (j *jsiiProxy_Tenant) Kind() *string {
	var returns *string
	_jsii_.Get(
		j,
		"kind",
		&returns,
	)
	return returns
}

func (j *jsiiProxy_Tenant) Metadata() cdk8s.ApiObjectMetadataDefinition {
	var returns cdk8s.ApiObjectMetadataDefinition
	_jsii_.Get(
		j,
		"metadata",
		&returns,
	)
	return returns
}

func (j *jsiiProxy_Tenant) Name() *string {
	var returns *string
	_jsii_.Get(
		j,
		"name",
		&returns,
	)
	return returns
}

func (j *jsiiProxy_Tenant) Node() constructs.Node {
	var returns constructs.Node
	_jsii_.Get(
		j,
		"node",
		&returns,
	)
	return returns
}


// Defines a "Tenant" API object.
// Experimental.
func NewTenant(scope constructs.Construct, id *string, props *TenantProps) Tenant {
	_init_.Initialize()

	j := jsiiProxy_Tenant{}

	_jsii_.Create(
		"cdk8s-metaflow.minio.Tenant",
		[]interface{}{scope, id, props},
		&j,
	)

	return &j
}

// Defines a "Tenant" API object.
// Experimental.
func NewTenant_Override(t Tenant, scope constructs.Construct, id *string, props *TenantProps) {
	_init_.Initialize()

	_jsii_.Create(
		"cdk8s-metaflow.minio.Tenant",
		[]interface{}{scope, id, props},
		t,
	)
}

// Checks if `x` is a construct.
//
// Use this method instead of `instanceof` to properly detect `Construct`
// instances, even when the construct library is symlinked.
//
// Explanation: in JavaScript, multiple copies of the `constructs` library on
// disk are seen as independent, completely different libraries. As a
// consequence, the class `Construct` in each copy of the `constructs` library
// is seen as a different class, and an instance of one class will not test as
// `instanceof` the other class. `npm install` will not create installations
// like this, but users may manually symlink construct libraries together or
// use a monorepo tool: in those cases, multiple copies of the `constructs`
// library can be accidentally installed, and `instanceof` will behave
// unpredictably. It is safest to avoid using `instanceof`, and using
// this type-testing method instead.
//
// Returns: true if `x` is an object created from a class which extends `Construct`.
// Experimental.
func Tenant_IsConstruct(x interface{}) *bool {
	_init_.Initialize()

	var returns *bool

	_jsii_.StaticInvoke(
		"cdk8s-metaflow.minio.Tenant",
		"isConstruct",
		[]interface{}{x},
		&returns,
	)

	return returns
}

// Renders a Kubernetes manifest for "Tenant".
//
// This can be used to inline resource manifests inside other objects (e.g. as templates).
// Experimental.
func Tenant_Manifest(props *TenantProps) interface{} {
	_init_.Initialize()

	var returns interface{}

	_jsii_.StaticInvoke(
		"cdk8s-metaflow.minio.Tenant",
		"manifest",
		[]interface{}{props},
		&returns,
	)

	return returns
}

// Returns the `ApiObject` named `Resource` which is a child of the given construct.
//
// If `c` is an `ApiObject`, it is returned directly. Throws an
// exception if the construct does not have a child named `Default` _or_ if
// this child is not an `ApiObject`.
// Experimental.
func Tenant_Of(c constructs.IConstruct) cdk8s.ApiObject {
	_init_.Initialize()

	var returns cdk8s.ApiObject

	_jsii_.StaticInvoke(
		"cdk8s-metaflow.minio.Tenant",
		"of",
		[]interface{}{c},
		&returns,
	)

	return returns
}

func Tenant_GVK() *cdk8s.GroupVersionKind {
	_init_.Initialize()
	var returns *cdk8s.GroupVersionKind
	_jsii_.StaticGet(
		"cdk8s-metaflow.minio.Tenant",
		"GVK",
		&returns,
	)
	return returns
}

func (t *jsiiProxy_Tenant) AddDependency(dependencies ...constructs.IConstruct) {
	args := []interface{}{}
	for _, a := range dependencies {
		args = append(args, a)
	}

	_jsii_.InvokeVoid(
		t,
		"addDependency",
		args,
	)
}

func (t *jsiiProxy_Tenant) AddJsonPatch(ops ...cdk8s.JsonPatch) {
	args := []interface{}{}
	for _, a := range ops {
		args = append(args, a)
	}

	_jsii_.InvokeVoid(
		t,
		"addJsonPatch",
		args,
	)
}

func (t *jsiiProxy_Tenant) ToJson() interface{} {
	var returns interface{}

	_jsii_.Invoke(
		t,
		"toJson",
		nil, // no parameters
		&returns,
	)

	return returns
}

func (t *jsiiProxy_Tenant) ToString() *string {
	var returns *string

	_jsii_.Invoke(
		t,
		"toString",
		nil, // no parameters
		&returns,
	)

	return returns
}

// Experimental.
type TenantProps struct {
	// Experimental.
	Spec *TenantSpec `field:"required" json:"spec" yaml:"spec"`
	// Experimental.
	Metadata *cdk8s.ApiObjectMetadata `field:"optional" json:"metadata" yaml:"metadata"`
	// Experimental.
	Scheduler *TenantScheduler `field:"optional" json:"scheduler" yaml:"scheduler"`
}

// Experimental.
type TenantScheduler struct {
	// Experimental.
	Name *string `field:"required" json:"name" yaml:"name"`
}

// Experimental.
type TenantSpec struct {
	// Experimental.
	Zones *[]*TenantSpecZones `field:"required" json:"zones" yaml:"zones"`
	// Experimental.
	CertConfig *TenantSpecCertConfig `field:"optional" json:"certConfig" yaml:"certConfig"`
	// Experimental.
	Configuration *TenantSpecConfiguration `field:"optional" json:"configuration" yaml:"configuration"`
	// Experimental.
	CredsSecret *TenantSpecCredsSecret `field:"optional" json:"credsSecret" yaml:"credsSecret"`
	// Experimental.
	Env *[]*TenantSpecEnv `field:"optional" json:"env" yaml:"env"`
	// Experimental.
	ExposeServices *TenantSpecExposeServices `field:"optional" json:"exposeServices" yaml:"exposeServices"`
	// Experimental.
	ExternalCaCertSecret *[]*TenantSpecExternalCaCertSecret `field:"optional" json:"externalCaCertSecret" yaml:"externalCaCertSecret"`
	// Experimental.
	ExternalCertSecret *[]*TenantSpecExternalCertSecret `field:"optional" json:"externalCertSecret" yaml:"externalCertSecret"`
	// Experimental.
	ExternalClientCertSecret *TenantSpecExternalClientCertSecret `field:"optional" json:"externalClientCertSecret" yaml:"externalClientCertSecret"`
	// Experimental.
	Image *string `field:"optional" json:"image" yaml:"image"`
	// Experimental.
	ImagePullPolicy *string `field:"optional" json:"imagePullPolicy" yaml:"imagePullPolicy"`
	// Experimental.
	ImagePullSecret *TenantSpecImagePullSecret `field:"optional" json:"imagePullSecret" yaml:"imagePullSecret"`
	// Experimental.
	Kes *TenantSpecKes `field:"optional" json:"kes" yaml:"kes"`
	// Experimental.
	Log *TenantSpecLog `field:"optional" json:"log" yaml:"log"`
	// Experimental.
	MountPath *string `field:"optional" json:"mountPath" yaml:"mountPath"`
	// Experimental.
	PodManagementPolicy *string `field:"optional" json:"podManagementPolicy" yaml:"podManagementPolicy"`
	// Experimental.
	PriorityClassName *string `field:"optional" json:"priorityClassName" yaml:"priorityClassName"`
	// Experimental.
	Prometheus *TenantSpecPrometheus `field:"optional" json:"prometheus" yaml:"prometheus"`
	// Experimental.
	RequestAutoCert *bool `field:"optional" json:"requestAutoCert" yaml:"requestAutoCert"`
	// Experimental.
	S3 *TenantSpecS3 `field:"optional" json:"s3" yaml:"s3"`
	// Experimental.
	SecurityContext *TenantSpecSecurityContext `field:"optional" json:"securityContext" yaml:"securityContext"`
	// Experimental.
	ServiceAccountName *string `field:"optional" json:"serviceAccountName" yaml:"serviceAccountName"`
	// Experimental.
	SideCars *TenantSpecSideCars `field:"optional" json:"sideCars" yaml:"sideCars"`
	// Experimental.
	SubPath *string `field:"optional" json:"subPath" yaml:"subPath"`
	// Experimental.
	Users *[]*TenantSpecUsers `field:"optional" json:"users" yaml:"users"`
}

// Experimental.
type TenantSpecCertConfig struct {
	// Experimental.
	CommonName *string `field:"optional" json:"commonName" yaml:"commonName"`
	// Experimental.
	DnsNames *[]*string `field:"optional" json:"dnsNames" yaml:"dnsNames"`
	// Experimental.
	OrganizationName *[]*string `field:"optional" json:"organizationName" yaml:"organizationName"`
}

// Experimental.
type TenantSpecConfiguration struct {
	// Experimental.
	Name *string `field:"optional" json:"name" yaml:"name"`
}

// Experimental.
type TenantSpecCredsSecret struct {
	// Experimental.
	Name *string `field:"optional" json:"name" yaml:"name"`
}

// Experimental.
type TenantSpecEnv struct {
	// Experimental.
	Name *string `field:"required" json:"name" yaml:"name"`
	// Experimental.
	Value *string `field:"optional" json:"value" yaml:"value"`
	// Experimental.
	ValueFrom *TenantSpecEnvValueFrom `field:"optional" json:"valueFrom" yaml:"valueFrom"`
}

// Experimental.
type TenantSpecEnvValueFrom struct {
	// Experimental.
	ConfigMapKeyRef *TenantSpecEnvValueFromConfigMapKeyRef `field:"optional" json:"configMapKeyRef" yaml:"configMapKeyRef"`
	// Experimental.
	FieldRef *TenantSpecEnvValueFromFieldRef `field:"optional" json:"fieldRef" yaml:"fieldRef"`
	// Experimental.
	ResourceFieldRef *TenantSpecEnvValueFromResourceFieldRef `field:"optional" json:"resourceFieldRef" yaml:"resourceFieldRef"`
	// Experimental.
	SecretKeyRef *TenantSpecEnvValueFromSecretKeyRef `field:"optional" json:"secretKeyRef" yaml:"secretKeyRef"`
}

// Experimental.
type TenantSpecEnvValueFromConfigMapKeyRef struct {
	// Experimental.
	Key *string `field:"required" json:"key" yaml:"key"`
	// Experimental.
	Name *string `field:"optional" json:"name" yaml:"name"`
	// Experimental.
	Optional *bool `field:"optional" json:"optional" yaml:"optional"`
}

// Experimental.
type TenantSpecEnvValueFromFieldRef struct {
	// Experimental.
	FieldPath *string `field:"required" json:"fieldPath" yaml:"fieldPath"`
	// Experimental.
	ApiVersion *string `field:"optional" json:"apiVersion" yaml:"apiVersion"`
}

// Experimental.
type TenantSpecEnvValueFromResourceFieldRef struct {
	// Experimental.
	Resource *string `field:"required" json:"resource" yaml:"resource"`
	// Experimental.
	ContainerName *string `field:"optional" json:"containerName" yaml:"containerName"`
	// Experimental.
	Divisor TenantSpecEnvValueFromResourceFieldRefDivisor `field:"optional" json:"divisor" yaml:"divisor"`
}

// Experimental.
type TenantSpecEnvValueFromResourceFieldRefDivisor interface {
	// Experimental.
	Value() interface{}
}

// The jsii proxy struct for TenantSpecEnvValueFromResourceFieldRefDivisor
type jsiiProxy_TenantSpecEnvValueFromResourceFieldRefDivisor struct {
	_ byte // padding
}

func (j *jsiiProxy_TenantSpecEnvValueFromResourceFieldRefDivisor) Value() interface{} {
	var returns interface{}
	_jsii_.Get(
		j,
		"value",
		&returns,
	)
	return returns
}


// Experimental.
func TenantSpecEnvValueFromResourceFieldRefDivisor_FromNumber(value *float64) TenantSpecEnvValueFromResourceFieldRefDivisor {
	_init_.Initialize()

	var returns TenantSpecEnvValueFromResourceFieldRefDivisor

	_jsii_.StaticInvoke(
		"cdk8s-metaflow.minio.TenantSpecEnvValueFromResourceFieldRefDivisor",
		"fromNumber",
		[]interface{}{value},
		&returns,
	)

	return returns
}

// Experimental.
func TenantSpecEnvValueFromResourceFieldRefDivisor_FromString(value *string) TenantSpecEnvValueFromResourceFieldRefDivisor {
	_init_.Initialize()

	var returns TenantSpecEnvValueFromResourceFieldRefDivisor

	_jsii_.StaticInvoke(
		"cdk8s-metaflow.minio.TenantSpecEnvValueFromResourceFieldRefDivisor",
		"fromString",
		[]interface{}{value},
		&returns,
	)

	return returns
}

// Experimental.
type TenantSpecEnvValueFromSecretKeyRef struct {
	// Experimental.
	Key *string `field:"required" json:"key" yaml:"key"`
	// Experimental.
	Name *string `field:"optional" json:"name" yaml:"name"`
	// Experimental.
	Optional *bool `field:"optional" json:"optional" yaml:"optional"`
}

// Experimental.
type TenantSpecExposeServices struct {
	// Experimental.
	Console *bool `field:"optional" json:"console" yaml:"console"`
	// Experimental.
	Minio *bool `field:"optional" json:"minio" yaml:"minio"`
}

// Experimental.
type TenantSpecExternalCaCertSecret struct {
	// Experimental.
	Name *string `field:"required" json:"name" yaml:"name"`
	// Experimental.
	Type *string `field:"optional" json:"type" yaml:"type"`
}

// Experimental.
type TenantSpecExternalCertSecret struct {
	// Experimental.
	Name *string `field:"required" json:"name" yaml:"name"`
	// Experimental.
	Type *string `field:"optional" json:"type" yaml:"type"`
}

// Experimental.
type TenantSpecExternalClientCertSecret struct {
	// Experimental.
	Name *string `field:"required" json:"name" yaml:"name"`
	// Experimental.
	Type *string `field:"optional" json:"type" yaml:"type"`
}

// Experimental.
type TenantSpecImagePullSecret struct {
	// Experimental.
	Name *string `field:"optional" json:"name" yaml:"name"`
}

// Experimental.
type TenantSpecKes struct {
	// Experimental.
	KesSecret *TenantSpecKesKesSecret `field:"required" json:"kesSecret" yaml:"kesSecret"`
	// Experimental.
	Affinity *TenantSpecKesAffinity `field:"optional" json:"affinity" yaml:"affinity"`
	// Experimental.
	Annotations *map[string]*string `field:"optional" json:"annotations" yaml:"annotations"`
	// Experimental.
	ClientCertSecret *TenantSpecKesClientCertSecret `field:"optional" json:"clientCertSecret" yaml:"clientCertSecret"`
	// Experimental.
	ExternalCertSecret *TenantSpecKesExternalCertSecret `field:"optional" json:"externalCertSecret" yaml:"externalCertSecret"`
	// Experimental.
	Image *string `field:"optional" json:"image" yaml:"image"`
	// Experimental.
	ImagePullPolicy *string `field:"optional" json:"imagePullPolicy" yaml:"imagePullPolicy"`
	// Experimental.
	KeyName *string `field:"optional" json:"keyName" yaml:"keyName"`
	// Experimental.
	Labels *map[string]*string `field:"optional" json:"labels" yaml:"labels"`
	// Experimental.
	NodeSelector *map[string]*string `field:"optional" json:"nodeSelector" yaml:"nodeSelector"`
	// Experimental.
	Replicas *float64 `field:"optional" json:"replicas" yaml:"replicas"`
	// Experimental.
	Resources *TenantSpecKesResources `field:"optional" json:"resources" yaml:"resources"`
	// Experimental.
	SecurityContext *TenantSpecKesSecurityContext `field:"optional" json:"securityContext" yaml:"securityContext"`
	// Experimental.
	ServiceAccountName *string `field:"optional" json:"serviceAccountName" yaml:"serviceAccountName"`
	// Experimental.
	Tolerations *[]*TenantSpecKesTolerations `field:"optional" json:"tolerations" yaml:"tolerations"`
	// Experimental.
	TopologySpreadConstraints *[]*TenantSpecKesTopologySpreadConstraints `field:"optional" json:"topologySpreadConstraints" yaml:"topologySpreadConstraints"`
}

// Experimental.
type TenantSpecKesAffinity struct {
	// Experimental.
	NodeAffinity *TenantSpecKesAffinityNodeAffinity `field:"optional" json:"nodeAffinity" yaml:"nodeAffinity"`
	// Experimental.
	PodAffinity *TenantSpecKesAffinityPodAffinity `field:"optional" json:"podAffinity" yaml:"podAffinity"`
	// Experimental.
	PodAntiAffinity *TenantSpecKesAffinityPodAntiAffinity `field:"optional" json:"podAntiAffinity" yaml:"podAntiAffinity"`
}

// Experimental.
type TenantSpecKesAffinityNodeAffinity struct {
	// Experimental.
	PreferredDuringSchedulingIgnoredDuringExecution *[]*TenantSpecKesAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution `field:"optional" json:"preferredDuringSchedulingIgnoredDuringExecution" yaml:"preferredDuringSchedulingIgnoredDuringExecution"`
	// Experimental.
	RequiredDuringSchedulingIgnoredDuringExecution *TenantSpecKesAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution `field:"optional" json:"requiredDuringSchedulingIgnoredDuringExecution" yaml:"requiredDuringSchedulingIgnoredDuringExecution"`
}

// Experimental.
type TenantSpecKesAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution struct {
	// Experimental.
	Preference *TenantSpecKesAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference `field:"required" json:"preference" yaml:"preference"`
	// Experimental.
	Weight *float64 `field:"required" json:"weight" yaml:"weight"`
}

// Experimental.
type TenantSpecKesAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference struct {
	// Experimental.
	MatchExpressions *[]*TenantSpecKesAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions `field:"optional" json:"matchExpressions" yaml:"matchExpressions"`
	// Experimental.
	MatchFields *[]*TenantSpecKesAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields `field:"optional" json:"matchFields" yaml:"matchFields"`
}

// Experimental.
type TenantSpecKesAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions struct {
	// Experimental.
	Key *string `field:"required" json:"key" yaml:"key"`
	// Experimental.
	Operator *string `field:"required" json:"operator" yaml:"operator"`
	// Experimental.
	Values *[]*string `field:"optional" json:"values" yaml:"values"`
}

// Experimental.
type TenantSpecKesAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields struct {
	// Experimental.
	Key *string `field:"required" json:"key" yaml:"key"`
	// Experimental.
	Operator *string `field:"required" json:"operator" yaml:"operator"`
	// Experimental.
	Values *[]*string `field:"optional" json:"values" yaml:"values"`
}

// Experimental.
type TenantSpecKesAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution struct {
	// Experimental.
	NodeSelectorTerms *[]*TenantSpecKesAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms `field:"required" json:"nodeSelectorTerms" yaml:"nodeSelectorTerms"`
}

// Experimental.
type TenantSpecKesAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms struct {
	// Experimental.
	MatchExpressions *[]*TenantSpecKesAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions `field:"optional" json:"matchExpressions" yaml:"matchExpressions"`
	// Experimental.
	MatchFields *[]*TenantSpecKesAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields `field:"optional" json:"matchFields" yaml:"matchFields"`
}

// Experimental.
type TenantSpecKesAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions struct {
	// Experimental.
	Key *string `field:"required" json:"key" yaml:"key"`
	// Experimental.
	Operator *string `field:"required" json:"operator" yaml:"operator"`
	// Experimental.
	Values *[]*string `field:"optional" json:"values" yaml:"values"`
}

// Experimental.
type TenantSpecKesAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields struct {
	// Experimental.
	Key *string `field:"required" json:"key" yaml:"key"`
	// Experimental.
	Operator *string `field:"required" json:"operator" yaml:"operator"`
	// Experimental.
	Values *[]*string `field:"optional" json:"values" yaml:"values"`
}

// Experimental.
type TenantSpecKesAffinityPodAffinity struct {
	// Experimental.
	PreferredDuringSchedulingIgnoredDuringExecution *[]*TenantSpecKesAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution `field:"optional" json:"preferredDuringSchedulingIgnoredDuringExecution" yaml:"preferredDuringSchedulingIgnoredDuringExecution"`
	// Experimental.
	RequiredDuringSchedulingIgnoredDuringExecution *[]*TenantSpecKesAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution `field:"optional" json:"requiredDuringSchedulingIgnoredDuringExecution" yaml:"requiredDuringSchedulingIgnoredDuringExecution"`
}

// Experimental.
type TenantSpecKesAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution struct {
	// Experimental.
	PodAffinityTerm *TenantSpecKesAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm `field:"required" json:"podAffinityTerm" yaml:"podAffinityTerm"`
	// Experimental.
	Weight *float64 `field:"required" json:"weight" yaml:"weight"`
}

// Experimental.
type TenantSpecKesAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm struct {
	// Experimental.
	TopologyKey *string `field:"required" json:"topologyKey" yaml:"topologyKey"`
	// Experimental.
	LabelSelector *TenantSpecKesAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector `field:"optional" json:"labelSelector" yaml:"labelSelector"`
	// Experimental.
	Namespaces *[]*string `field:"optional" json:"namespaces" yaml:"namespaces"`
}

// Experimental.
type TenantSpecKesAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector struct {
	// Experimental.
	MatchExpressions *[]*TenantSpecKesAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions `field:"optional" json:"matchExpressions" yaml:"matchExpressions"`
	// Experimental.
	MatchLabels *map[string]*string `field:"optional" json:"matchLabels" yaml:"matchLabels"`
}

// Experimental.
type TenantSpecKesAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions struct {
	// Experimental.
	Key *string `field:"required" json:"key" yaml:"key"`
	// Experimental.
	Operator *string `field:"required" json:"operator" yaml:"operator"`
	// Experimental.
	Values *[]*string `field:"optional" json:"values" yaml:"values"`
}

// Experimental.
type TenantSpecKesAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution struct {
	// Experimental.
	TopologyKey *string `field:"required" json:"topologyKey" yaml:"topologyKey"`
	// Experimental.
	LabelSelector *TenantSpecKesAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector `field:"optional" json:"labelSelector" yaml:"labelSelector"`
	// Experimental.
	Namespaces *[]*string `field:"optional" json:"namespaces" yaml:"namespaces"`
}

// Experimental.
type TenantSpecKesAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector struct {
	// Experimental.
	MatchExpressions *[]*TenantSpecKesAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions `field:"optional" json:"matchExpressions" yaml:"matchExpressions"`
	// Experimental.
	MatchLabels *map[string]*string `field:"optional" json:"matchLabels" yaml:"matchLabels"`
}

// Experimental.
type TenantSpecKesAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions struct {
	// Experimental.
	Key *string `field:"required" json:"key" yaml:"key"`
	// Experimental.
	Operator *string `field:"required" json:"operator" yaml:"operator"`
	// Experimental.
	Values *[]*string `field:"optional" json:"values" yaml:"values"`
}

// Experimental.
type TenantSpecKesAffinityPodAntiAffinity struct {
	// Experimental.
	PreferredDuringSchedulingIgnoredDuringExecution *[]*TenantSpecKesAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution `field:"optional" json:"preferredDuringSchedulingIgnoredDuringExecution" yaml:"preferredDuringSchedulingIgnoredDuringExecution"`
	// Experimental.
	RequiredDuringSchedulingIgnoredDuringExecution *[]*TenantSpecKesAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution `field:"optional" json:"requiredDuringSchedulingIgnoredDuringExecution" yaml:"requiredDuringSchedulingIgnoredDuringExecution"`
}

// Experimental.
type TenantSpecKesAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution struct {
	// Experimental.
	PodAffinityTerm *TenantSpecKesAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm `field:"required" json:"podAffinityTerm" yaml:"podAffinityTerm"`
	// Experimental.
	Weight *float64 `field:"required" json:"weight" yaml:"weight"`
}

// Experimental.
type TenantSpecKesAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm struct {
	// Experimental.
	TopologyKey *string `field:"required" json:"topologyKey" yaml:"topologyKey"`
	// Experimental.
	LabelSelector *TenantSpecKesAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector `field:"optional" json:"labelSelector" yaml:"labelSelector"`
	// Experimental.
	Namespaces *[]*string `field:"optional" json:"namespaces" yaml:"namespaces"`
}

// Experimental.
type TenantSpecKesAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector struct {
	// Experimental.
	MatchExpressions *[]*TenantSpecKesAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions `field:"optional" json:"matchExpressions" yaml:"matchExpressions"`
	// Experimental.
	MatchLabels *map[string]*string `field:"optional" json:"matchLabels" yaml:"matchLabels"`
}

// Experimental.
type TenantSpecKesAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions struct {
	// Experimental.
	Key *string `field:"required" json:"key" yaml:"key"`
	// Experimental.
	Operator *string `field:"required" json:"operator" yaml:"operator"`
	// Experimental.
	Values *[]*string `field:"optional" json:"values" yaml:"values"`
}

// Experimental.
type TenantSpecKesAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution struct {
	// Experimental.
	TopologyKey *string `field:"required" json:"topologyKey" yaml:"topologyKey"`
	// Experimental.
	LabelSelector *TenantSpecKesAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector `field:"optional" json:"labelSelector" yaml:"labelSelector"`
	// Experimental.
	Namespaces *[]*string `field:"optional" json:"namespaces" yaml:"namespaces"`
}

// Experimental.
type TenantSpecKesAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector struct {
	// Experimental.
	MatchExpressions *[]*TenantSpecKesAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions `field:"optional" json:"matchExpressions" yaml:"matchExpressions"`
	// Experimental.
	MatchLabels *map[string]*string `field:"optional" json:"matchLabels" yaml:"matchLabels"`
}

// Experimental.
type TenantSpecKesAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions struct {
	// Experimental.
	Key *string `field:"required" json:"key" yaml:"key"`
	// Experimental.
	Operator *string `field:"required" json:"operator" yaml:"operator"`
	// Experimental.
	Values *[]*string `field:"optional" json:"values" yaml:"values"`
}

// Experimental.
type TenantSpecKesClientCertSecret struct {
	// Experimental.
	Name *string `field:"required" json:"name" yaml:"name"`
	// Experimental.
	Type *string `field:"optional" json:"type" yaml:"type"`
}

// Experimental.
type TenantSpecKesExternalCertSecret struct {
	// Experimental.
	Name *string `field:"required" json:"name" yaml:"name"`
	// Experimental.
	Type *string `field:"optional" json:"type" yaml:"type"`
}

// Experimental.
type TenantSpecKesKesSecret struct {
	// Experimental.
	Name *string `field:"optional" json:"name" yaml:"name"`
}

// Experimental.
type TenantSpecKesResources struct {
	// Experimental.
	Limits *map[string]TenantSpecKesResourcesLimits `field:"optional" json:"limits" yaml:"limits"`
	// Experimental.
	Requests *map[string]TenantSpecKesResourcesRequests `field:"optional" json:"requests" yaml:"requests"`
}

// Experimental.
type TenantSpecKesResourcesLimits interface {
	// Experimental.
	Value() interface{}
}

// The jsii proxy struct for TenantSpecKesResourcesLimits
type jsiiProxy_TenantSpecKesResourcesLimits struct {
	_ byte // padding
}

func (j *jsiiProxy_TenantSpecKesResourcesLimits) Value() interface{} {
	var returns interface{}
	_jsii_.Get(
		j,
		"value",
		&returns,
	)
	return returns
}


// Experimental.
func TenantSpecKesResourcesLimits_FromNumber(value *float64) TenantSpecKesResourcesLimits {
	_init_.Initialize()

	var returns TenantSpecKesResourcesLimits

	_jsii_.StaticInvoke(
		"cdk8s-metaflow.minio.TenantSpecKesResourcesLimits",
		"fromNumber",
		[]interface{}{value},
		&returns,
	)

	return returns
}

// Experimental.
func TenantSpecKesResourcesLimits_FromString(value *string) TenantSpecKesResourcesLimits {
	_init_.Initialize()

	var returns TenantSpecKesResourcesLimits

	_jsii_.StaticInvoke(
		"cdk8s-metaflow.minio.TenantSpecKesResourcesLimits",
		"fromString",
		[]interface{}{value},
		&returns,
	)

	return returns
}

// Experimental.
type TenantSpecKesResourcesRequests interface {
	// Experimental.
	Value() interface{}
}

// The jsii proxy struct for TenantSpecKesResourcesRequests
type jsiiProxy_TenantSpecKesResourcesRequests struct {
	_ byte // padding
}

func (j *jsiiProxy_TenantSpecKesResourcesRequests) Value() interface{} {
	var returns interface{}
	_jsii_.Get(
		j,
		"value",
		&returns,
	)
	return returns
}


// Experimental.
func TenantSpecKesResourcesRequests_FromNumber(value *float64) TenantSpecKesResourcesRequests {
	_init_.Initialize()

	var returns TenantSpecKesResourcesRequests

	_jsii_.StaticInvoke(
		"cdk8s-metaflow.minio.TenantSpecKesResourcesRequests",
		"fromNumber",
		[]interface{}{value},
		&returns,
	)

	return returns
}

// Experimental.
func TenantSpecKesResourcesRequests_FromString(value *string) TenantSpecKesResourcesRequests {
	_init_.Initialize()

	var returns TenantSpecKesResourcesRequests

	_jsii_.StaticInvoke(
		"cdk8s-metaflow.minio.TenantSpecKesResourcesRequests",
		"fromString",
		[]interface{}{value},
		&returns,
	)

	return returns
}

// Experimental.
type TenantSpecKesSecurityContext struct {
	// Experimental.
	FsGroup *float64 `field:"optional" json:"fsGroup" yaml:"fsGroup"`
	// Experimental.
	FsGroupChangePolicy *string `field:"optional" json:"fsGroupChangePolicy" yaml:"fsGroupChangePolicy"`
	// Experimental.
	RunAsGroup *float64 `field:"optional" json:"runAsGroup" yaml:"runAsGroup"`
	// Experimental.
	RunAsNonRoot *bool `field:"optional" json:"runAsNonRoot" yaml:"runAsNonRoot"`
	// Experimental.
	RunAsUser *float64 `field:"optional" json:"runAsUser" yaml:"runAsUser"`
	// Experimental.
	SeccompProfile *TenantSpecKesSecurityContextSeccompProfile `field:"optional" json:"seccompProfile" yaml:"seccompProfile"`
	// Experimental.
	SeLinuxOptions *TenantSpecKesSecurityContextSeLinuxOptions `field:"optional" json:"seLinuxOptions" yaml:"seLinuxOptions"`
	// Experimental.
	SupplementalGroups *[]*float64 `field:"optional" json:"supplementalGroups" yaml:"supplementalGroups"`
	// Experimental.
	Sysctls *[]*TenantSpecKesSecurityContextSysctls `field:"optional" json:"sysctls" yaml:"sysctls"`
	// Experimental.
	WindowsOptions *TenantSpecKesSecurityContextWindowsOptions `field:"optional" json:"windowsOptions" yaml:"windowsOptions"`
}

// Experimental.
type TenantSpecKesSecurityContextSeLinuxOptions struct {
	// Experimental.
	Level *string `field:"optional" json:"level" yaml:"level"`
	// Experimental.
	Role *string `field:"optional" json:"role" yaml:"role"`
	// Experimental.
	Type *string `field:"optional" json:"type" yaml:"type"`
	// Experimental.
	User *string `field:"optional" json:"user" yaml:"user"`
}

// Experimental.
type TenantSpecKesSecurityContextSeccompProfile struct {
	// Experimental.
	Type *string `field:"required" json:"type" yaml:"type"`
	// Experimental.
	LocalhostProfile *string `field:"optional" json:"localhostProfile" yaml:"localhostProfile"`
}

// Experimental.
type TenantSpecKesSecurityContextSysctls struct {
	// Experimental.
	Name *string `field:"required" json:"name" yaml:"name"`
	// Experimental.
	Value *string `field:"required" json:"value" yaml:"value"`
}

// Experimental.
type TenantSpecKesSecurityContextWindowsOptions struct {
	// Experimental.
	GmsaCredentialSpec *string `field:"optional" json:"gmsaCredentialSpec" yaml:"gmsaCredentialSpec"`
	// Experimental.
	GmsaCredentialSpecName *string `field:"optional" json:"gmsaCredentialSpecName" yaml:"gmsaCredentialSpecName"`
	// Experimental.
	RunAsUserName *string `field:"optional" json:"runAsUserName" yaml:"runAsUserName"`
}

// Experimental.
type TenantSpecKesTolerations struct {
	// Experimental.
	Effect *string `field:"optional" json:"effect" yaml:"effect"`
	// Experimental.
	Key *string `field:"optional" json:"key" yaml:"key"`
	// Experimental.
	Operator *string `field:"optional" json:"operator" yaml:"operator"`
	// Experimental.
	TolerationSeconds *float64 `field:"optional" json:"tolerationSeconds" yaml:"tolerationSeconds"`
	// Experimental.
	Value *string `field:"optional" json:"value" yaml:"value"`
}

// Experimental.
type TenantSpecKesTopologySpreadConstraints struct {
	// Experimental.
	MaxSkew *float64 `field:"required" json:"maxSkew" yaml:"maxSkew"`
	// Experimental.
	TopologyKey *string `field:"required" json:"topologyKey" yaml:"topologyKey"`
	// Experimental.
	WhenUnsatisfiable *string `field:"required" json:"whenUnsatisfiable" yaml:"whenUnsatisfiable"`
	// Experimental.
	LabelSelector *TenantSpecKesTopologySpreadConstraintsLabelSelector `field:"optional" json:"labelSelector" yaml:"labelSelector"`
}

// Experimental.
type TenantSpecKesTopologySpreadConstraintsLabelSelector struct {
	// Experimental.
	MatchExpressions *[]*TenantSpecKesTopologySpreadConstraintsLabelSelectorMatchExpressions `field:"optional" json:"matchExpressions" yaml:"matchExpressions"`
	// Experimental.
	MatchLabels *map[string]*string `field:"optional" json:"matchLabels" yaml:"matchLabels"`
}

// Experimental.
type TenantSpecKesTopologySpreadConstraintsLabelSelectorMatchExpressions struct {
	// Experimental.
	Key *string `field:"required" json:"key" yaml:"key"`
	// Experimental.
	Operator *string `field:"required" json:"operator" yaml:"operator"`
	// Experimental.
	Values *[]*string `field:"optional" json:"values" yaml:"values"`
}

// Experimental.
type TenantSpecLog struct {
	// Experimental.
	Affinity *TenantSpecLogAffinity `field:"optional" json:"affinity" yaml:"affinity"`
	// Experimental.
	Annotations *map[string]*string `field:"optional" json:"annotations" yaml:"annotations"`
	// Experimental.
	Audit *TenantSpecLogAudit `field:"optional" json:"audit" yaml:"audit"`
	// Experimental.
	Db *TenantSpecLogDb `field:"optional" json:"db" yaml:"db"`
	// Experimental.
	Image *string `field:"optional" json:"image" yaml:"image"`
	// Experimental.
	Labels *map[string]*string `field:"optional" json:"labels" yaml:"labels"`
	// Experimental.
	NodeSelector *map[string]*string `field:"optional" json:"nodeSelector" yaml:"nodeSelector"`
	// Experimental.
	Resources *TenantSpecLogResources `field:"optional" json:"resources" yaml:"resources"`
	// Experimental.
	SecurityContext *TenantSpecLogSecurityContext `field:"optional" json:"securityContext" yaml:"securityContext"`
	// Experimental.
	ServiceAccountName *string `field:"optional" json:"serviceAccountName" yaml:"serviceAccountName"`
	// Experimental.
	Tolerations *[]*TenantSpecLogTolerations `field:"optional" json:"tolerations" yaml:"tolerations"`
	// Experimental.
	TopologySpreadConstraints *[]*TenantSpecLogTopologySpreadConstraints `field:"optional" json:"topologySpreadConstraints" yaml:"topologySpreadConstraints"`
}

// Experimental.
type TenantSpecLogAffinity struct {
	// Experimental.
	NodeAffinity *TenantSpecLogAffinityNodeAffinity `field:"optional" json:"nodeAffinity" yaml:"nodeAffinity"`
	// Experimental.
	PodAffinity *TenantSpecLogAffinityPodAffinity `field:"optional" json:"podAffinity" yaml:"podAffinity"`
	// Experimental.
	PodAntiAffinity *TenantSpecLogAffinityPodAntiAffinity `field:"optional" json:"podAntiAffinity" yaml:"podAntiAffinity"`
}

// Experimental.
type TenantSpecLogAffinityNodeAffinity struct {
	// Experimental.
	PreferredDuringSchedulingIgnoredDuringExecution *[]*TenantSpecLogAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution `field:"optional" json:"preferredDuringSchedulingIgnoredDuringExecution" yaml:"preferredDuringSchedulingIgnoredDuringExecution"`
	// Experimental.
	RequiredDuringSchedulingIgnoredDuringExecution *TenantSpecLogAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution `field:"optional" json:"requiredDuringSchedulingIgnoredDuringExecution" yaml:"requiredDuringSchedulingIgnoredDuringExecution"`
}

// Experimental.
type TenantSpecLogAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution struct {
	// Experimental.
	Preference *TenantSpecLogAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference `field:"required" json:"preference" yaml:"preference"`
	// Experimental.
	Weight *float64 `field:"required" json:"weight" yaml:"weight"`
}

// Experimental.
type TenantSpecLogAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference struct {
	// Experimental.
	MatchExpressions *[]*TenantSpecLogAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions `field:"optional" json:"matchExpressions" yaml:"matchExpressions"`
	// Experimental.
	MatchFields *[]*TenantSpecLogAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields `field:"optional" json:"matchFields" yaml:"matchFields"`
}

// Experimental.
type TenantSpecLogAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions struct {
	// Experimental.
	Key *string `field:"required" json:"key" yaml:"key"`
	// Experimental.
	Operator *string `field:"required" json:"operator" yaml:"operator"`
	// Experimental.
	Values *[]*string `field:"optional" json:"values" yaml:"values"`
}

// Experimental.
type TenantSpecLogAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields struct {
	// Experimental.
	Key *string `field:"required" json:"key" yaml:"key"`
	// Experimental.
	Operator *string `field:"required" json:"operator" yaml:"operator"`
	// Experimental.
	Values *[]*string `field:"optional" json:"values" yaml:"values"`
}

// Experimental.
type TenantSpecLogAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution struct {
	// Experimental.
	NodeSelectorTerms *[]*TenantSpecLogAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms `field:"required" json:"nodeSelectorTerms" yaml:"nodeSelectorTerms"`
}

// Experimental.
type TenantSpecLogAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms struct {
	// Experimental.
	MatchExpressions *[]*TenantSpecLogAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions `field:"optional" json:"matchExpressions" yaml:"matchExpressions"`
	// Experimental.
	MatchFields *[]*TenantSpecLogAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields `field:"optional" json:"matchFields" yaml:"matchFields"`
}

// Experimental.
type TenantSpecLogAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions struct {
	// Experimental.
	Key *string `field:"required" json:"key" yaml:"key"`
	// Experimental.
	Operator *string `field:"required" json:"operator" yaml:"operator"`
	// Experimental.
	Values *[]*string `field:"optional" json:"values" yaml:"values"`
}

// Experimental.
type TenantSpecLogAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields struct {
	// Experimental.
	Key *string `field:"required" json:"key" yaml:"key"`
	// Experimental.
	Operator *string `field:"required" json:"operator" yaml:"operator"`
	// Experimental.
	Values *[]*string `field:"optional" json:"values" yaml:"values"`
}

// Experimental.
type TenantSpecLogAffinityPodAffinity struct {
	// Experimental.
	PreferredDuringSchedulingIgnoredDuringExecution *[]*TenantSpecLogAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution `field:"optional" json:"preferredDuringSchedulingIgnoredDuringExecution" yaml:"preferredDuringSchedulingIgnoredDuringExecution"`
	// Experimental.
	RequiredDuringSchedulingIgnoredDuringExecution *[]*TenantSpecLogAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution `field:"optional" json:"requiredDuringSchedulingIgnoredDuringExecution" yaml:"requiredDuringSchedulingIgnoredDuringExecution"`
}

// Experimental.
type TenantSpecLogAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution struct {
	// Experimental.
	PodAffinityTerm *TenantSpecLogAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm `field:"required" json:"podAffinityTerm" yaml:"podAffinityTerm"`
	// Experimental.
	Weight *float64 `field:"required" json:"weight" yaml:"weight"`
}

// Experimental.
type TenantSpecLogAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm struct {
	// Experimental.
	TopologyKey *string `field:"required" json:"topologyKey" yaml:"topologyKey"`
	// Experimental.
	LabelSelector *TenantSpecLogAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector `field:"optional" json:"labelSelector" yaml:"labelSelector"`
	// Experimental.
	Namespaces *[]*string `field:"optional" json:"namespaces" yaml:"namespaces"`
}

// Experimental.
type TenantSpecLogAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector struct {
	// Experimental.
	MatchExpressions *[]*TenantSpecLogAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions `field:"optional" json:"matchExpressions" yaml:"matchExpressions"`
	// Experimental.
	MatchLabels *map[string]*string `field:"optional" json:"matchLabels" yaml:"matchLabels"`
}

// Experimental.
type TenantSpecLogAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions struct {
	// Experimental.
	Key *string `field:"required" json:"key" yaml:"key"`
	// Experimental.
	Operator *string `field:"required" json:"operator" yaml:"operator"`
	// Experimental.
	Values *[]*string `field:"optional" json:"values" yaml:"values"`
}

// Experimental.
type TenantSpecLogAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution struct {
	// Experimental.
	TopologyKey *string `field:"required" json:"topologyKey" yaml:"topologyKey"`
	// Experimental.
	LabelSelector *TenantSpecLogAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector `field:"optional" json:"labelSelector" yaml:"labelSelector"`
	// Experimental.
	Namespaces *[]*string `field:"optional" json:"namespaces" yaml:"namespaces"`
}

// Experimental.
type TenantSpecLogAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector struct {
	// Experimental.
	MatchExpressions *[]*TenantSpecLogAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions `field:"optional" json:"matchExpressions" yaml:"matchExpressions"`
	// Experimental.
	MatchLabels *map[string]*string `field:"optional" json:"matchLabels" yaml:"matchLabels"`
}

// Experimental.
type TenantSpecLogAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions struct {
	// Experimental.
	Key *string `field:"required" json:"key" yaml:"key"`
	// Experimental.
	Operator *string `field:"required" json:"operator" yaml:"operator"`
	// Experimental.
	Values *[]*string `field:"optional" json:"values" yaml:"values"`
}

// Experimental.
type TenantSpecLogAffinityPodAntiAffinity struct {
	// Experimental.
	PreferredDuringSchedulingIgnoredDuringExecution *[]*TenantSpecLogAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution `field:"optional" json:"preferredDuringSchedulingIgnoredDuringExecution" yaml:"preferredDuringSchedulingIgnoredDuringExecution"`
	// Experimental.
	RequiredDuringSchedulingIgnoredDuringExecution *[]*TenantSpecLogAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution `field:"optional" json:"requiredDuringSchedulingIgnoredDuringExecution" yaml:"requiredDuringSchedulingIgnoredDuringExecution"`
}

// Experimental.
type TenantSpecLogAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution struct {
	// Experimental.
	PodAffinityTerm *TenantSpecLogAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm `field:"required" json:"podAffinityTerm" yaml:"podAffinityTerm"`
	// Experimental.
	Weight *float64 `field:"required" json:"weight" yaml:"weight"`
}

// Experimental.
type TenantSpecLogAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm struct {
	// Experimental.
	TopologyKey *string `field:"required" json:"topologyKey" yaml:"topologyKey"`
	// Experimental.
	LabelSelector *TenantSpecLogAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector `field:"optional" json:"labelSelector" yaml:"labelSelector"`
	// Experimental.
	Namespaces *[]*string `field:"optional" json:"namespaces" yaml:"namespaces"`
}

// Experimental.
type TenantSpecLogAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector struct {
	// Experimental.
	MatchExpressions *[]*TenantSpecLogAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions `field:"optional" json:"matchExpressions" yaml:"matchExpressions"`
	// Experimental.
	MatchLabels *map[string]*string `field:"optional" json:"matchLabels" yaml:"matchLabels"`
}

// Experimental.
type TenantSpecLogAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions struct {
	// Experimental.
	Key *string `field:"required" json:"key" yaml:"key"`
	// Experimental.
	Operator *string `field:"required" json:"operator" yaml:"operator"`
	// Experimental.
	Values *[]*string `field:"optional" json:"values" yaml:"values"`
}

// Experimental.
type TenantSpecLogAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution struct {
	// Experimental.
	TopologyKey *string `field:"required" json:"topologyKey" yaml:"topologyKey"`
	// Experimental.
	LabelSelector *TenantSpecLogAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector `field:"optional" json:"labelSelector" yaml:"labelSelector"`
	// Experimental.
	Namespaces *[]*string `field:"optional" json:"namespaces" yaml:"namespaces"`
}

// Experimental.
type TenantSpecLogAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector struct {
	// Experimental.
	MatchExpressions *[]*TenantSpecLogAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions `field:"optional" json:"matchExpressions" yaml:"matchExpressions"`
	// Experimental.
	MatchLabels *map[string]*string `field:"optional" json:"matchLabels" yaml:"matchLabels"`
}

// Experimental.
type TenantSpecLogAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions struct {
	// Experimental.
	Key *string `field:"required" json:"key" yaml:"key"`
	// Experimental.
	Operator *string `field:"required" json:"operator" yaml:"operator"`
	// Experimental.
	Values *[]*string `field:"optional" json:"values" yaml:"values"`
}

// Experimental.
type TenantSpecLogAudit struct {
	// Experimental.
	DiskCapacityGb *float64 `field:"optional" json:"diskCapacityGb" yaml:"diskCapacityGb"`
}

// Experimental.
type TenantSpecLogDb struct {
	// Experimental.
	VolumeClaimTemplate *TenantSpecLogDbVolumeClaimTemplate `field:"required" json:"volumeClaimTemplate" yaml:"volumeClaimTemplate"`
	// Experimental.
	Affinity *TenantSpecLogDbAffinity `field:"optional" json:"affinity" yaml:"affinity"`
	// Experimental.
	Annotations *map[string]*string `field:"optional" json:"annotations" yaml:"annotations"`
	// Experimental.
	Image *string `field:"optional" json:"image" yaml:"image"`
	// Experimental.
	Initimage *string `field:"optional" json:"initimage" yaml:"initimage"`
	// Experimental.
	Labels *map[string]*string `field:"optional" json:"labels" yaml:"labels"`
	// Experimental.
	NodeSelector *map[string]*string `field:"optional" json:"nodeSelector" yaml:"nodeSelector"`
	// Experimental.
	Resources *TenantSpecLogDbResources `field:"optional" json:"resources" yaml:"resources"`
	// Experimental.
	SecurityContext *TenantSpecLogDbSecurityContext `field:"optional" json:"securityContext" yaml:"securityContext"`
	// Experimental.
	ServiceAccountName *string `field:"optional" json:"serviceAccountName" yaml:"serviceAccountName"`
	// Experimental.
	Tolerations *[]*TenantSpecLogDbTolerations `field:"optional" json:"tolerations" yaml:"tolerations"`
	// Experimental.
	TopologySpreadConstraints *[]*TenantSpecLogDbTopologySpreadConstraints `field:"optional" json:"topologySpreadConstraints" yaml:"topologySpreadConstraints"`
}

// Experimental.
type TenantSpecLogDbAffinity struct {
	// Experimental.
	NodeAffinity *TenantSpecLogDbAffinityNodeAffinity `field:"optional" json:"nodeAffinity" yaml:"nodeAffinity"`
	// Experimental.
	PodAffinity *TenantSpecLogDbAffinityPodAffinity `field:"optional" json:"podAffinity" yaml:"podAffinity"`
	// Experimental.
	PodAntiAffinity *TenantSpecLogDbAffinityPodAntiAffinity `field:"optional" json:"podAntiAffinity" yaml:"podAntiAffinity"`
}

// Experimental.
type TenantSpecLogDbAffinityNodeAffinity struct {
	// Experimental.
	PreferredDuringSchedulingIgnoredDuringExecution *[]*TenantSpecLogDbAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution `field:"optional" json:"preferredDuringSchedulingIgnoredDuringExecution" yaml:"preferredDuringSchedulingIgnoredDuringExecution"`
	// Experimental.
	RequiredDuringSchedulingIgnoredDuringExecution *TenantSpecLogDbAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution `field:"optional" json:"requiredDuringSchedulingIgnoredDuringExecution" yaml:"requiredDuringSchedulingIgnoredDuringExecution"`
}

// Experimental.
type TenantSpecLogDbAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution struct {
	// Experimental.
	Preference *TenantSpecLogDbAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference `field:"required" json:"preference" yaml:"preference"`
	// Experimental.
	Weight *float64 `field:"required" json:"weight" yaml:"weight"`
}

// Experimental.
type TenantSpecLogDbAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference struct {
	// Experimental.
	MatchExpressions *[]*TenantSpecLogDbAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions `field:"optional" json:"matchExpressions" yaml:"matchExpressions"`
	// Experimental.
	MatchFields *[]*TenantSpecLogDbAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields `field:"optional" json:"matchFields" yaml:"matchFields"`
}

// Experimental.
type TenantSpecLogDbAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions struct {
	// Experimental.
	Key *string `field:"required" json:"key" yaml:"key"`
	// Experimental.
	Operator *string `field:"required" json:"operator" yaml:"operator"`
	// Experimental.
	Values *[]*string `field:"optional" json:"values" yaml:"values"`
}

// Experimental.
type TenantSpecLogDbAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields struct {
	// Experimental.
	Key *string `field:"required" json:"key" yaml:"key"`
	// Experimental.
	Operator *string `field:"required" json:"operator" yaml:"operator"`
	// Experimental.
	Values *[]*string `field:"optional" json:"values" yaml:"values"`
}

// Experimental.
type TenantSpecLogDbAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution struct {
	// Experimental.
	NodeSelectorTerms *[]*TenantSpecLogDbAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms `field:"required" json:"nodeSelectorTerms" yaml:"nodeSelectorTerms"`
}

// Experimental.
type TenantSpecLogDbAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms struct {
	// Experimental.
	MatchExpressions *[]*TenantSpecLogDbAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions `field:"optional" json:"matchExpressions" yaml:"matchExpressions"`
	// Experimental.
	MatchFields *[]*TenantSpecLogDbAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields `field:"optional" json:"matchFields" yaml:"matchFields"`
}

// Experimental.
type TenantSpecLogDbAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions struct {
	// Experimental.
	Key *string `field:"required" json:"key" yaml:"key"`
	// Experimental.
	Operator *string `field:"required" json:"operator" yaml:"operator"`
	// Experimental.
	Values *[]*string `field:"optional" json:"values" yaml:"values"`
}

// Experimental.
type TenantSpecLogDbAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields struct {
	// Experimental.
	Key *string `field:"required" json:"key" yaml:"key"`
	// Experimental.
	Operator *string `field:"required" json:"operator" yaml:"operator"`
	// Experimental.
	Values *[]*string `field:"optional" json:"values" yaml:"values"`
}

// Experimental.
type TenantSpecLogDbAffinityPodAffinity struct {
	// Experimental.
	PreferredDuringSchedulingIgnoredDuringExecution *[]*TenantSpecLogDbAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution `field:"optional" json:"preferredDuringSchedulingIgnoredDuringExecution" yaml:"preferredDuringSchedulingIgnoredDuringExecution"`
	// Experimental.
	RequiredDuringSchedulingIgnoredDuringExecution *[]*TenantSpecLogDbAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution `field:"optional" json:"requiredDuringSchedulingIgnoredDuringExecution" yaml:"requiredDuringSchedulingIgnoredDuringExecution"`
}

// Experimental.
type TenantSpecLogDbAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution struct {
	// Experimental.
	PodAffinityTerm *TenantSpecLogDbAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm `field:"required" json:"podAffinityTerm" yaml:"podAffinityTerm"`
	// Experimental.
	Weight *float64 `field:"required" json:"weight" yaml:"weight"`
}

// Experimental.
type TenantSpecLogDbAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm struct {
	// Experimental.
	TopologyKey *string `field:"required" json:"topologyKey" yaml:"topologyKey"`
	// Experimental.
	LabelSelector *TenantSpecLogDbAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector `field:"optional" json:"labelSelector" yaml:"labelSelector"`
	// Experimental.
	Namespaces *[]*string `field:"optional" json:"namespaces" yaml:"namespaces"`
}

// Experimental.
type TenantSpecLogDbAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector struct {
	// Experimental.
	MatchExpressions *[]*TenantSpecLogDbAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions `field:"optional" json:"matchExpressions" yaml:"matchExpressions"`
	// Experimental.
	MatchLabels *map[string]*string `field:"optional" json:"matchLabels" yaml:"matchLabels"`
}

// Experimental.
type TenantSpecLogDbAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions struct {
	// Experimental.
	Key *string `field:"required" json:"key" yaml:"key"`
	// Experimental.
	Operator *string `field:"required" json:"operator" yaml:"operator"`
	// Experimental.
	Values *[]*string `field:"optional" json:"values" yaml:"values"`
}

// Experimental.
type TenantSpecLogDbAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution struct {
	// Experimental.
	TopologyKey *string `field:"required" json:"topologyKey" yaml:"topologyKey"`
	// Experimental.
	LabelSelector *TenantSpecLogDbAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector `field:"optional" json:"labelSelector" yaml:"labelSelector"`
	// Experimental.
	Namespaces *[]*string `field:"optional" json:"namespaces" yaml:"namespaces"`
}

// Experimental.
type TenantSpecLogDbAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector struct {
	// Experimental.
	MatchExpressions *[]*TenantSpecLogDbAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions `field:"optional" json:"matchExpressions" yaml:"matchExpressions"`
	// Experimental.
	MatchLabels *map[string]*string `field:"optional" json:"matchLabels" yaml:"matchLabels"`
}

// Experimental.
type TenantSpecLogDbAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions struct {
	// Experimental.
	Key *string `field:"required" json:"key" yaml:"key"`
	// Experimental.
	Operator *string `field:"required" json:"operator" yaml:"operator"`
	// Experimental.
	Values *[]*string `field:"optional" json:"values" yaml:"values"`
}

// Experimental.
type TenantSpecLogDbAffinityPodAntiAffinity struct {
	// Experimental.
	PreferredDuringSchedulingIgnoredDuringExecution *[]*TenantSpecLogDbAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution `field:"optional" json:"preferredDuringSchedulingIgnoredDuringExecution" yaml:"preferredDuringSchedulingIgnoredDuringExecution"`
	// Experimental.
	RequiredDuringSchedulingIgnoredDuringExecution *[]*TenantSpecLogDbAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution `field:"optional" json:"requiredDuringSchedulingIgnoredDuringExecution" yaml:"requiredDuringSchedulingIgnoredDuringExecution"`
}

// Experimental.
type TenantSpecLogDbAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution struct {
	// Experimental.
	PodAffinityTerm *TenantSpecLogDbAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm `field:"required" json:"podAffinityTerm" yaml:"podAffinityTerm"`
	// Experimental.
	Weight *float64 `field:"required" json:"weight" yaml:"weight"`
}

// Experimental.
type TenantSpecLogDbAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm struct {
	// Experimental.
	TopologyKey *string `field:"required" json:"topologyKey" yaml:"topologyKey"`
	// Experimental.
	LabelSelector *TenantSpecLogDbAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector `field:"optional" json:"labelSelector" yaml:"labelSelector"`
	// Experimental.
	Namespaces *[]*string `field:"optional" json:"namespaces" yaml:"namespaces"`
}

// Experimental.
type TenantSpecLogDbAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector struct {
	// Experimental.
	MatchExpressions *[]*TenantSpecLogDbAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions `field:"optional" json:"matchExpressions" yaml:"matchExpressions"`
	// Experimental.
	MatchLabels *map[string]*string `field:"optional" json:"matchLabels" yaml:"matchLabels"`
}

// Experimental.
type TenantSpecLogDbAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions struct {
	// Experimental.
	Key *string `field:"required" json:"key" yaml:"key"`
	// Experimental.
	Operator *string `field:"required" json:"operator" yaml:"operator"`
	// Experimental.
	Values *[]*string `field:"optional" json:"values" yaml:"values"`
}

// Experimental.
type TenantSpecLogDbAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution struct {
	// Experimental.
	TopologyKey *string `field:"required" json:"topologyKey" yaml:"topologyKey"`
	// Experimental.
	LabelSelector *TenantSpecLogDbAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector `field:"optional" json:"labelSelector" yaml:"labelSelector"`
	// Experimental.
	Namespaces *[]*string `field:"optional" json:"namespaces" yaml:"namespaces"`
}

// Experimental.
type TenantSpecLogDbAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector struct {
	// Experimental.
	MatchExpressions *[]*TenantSpecLogDbAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions `field:"optional" json:"matchExpressions" yaml:"matchExpressions"`
	// Experimental.
	MatchLabels *map[string]*string `field:"optional" json:"matchLabels" yaml:"matchLabels"`
}

// Experimental.
type TenantSpecLogDbAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions struct {
	// Experimental.
	Key *string `field:"required" json:"key" yaml:"key"`
	// Experimental.
	Operator *string `field:"required" json:"operator" yaml:"operator"`
	// Experimental.
	Values *[]*string `field:"optional" json:"values" yaml:"values"`
}

// Experimental.
type TenantSpecLogDbResources struct {
	// Experimental.
	Limits *map[string]TenantSpecLogDbResourcesLimits `field:"optional" json:"limits" yaml:"limits"`
	// Experimental.
	Requests *map[string]TenantSpecLogDbResourcesRequests `field:"optional" json:"requests" yaml:"requests"`
}

// Experimental.
type TenantSpecLogDbResourcesLimits interface {
	// Experimental.
	Value() interface{}
}

// The jsii proxy struct for TenantSpecLogDbResourcesLimits
type jsiiProxy_TenantSpecLogDbResourcesLimits struct {
	_ byte // padding
}

func (j *jsiiProxy_TenantSpecLogDbResourcesLimits) Value() interface{} {
	var returns interface{}
	_jsii_.Get(
		j,
		"value",
		&returns,
	)
	return returns
}


// Experimental.
func TenantSpecLogDbResourcesLimits_FromNumber(value *float64) TenantSpecLogDbResourcesLimits {
	_init_.Initialize()

	var returns TenantSpecLogDbResourcesLimits

	_jsii_.StaticInvoke(
		"cdk8s-metaflow.minio.TenantSpecLogDbResourcesLimits",
		"fromNumber",
		[]interface{}{value},
		&returns,
	)

	return returns
}

// Experimental.
func TenantSpecLogDbResourcesLimits_FromString(value *string) TenantSpecLogDbResourcesLimits {
	_init_.Initialize()

	var returns TenantSpecLogDbResourcesLimits

	_jsii_.StaticInvoke(
		"cdk8s-metaflow.minio.TenantSpecLogDbResourcesLimits",
		"fromString",
		[]interface{}{value},
		&returns,
	)

	return returns
}

// Experimental.
type TenantSpecLogDbResourcesRequests interface {
	// Experimental.
	Value() interface{}
}

// The jsii proxy struct for TenantSpecLogDbResourcesRequests
type jsiiProxy_TenantSpecLogDbResourcesRequests struct {
	_ byte // padding
}

func (j *jsiiProxy_TenantSpecLogDbResourcesRequests) Value() interface{} {
	var returns interface{}
	_jsii_.Get(
		j,
		"value",
		&returns,
	)
	return returns
}


// Experimental.
func TenantSpecLogDbResourcesRequests_FromNumber(value *float64) TenantSpecLogDbResourcesRequests {
	_init_.Initialize()

	var returns TenantSpecLogDbResourcesRequests

	_jsii_.StaticInvoke(
		"cdk8s-metaflow.minio.TenantSpecLogDbResourcesRequests",
		"fromNumber",
		[]interface{}{value},
		&returns,
	)

	return returns
}

// Experimental.
func TenantSpecLogDbResourcesRequests_FromString(value *string) TenantSpecLogDbResourcesRequests {
	_init_.Initialize()

	var returns TenantSpecLogDbResourcesRequests

	_jsii_.StaticInvoke(
		"cdk8s-metaflow.minio.TenantSpecLogDbResourcesRequests",
		"fromString",
		[]interface{}{value},
		&returns,
	)

	return returns
}

// Experimental.
type TenantSpecLogDbSecurityContext struct {
	// Experimental.
	FsGroup *float64 `field:"optional" json:"fsGroup" yaml:"fsGroup"`
	// Experimental.
	FsGroupChangePolicy *string `field:"optional" json:"fsGroupChangePolicy" yaml:"fsGroupChangePolicy"`
	// Experimental.
	RunAsGroup *float64 `field:"optional" json:"runAsGroup" yaml:"runAsGroup"`
	// Experimental.
	RunAsNonRoot *bool `field:"optional" json:"runAsNonRoot" yaml:"runAsNonRoot"`
	// Experimental.
	RunAsUser *float64 `field:"optional" json:"runAsUser" yaml:"runAsUser"`
	// Experimental.
	SeccompProfile *TenantSpecLogDbSecurityContextSeccompProfile `field:"optional" json:"seccompProfile" yaml:"seccompProfile"`
	// Experimental.
	SeLinuxOptions *TenantSpecLogDbSecurityContextSeLinuxOptions `field:"optional" json:"seLinuxOptions" yaml:"seLinuxOptions"`
	// Experimental.
	SupplementalGroups *[]*float64 `field:"optional" json:"supplementalGroups" yaml:"supplementalGroups"`
	// Experimental.
	Sysctls *[]*TenantSpecLogDbSecurityContextSysctls `field:"optional" json:"sysctls" yaml:"sysctls"`
	// Experimental.
	WindowsOptions *TenantSpecLogDbSecurityContextWindowsOptions `field:"optional" json:"windowsOptions" yaml:"windowsOptions"`
}

// Experimental.
type TenantSpecLogDbSecurityContextSeLinuxOptions struct {
	// Experimental.
	Level *string `field:"optional" json:"level" yaml:"level"`
	// Experimental.
	Role *string `field:"optional" json:"role" yaml:"role"`
	// Experimental.
	Type *string `field:"optional" json:"type" yaml:"type"`
	// Experimental.
	User *string `field:"optional" json:"user" yaml:"user"`
}

// Experimental.
type TenantSpecLogDbSecurityContextSeccompProfile struct {
	// Experimental.
	Type *string `field:"required" json:"type" yaml:"type"`
	// Experimental.
	LocalhostProfile *string `field:"optional" json:"localhostProfile" yaml:"localhostProfile"`
}

// Experimental.
type TenantSpecLogDbSecurityContextSysctls struct {
	// Experimental.
	Name *string `field:"required" json:"name" yaml:"name"`
	// Experimental.
	Value *string `field:"required" json:"value" yaml:"value"`
}

// Experimental.
type TenantSpecLogDbSecurityContextWindowsOptions struct {
	// Experimental.
	GmsaCredentialSpec *string `field:"optional" json:"gmsaCredentialSpec" yaml:"gmsaCredentialSpec"`
	// Experimental.
	GmsaCredentialSpecName *string `field:"optional" json:"gmsaCredentialSpecName" yaml:"gmsaCredentialSpecName"`
	// Experimental.
	RunAsUserName *string `field:"optional" json:"runAsUserName" yaml:"runAsUserName"`
}

// Experimental.
type TenantSpecLogDbTolerations struct {
	// Experimental.
	Effect *string `field:"optional" json:"effect" yaml:"effect"`
	// Experimental.
	Key *string `field:"optional" json:"key" yaml:"key"`
	// Experimental.
	Operator *string `field:"optional" json:"operator" yaml:"operator"`
	// Experimental.
	TolerationSeconds *float64 `field:"optional" json:"tolerationSeconds" yaml:"tolerationSeconds"`
	// Experimental.
	Value *string `field:"optional" json:"value" yaml:"value"`
}

// Experimental.
type TenantSpecLogDbTopologySpreadConstraints struct {
	// Experimental.
	MaxSkew *float64 `field:"required" json:"maxSkew" yaml:"maxSkew"`
	// Experimental.
	TopologyKey *string `field:"required" json:"topologyKey" yaml:"topologyKey"`
	// Experimental.
	WhenUnsatisfiable *string `field:"required" json:"whenUnsatisfiable" yaml:"whenUnsatisfiable"`
	// Experimental.
	LabelSelector *TenantSpecLogDbTopologySpreadConstraintsLabelSelector `field:"optional" json:"labelSelector" yaml:"labelSelector"`
}

// Experimental.
type TenantSpecLogDbTopologySpreadConstraintsLabelSelector struct {
	// Experimental.
	MatchExpressions *[]*TenantSpecLogDbTopologySpreadConstraintsLabelSelectorMatchExpressions `field:"optional" json:"matchExpressions" yaml:"matchExpressions"`
	// Experimental.
	MatchLabels *map[string]*string `field:"optional" json:"matchLabels" yaml:"matchLabels"`
}

// Experimental.
type TenantSpecLogDbTopologySpreadConstraintsLabelSelectorMatchExpressions struct {
	// Experimental.
	Key *string `field:"required" json:"key" yaml:"key"`
	// Experimental.
	Operator *string `field:"required" json:"operator" yaml:"operator"`
	// Experimental.
	Values *[]*string `field:"optional" json:"values" yaml:"values"`
}

// Experimental.
type TenantSpecLogDbVolumeClaimTemplate struct {
	// Experimental.
	ApiVersion *string `field:"optional" json:"apiVersion" yaml:"apiVersion"`
	// Experimental.
	Kind *string `field:"optional" json:"kind" yaml:"kind"`
	// Experimental.
	Metadata *TenantSpecLogDbVolumeClaimTemplateMetadata `field:"optional" json:"metadata" yaml:"metadata"`
	// Experimental.
	Spec *TenantSpecLogDbVolumeClaimTemplateSpec `field:"optional" json:"spec" yaml:"spec"`
	// Experimental.
	Status *TenantSpecLogDbVolumeClaimTemplateStatus `field:"optional" json:"status" yaml:"status"`
}

// Experimental.
type TenantSpecLogDbVolumeClaimTemplateMetadata struct {
	// Experimental.
	Annotations *map[string]*string `field:"optional" json:"annotations" yaml:"annotations"`
	// Experimental.
	Finalizers *[]*string `field:"optional" json:"finalizers" yaml:"finalizers"`
	// Experimental.
	Labels *map[string]*string `field:"optional" json:"labels" yaml:"labels"`
	// Experimental.
	Name *string `field:"optional" json:"name" yaml:"name"`
	// Experimental.
	Namespace *string `field:"optional" json:"namespace" yaml:"namespace"`
}

// Experimental.
type TenantSpecLogDbVolumeClaimTemplateSpec struct {
	// Experimental.
	AccessModes *[]*string `field:"optional" json:"accessModes" yaml:"accessModes"`
	// Experimental.
	DataSource *TenantSpecLogDbVolumeClaimTemplateSpecDataSource `field:"optional" json:"dataSource" yaml:"dataSource"`
	// Experimental.
	Resources *TenantSpecLogDbVolumeClaimTemplateSpecResources `field:"optional" json:"resources" yaml:"resources"`
	// Experimental.
	Selector *TenantSpecLogDbVolumeClaimTemplateSpecSelector `field:"optional" json:"selector" yaml:"selector"`
	// Experimental.
	StorageClassName *string `field:"optional" json:"storageClassName" yaml:"storageClassName"`
	// Experimental.
	VolumeMode *string `field:"optional" json:"volumeMode" yaml:"volumeMode"`
	// Experimental.
	VolumeName *string `field:"optional" json:"volumeName" yaml:"volumeName"`
}

// Experimental.
type TenantSpecLogDbVolumeClaimTemplateSpecDataSource struct {
	// Experimental.
	Kind *string `field:"required" json:"kind" yaml:"kind"`
	// Experimental.
	Name *string `field:"required" json:"name" yaml:"name"`
	// Experimental.
	ApiGroup *string `field:"optional" json:"apiGroup" yaml:"apiGroup"`
}

// Experimental.
type TenantSpecLogDbVolumeClaimTemplateSpecResources struct {
	// Experimental.
	Limits *map[string]TenantSpecLogDbVolumeClaimTemplateSpecResourcesLimits `field:"optional" json:"limits" yaml:"limits"`
	// Experimental.
	Requests *map[string]TenantSpecLogDbVolumeClaimTemplateSpecResourcesRequests `field:"optional" json:"requests" yaml:"requests"`
}

// Experimental.
type TenantSpecLogDbVolumeClaimTemplateSpecResourcesLimits interface {
	// Experimental.
	Value() interface{}
}

// The jsii proxy struct for TenantSpecLogDbVolumeClaimTemplateSpecResourcesLimits
type jsiiProxy_TenantSpecLogDbVolumeClaimTemplateSpecResourcesLimits struct {
	_ byte // padding
}

func (j *jsiiProxy_TenantSpecLogDbVolumeClaimTemplateSpecResourcesLimits) Value() interface{} {
	var returns interface{}
	_jsii_.Get(
		j,
		"value",
		&returns,
	)
	return returns
}


// Experimental.
func TenantSpecLogDbVolumeClaimTemplateSpecResourcesLimits_FromNumber(value *float64) TenantSpecLogDbVolumeClaimTemplateSpecResourcesLimits {
	_init_.Initialize()

	var returns TenantSpecLogDbVolumeClaimTemplateSpecResourcesLimits

	_jsii_.StaticInvoke(
		"cdk8s-metaflow.minio.TenantSpecLogDbVolumeClaimTemplateSpecResourcesLimits",
		"fromNumber",
		[]interface{}{value},
		&returns,
	)

	return returns
}

// Experimental.
func TenantSpecLogDbVolumeClaimTemplateSpecResourcesLimits_FromString(value *string) TenantSpecLogDbVolumeClaimTemplateSpecResourcesLimits {
	_init_.Initialize()

	var returns TenantSpecLogDbVolumeClaimTemplateSpecResourcesLimits

	_jsii_.StaticInvoke(
		"cdk8s-metaflow.minio.TenantSpecLogDbVolumeClaimTemplateSpecResourcesLimits",
		"fromString",
		[]interface{}{value},
		&returns,
	)

	return returns
}

// Experimental.
type TenantSpecLogDbVolumeClaimTemplateSpecResourcesRequests interface {
	// Experimental.
	Value() interface{}
}

// The jsii proxy struct for TenantSpecLogDbVolumeClaimTemplateSpecResourcesRequests
type jsiiProxy_TenantSpecLogDbVolumeClaimTemplateSpecResourcesRequests struct {
	_ byte // padding
}

func (j *jsiiProxy_TenantSpecLogDbVolumeClaimTemplateSpecResourcesRequests) Value() interface{} {
	var returns interface{}
	_jsii_.Get(
		j,
		"value",
		&returns,
	)
	return returns
}


// Experimental.
func TenantSpecLogDbVolumeClaimTemplateSpecResourcesRequests_FromNumber(value *float64) TenantSpecLogDbVolumeClaimTemplateSpecResourcesRequests {
	_init_.Initialize()

	var returns TenantSpecLogDbVolumeClaimTemplateSpecResourcesRequests

	_jsii_.StaticInvoke(
		"cdk8s-metaflow.minio.TenantSpecLogDbVolumeClaimTemplateSpecResourcesRequests",
		"fromNumber",
		[]interface{}{value},
		&returns,
	)

	return returns
}

// Experimental.
func TenantSpecLogDbVolumeClaimTemplateSpecResourcesRequests_FromString(value *string) TenantSpecLogDbVolumeClaimTemplateSpecResourcesRequests {
	_init_.Initialize()

	var returns TenantSpecLogDbVolumeClaimTemplateSpecResourcesRequests

	_jsii_.StaticInvoke(
		"cdk8s-metaflow.minio.TenantSpecLogDbVolumeClaimTemplateSpecResourcesRequests",
		"fromString",
		[]interface{}{value},
		&returns,
	)

	return returns
}

// Experimental.
type TenantSpecLogDbVolumeClaimTemplateSpecSelector struct {
	// Experimental.
	MatchExpressions *[]*TenantSpecLogDbVolumeClaimTemplateSpecSelectorMatchExpressions `field:"optional" json:"matchExpressions" yaml:"matchExpressions"`
	// Experimental.
	MatchLabels *map[string]*string `field:"optional" json:"matchLabels" yaml:"matchLabels"`
}

// Experimental.
type TenantSpecLogDbVolumeClaimTemplateSpecSelectorMatchExpressions struct {
	// Experimental.
	Key *string `field:"required" json:"key" yaml:"key"`
	// Experimental.
	Operator *string `field:"required" json:"operator" yaml:"operator"`
	// Experimental.
	Values *[]*string `field:"optional" json:"values" yaml:"values"`
}

// Experimental.
type TenantSpecLogDbVolumeClaimTemplateStatus struct {
	// Experimental.
	AccessModes *[]*string `field:"optional" json:"accessModes" yaml:"accessModes"`
	// Experimental.
	Capacity *map[string]TenantSpecLogDbVolumeClaimTemplateStatusCapacity `field:"optional" json:"capacity" yaml:"capacity"`
	// Experimental.
	Conditions *[]*TenantSpecLogDbVolumeClaimTemplateStatusConditions `field:"optional" json:"conditions" yaml:"conditions"`
	// Experimental.
	Phase *string `field:"optional" json:"phase" yaml:"phase"`
}

// Experimental.
type TenantSpecLogDbVolumeClaimTemplateStatusCapacity interface {
	// Experimental.
	Value() interface{}
}

// The jsii proxy struct for TenantSpecLogDbVolumeClaimTemplateStatusCapacity
type jsiiProxy_TenantSpecLogDbVolumeClaimTemplateStatusCapacity struct {
	_ byte // padding
}

func (j *jsiiProxy_TenantSpecLogDbVolumeClaimTemplateStatusCapacity) Value() interface{} {
	var returns interface{}
	_jsii_.Get(
		j,
		"value",
		&returns,
	)
	return returns
}


// Experimental.
func TenantSpecLogDbVolumeClaimTemplateStatusCapacity_FromNumber(value *float64) TenantSpecLogDbVolumeClaimTemplateStatusCapacity {
	_init_.Initialize()

	var returns TenantSpecLogDbVolumeClaimTemplateStatusCapacity

	_jsii_.StaticInvoke(
		"cdk8s-metaflow.minio.TenantSpecLogDbVolumeClaimTemplateStatusCapacity",
		"fromNumber",
		[]interface{}{value},
		&returns,
	)

	return returns
}

// Experimental.
func TenantSpecLogDbVolumeClaimTemplateStatusCapacity_FromString(value *string) TenantSpecLogDbVolumeClaimTemplateStatusCapacity {
	_init_.Initialize()

	var returns TenantSpecLogDbVolumeClaimTemplateStatusCapacity

	_jsii_.StaticInvoke(
		"cdk8s-metaflow.minio.TenantSpecLogDbVolumeClaimTemplateStatusCapacity",
		"fromString",
		[]interface{}{value},
		&returns,
	)

	return returns
}

// Experimental.
type TenantSpecLogDbVolumeClaimTemplateStatusConditions struct {
	// Experimental.
	Status *string `field:"required" json:"status" yaml:"status"`
	// Experimental.
	Type *string `field:"required" json:"type" yaml:"type"`
	// Experimental.
	LastProbeTime *time.Time `field:"optional" json:"lastProbeTime" yaml:"lastProbeTime"`
	// Experimental.
	LastTransitionTime *time.Time `field:"optional" json:"lastTransitionTime" yaml:"lastTransitionTime"`
	// Experimental.
	Message *string `field:"optional" json:"message" yaml:"message"`
	// Experimental.
	Reason *string `field:"optional" json:"reason" yaml:"reason"`
}

// Experimental.
type TenantSpecLogResources struct {
	// Experimental.
	Limits *map[string]TenantSpecLogResourcesLimits `field:"optional" json:"limits" yaml:"limits"`
	// Experimental.
	Requests *map[string]TenantSpecLogResourcesRequests `field:"optional" json:"requests" yaml:"requests"`
}

// Experimental.
type TenantSpecLogResourcesLimits interface {
	// Experimental.
	Value() interface{}
}

// The jsii proxy struct for TenantSpecLogResourcesLimits
type jsiiProxy_TenantSpecLogResourcesLimits struct {
	_ byte // padding
}

func (j *jsiiProxy_TenantSpecLogResourcesLimits) Value() interface{} {
	var returns interface{}
	_jsii_.Get(
		j,
		"value",
		&returns,
	)
	return returns
}


// Experimental.
func TenantSpecLogResourcesLimits_FromNumber(value *float64) TenantSpecLogResourcesLimits {
	_init_.Initialize()

	var returns TenantSpecLogResourcesLimits

	_jsii_.StaticInvoke(
		"cdk8s-metaflow.minio.TenantSpecLogResourcesLimits",
		"fromNumber",
		[]interface{}{value},
		&returns,
	)

	return returns
}

// Experimental.
func TenantSpecLogResourcesLimits_FromString(value *string) TenantSpecLogResourcesLimits {
	_init_.Initialize()

	var returns TenantSpecLogResourcesLimits

	_jsii_.StaticInvoke(
		"cdk8s-metaflow.minio.TenantSpecLogResourcesLimits",
		"fromString",
		[]interface{}{value},
		&returns,
	)

	return returns
}

// Experimental.
type TenantSpecLogResourcesRequests interface {
	// Experimental.
	Value() interface{}
}

// The jsii proxy struct for TenantSpecLogResourcesRequests
type jsiiProxy_TenantSpecLogResourcesRequests struct {
	_ byte // padding
}

func (j *jsiiProxy_TenantSpecLogResourcesRequests) Value() interface{} {
	var returns interface{}
	_jsii_.Get(
		j,
		"value",
		&returns,
	)
	return returns
}


// Experimental.
func TenantSpecLogResourcesRequests_FromNumber(value *float64) TenantSpecLogResourcesRequests {
	_init_.Initialize()

	var returns TenantSpecLogResourcesRequests

	_jsii_.StaticInvoke(
		"cdk8s-metaflow.minio.TenantSpecLogResourcesRequests",
		"fromNumber",
		[]interface{}{value},
		&returns,
	)

	return returns
}

// Experimental.
func TenantSpecLogResourcesRequests_FromString(value *string) TenantSpecLogResourcesRequests {
	_init_.Initialize()

	var returns TenantSpecLogResourcesRequests

	_jsii_.StaticInvoke(
		"cdk8s-metaflow.minio.TenantSpecLogResourcesRequests",
		"fromString",
		[]interface{}{value},
		&returns,
	)

	return returns
}

// Experimental.
type TenantSpecLogSecurityContext struct {
	// Experimental.
	FsGroup *float64 `field:"optional" json:"fsGroup" yaml:"fsGroup"`
	// Experimental.
	FsGroupChangePolicy *string `field:"optional" json:"fsGroupChangePolicy" yaml:"fsGroupChangePolicy"`
	// Experimental.
	RunAsGroup *float64 `field:"optional" json:"runAsGroup" yaml:"runAsGroup"`
	// Experimental.
	RunAsNonRoot *bool `field:"optional" json:"runAsNonRoot" yaml:"runAsNonRoot"`
	// Experimental.
	RunAsUser *float64 `field:"optional" json:"runAsUser" yaml:"runAsUser"`
	// Experimental.
	SeccompProfile *TenantSpecLogSecurityContextSeccompProfile `field:"optional" json:"seccompProfile" yaml:"seccompProfile"`
	// Experimental.
	SeLinuxOptions *TenantSpecLogSecurityContextSeLinuxOptions `field:"optional" json:"seLinuxOptions" yaml:"seLinuxOptions"`
	// Experimental.
	SupplementalGroups *[]*float64 `field:"optional" json:"supplementalGroups" yaml:"supplementalGroups"`
	// Experimental.
	Sysctls *[]*TenantSpecLogSecurityContextSysctls `field:"optional" json:"sysctls" yaml:"sysctls"`
	// Experimental.
	WindowsOptions *TenantSpecLogSecurityContextWindowsOptions `field:"optional" json:"windowsOptions" yaml:"windowsOptions"`
}

// Experimental.
type TenantSpecLogSecurityContextSeLinuxOptions struct {
	// Experimental.
	Level *string `field:"optional" json:"level" yaml:"level"`
	// Experimental.
	Role *string `field:"optional" json:"role" yaml:"role"`
	// Experimental.
	Type *string `field:"optional" json:"type" yaml:"type"`
	// Experimental.
	User *string `field:"optional" json:"user" yaml:"user"`
}

// Experimental.
type TenantSpecLogSecurityContextSeccompProfile struct {
	// Experimental.
	Type *string `field:"required" json:"type" yaml:"type"`
	// Experimental.
	LocalhostProfile *string `field:"optional" json:"localhostProfile" yaml:"localhostProfile"`
}

// Experimental.
type TenantSpecLogSecurityContextSysctls struct {
	// Experimental.
	Name *string `field:"required" json:"name" yaml:"name"`
	// Experimental.
	Value *string `field:"required" json:"value" yaml:"value"`
}

// Experimental.
type TenantSpecLogSecurityContextWindowsOptions struct {
	// Experimental.
	GmsaCredentialSpec *string `field:"optional" json:"gmsaCredentialSpec" yaml:"gmsaCredentialSpec"`
	// Experimental.
	GmsaCredentialSpecName *string `field:"optional" json:"gmsaCredentialSpecName" yaml:"gmsaCredentialSpecName"`
	// Experimental.
	RunAsUserName *string `field:"optional" json:"runAsUserName" yaml:"runAsUserName"`
}

// Experimental.
type TenantSpecLogTolerations struct {
	// Experimental.
	Effect *string `field:"optional" json:"effect" yaml:"effect"`
	// Experimental.
	Key *string `field:"optional" json:"key" yaml:"key"`
	// Experimental.
	Operator *string `field:"optional" json:"operator" yaml:"operator"`
	// Experimental.
	TolerationSeconds *float64 `field:"optional" json:"tolerationSeconds" yaml:"tolerationSeconds"`
	// Experimental.
	Value *string `field:"optional" json:"value" yaml:"value"`
}

// Experimental.
type TenantSpecLogTopologySpreadConstraints struct {
	// Experimental.
	MaxSkew *float64 `field:"required" json:"maxSkew" yaml:"maxSkew"`
	// Experimental.
	TopologyKey *string `field:"required" json:"topologyKey" yaml:"topologyKey"`
	// Experimental.
	WhenUnsatisfiable *string `field:"required" json:"whenUnsatisfiable" yaml:"whenUnsatisfiable"`
	// Experimental.
	LabelSelector *TenantSpecLogTopologySpreadConstraintsLabelSelector `field:"optional" json:"labelSelector" yaml:"labelSelector"`
}

// Experimental.
type TenantSpecLogTopologySpreadConstraintsLabelSelector struct {
	// Experimental.
	MatchExpressions *[]*TenantSpecLogTopologySpreadConstraintsLabelSelectorMatchExpressions `field:"optional" json:"matchExpressions" yaml:"matchExpressions"`
	// Experimental.
	MatchLabels *map[string]*string `field:"optional" json:"matchLabels" yaml:"matchLabels"`
}

// Experimental.
type TenantSpecLogTopologySpreadConstraintsLabelSelectorMatchExpressions struct {
	// Experimental.
	Key *string `field:"required" json:"key" yaml:"key"`
	// Experimental.
	Operator *string `field:"required" json:"operator" yaml:"operator"`
	// Experimental.
	Values *[]*string `field:"optional" json:"values" yaml:"values"`
}

// Experimental.
type TenantSpecPrometheus struct {
	// Experimental.
	Affinity *TenantSpecPrometheusAffinity `field:"optional" json:"affinity" yaml:"affinity"`
	// Experimental.
	Annotations *map[string]*string `field:"optional" json:"annotations" yaml:"annotations"`
	// Experimental.
	DiskCapacityGb *float64 `field:"optional" json:"diskCapacityGb" yaml:"diskCapacityGb"`
	// Experimental.
	Image *string `field:"optional" json:"image" yaml:"image"`
	// Experimental.
	Initimage *string `field:"optional" json:"initimage" yaml:"initimage"`
	// Experimental.
	Labels *map[string]*string `field:"optional" json:"labels" yaml:"labels"`
	// Experimental.
	NodeSelector *map[string]*string `field:"optional" json:"nodeSelector" yaml:"nodeSelector"`
	// Experimental.
	Resources *TenantSpecPrometheusResources `field:"optional" json:"resources" yaml:"resources"`
	// Experimental.
	SecurityContext *TenantSpecPrometheusSecurityContext `field:"optional" json:"securityContext" yaml:"securityContext"`
	// Experimental.
	ServiceAccountName *string `field:"optional" json:"serviceAccountName" yaml:"serviceAccountName"`
	// Experimental.
	Sidecarimage *string `field:"optional" json:"sidecarimage" yaml:"sidecarimage"`
	// Experimental.
	StorageClassName *string `field:"optional" json:"storageClassName" yaml:"storageClassName"`
	// Experimental.
	TopologySpreadConstraints *[]*TenantSpecPrometheusTopologySpreadConstraints `field:"optional" json:"topologySpreadConstraints" yaml:"topologySpreadConstraints"`
}

// Experimental.
type TenantSpecPrometheusAffinity struct {
	// Experimental.
	NodeAffinity *TenantSpecPrometheusAffinityNodeAffinity `field:"optional" json:"nodeAffinity" yaml:"nodeAffinity"`
	// Experimental.
	PodAffinity *TenantSpecPrometheusAffinityPodAffinity `field:"optional" json:"podAffinity" yaml:"podAffinity"`
	// Experimental.
	PodAntiAffinity *TenantSpecPrometheusAffinityPodAntiAffinity `field:"optional" json:"podAntiAffinity" yaml:"podAntiAffinity"`
}

// Experimental.
type TenantSpecPrometheusAffinityNodeAffinity struct {
	// Experimental.
	PreferredDuringSchedulingIgnoredDuringExecution *[]*TenantSpecPrometheusAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution `field:"optional" json:"preferredDuringSchedulingIgnoredDuringExecution" yaml:"preferredDuringSchedulingIgnoredDuringExecution"`
	// Experimental.
	RequiredDuringSchedulingIgnoredDuringExecution *TenantSpecPrometheusAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution `field:"optional" json:"requiredDuringSchedulingIgnoredDuringExecution" yaml:"requiredDuringSchedulingIgnoredDuringExecution"`
}

// Experimental.
type TenantSpecPrometheusAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution struct {
	// Experimental.
	Preference *TenantSpecPrometheusAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference `field:"required" json:"preference" yaml:"preference"`
	// Experimental.
	Weight *float64 `field:"required" json:"weight" yaml:"weight"`
}

// Experimental.
type TenantSpecPrometheusAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference struct {
	// Experimental.
	MatchExpressions *[]*TenantSpecPrometheusAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions `field:"optional" json:"matchExpressions" yaml:"matchExpressions"`
	// Experimental.
	MatchFields *[]*TenantSpecPrometheusAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields `field:"optional" json:"matchFields" yaml:"matchFields"`
}

// Experimental.
type TenantSpecPrometheusAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions struct {
	// Experimental.
	Key *string `field:"required" json:"key" yaml:"key"`
	// Experimental.
	Operator *string `field:"required" json:"operator" yaml:"operator"`
	// Experimental.
	Values *[]*string `field:"optional" json:"values" yaml:"values"`
}

// Experimental.
type TenantSpecPrometheusAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields struct {
	// Experimental.
	Key *string `field:"required" json:"key" yaml:"key"`
	// Experimental.
	Operator *string `field:"required" json:"operator" yaml:"operator"`
	// Experimental.
	Values *[]*string `field:"optional" json:"values" yaml:"values"`
}

// Experimental.
type TenantSpecPrometheusAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution struct {
	// Experimental.
	NodeSelectorTerms *[]*TenantSpecPrometheusAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms `field:"required" json:"nodeSelectorTerms" yaml:"nodeSelectorTerms"`
}

// Experimental.
type TenantSpecPrometheusAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms struct {
	// Experimental.
	MatchExpressions *[]*TenantSpecPrometheusAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions `field:"optional" json:"matchExpressions" yaml:"matchExpressions"`
	// Experimental.
	MatchFields *[]*TenantSpecPrometheusAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields `field:"optional" json:"matchFields" yaml:"matchFields"`
}

// Experimental.
type TenantSpecPrometheusAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions struct {
	// Experimental.
	Key *string `field:"required" json:"key" yaml:"key"`
	// Experimental.
	Operator *string `field:"required" json:"operator" yaml:"operator"`
	// Experimental.
	Values *[]*string `field:"optional" json:"values" yaml:"values"`
}

// Experimental.
type TenantSpecPrometheusAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields struct {
	// Experimental.
	Key *string `field:"required" json:"key" yaml:"key"`
	// Experimental.
	Operator *string `field:"required" json:"operator" yaml:"operator"`
	// Experimental.
	Values *[]*string `field:"optional" json:"values" yaml:"values"`
}

// Experimental.
type TenantSpecPrometheusAffinityPodAffinity struct {
	// Experimental.
	PreferredDuringSchedulingIgnoredDuringExecution *[]*TenantSpecPrometheusAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution `field:"optional" json:"preferredDuringSchedulingIgnoredDuringExecution" yaml:"preferredDuringSchedulingIgnoredDuringExecution"`
	// Experimental.
	RequiredDuringSchedulingIgnoredDuringExecution *[]*TenantSpecPrometheusAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution `field:"optional" json:"requiredDuringSchedulingIgnoredDuringExecution" yaml:"requiredDuringSchedulingIgnoredDuringExecution"`
}

// Experimental.
type TenantSpecPrometheusAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution struct {
	// Experimental.
	PodAffinityTerm *TenantSpecPrometheusAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm `field:"required" json:"podAffinityTerm" yaml:"podAffinityTerm"`
	// Experimental.
	Weight *float64 `field:"required" json:"weight" yaml:"weight"`
}

// Experimental.
type TenantSpecPrometheusAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm struct {
	// Experimental.
	TopologyKey *string `field:"required" json:"topologyKey" yaml:"topologyKey"`
	// Experimental.
	LabelSelector *TenantSpecPrometheusAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector `field:"optional" json:"labelSelector" yaml:"labelSelector"`
	// Experimental.
	Namespaces *[]*string `field:"optional" json:"namespaces" yaml:"namespaces"`
}

// Experimental.
type TenantSpecPrometheusAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector struct {
	// Experimental.
	MatchExpressions *[]*TenantSpecPrometheusAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions `field:"optional" json:"matchExpressions" yaml:"matchExpressions"`
	// Experimental.
	MatchLabels *map[string]*string `field:"optional" json:"matchLabels" yaml:"matchLabels"`
}

// Experimental.
type TenantSpecPrometheusAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions struct {
	// Experimental.
	Key *string `field:"required" json:"key" yaml:"key"`
	// Experimental.
	Operator *string `field:"required" json:"operator" yaml:"operator"`
	// Experimental.
	Values *[]*string `field:"optional" json:"values" yaml:"values"`
}

// Experimental.
type TenantSpecPrometheusAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution struct {
	// Experimental.
	TopologyKey *string `field:"required" json:"topologyKey" yaml:"topologyKey"`
	// Experimental.
	LabelSelector *TenantSpecPrometheusAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector `field:"optional" json:"labelSelector" yaml:"labelSelector"`
	// Experimental.
	Namespaces *[]*string `field:"optional" json:"namespaces" yaml:"namespaces"`
}

// Experimental.
type TenantSpecPrometheusAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector struct {
	// Experimental.
	MatchExpressions *[]*TenantSpecPrometheusAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions `field:"optional" json:"matchExpressions" yaml:"matchExpressions"`
	// Experimental.
	MatchLabels *map[string]*string `field:"optional" json:"matchLabels" yaml:"matchLabels"`
}

// Experimental.
type TenantSpecPrometheusAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions struct {
	// Experimental.
	Key *string `field:"required" json:"key" yaml:"key"`
	// Experimental.
	Operator *string `field:"required" json:"operator" yaml:"operator"`
	// Experimental.
	Values *[]*string `field:"optional" json:"values" yaml:"values"`
}

// Experimental.
type TenantSpecPrometheusAffinityPodAntiAffinity struct {
	// Experimental.
	PreferredDuringSchedulingIgnoredDuringExecution *[]*TenantSpecPrometheusAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution `field:"optional" json:"preferredDuringSchedulingIgnoredDuringExecution" yaml:"preferredDuringSchedulingIgnoredDuringExecution"`
	// Experimental.
	RequiredDuringSchedulingIgnoredDuringExecution *[]*TenantSpecPrometheusAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution `field:"optional" json:"requiredDuringSchedulingIgnoredDuringExecution" yaml:"requiredDuringSchedulingIgnoredDuringExecution"`
}

// Experimental.
type TenantSpecPrometheusAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution struct {
	// Experimental.
	PodAffinityTerm *TenantSpecPrometheusAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm `field:"required" json:"podAffinityTerm" yaml:"podAffinityTerm"`
	// Experimental.
	Weight *float64 `field:"required" json:"weight" yaml:"weight"`
}

// Experimental.
type TenantSpecPrometheusAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm struct {
	// Experimental.
	TopologyKey *string `field:"required" json:"topologyKey" yaml:"topologyKey"`
	// Experimental.
	LabelSelector *TenantSpecPrometheusAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector `field:"optional" json:"labelSelector" yaml:"labelSelector"`
	// Experimental.
	Namespaces *[]*string `field:"optional" json:"namespaces" yaml:"namespaces"`
}

// Experimental.
type TenantSpecPrometheusAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector struct {
	// Experimental.
	MatchExpressions *[]*TenantSpecPrometheusAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions `field:"optional" json:"matchExpressions" yaml:"matchExpressions"`
	// Experimental.
	MatchLabels *map[string]*string `field:"optional" json:"matchLabels" yaml:"matchLabels"`
}

// Experimental.
type TenantSpecPrometheusAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions struct {
	// Experimental.
	Key *string `field:"required" json:"key" yaml:"key"`
	// Experimental.
	Operator *string `field:"required" json:"operator" yaml:"operator"`
	// Experimental.
	Values *[]*string `field:"optional" json:"values" yaml:"values"`
}

// Experimental.
type TenantSpecPrometheusAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution struct {
	// Experimental.
	TopologyKey *string `field:"required" json:"topologyKey" yaml:"topologyKey"`
	// Experimental.
	LabelSelector *TenantSpecPrometheusAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector `field:"optional" json:"labelSelector" yaml:"labelSelector"`
	// Experimental.
	Namespaces *[]*string `field:"optional" json:"namespaces" yaml:"namespaces"`
}

// Experimental.
type TenantSpecPrometheusAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector struct {
	// Experimental.
	MatchExpressions *[]*TenantSpecPrometheusAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions `field:"optional" json:"matchExpressions" yaml:"matchExpressions"`
	// Experimental.
	MatchLabels *map[string]*string `field:"optional" json:"matchLabels" yaml:"matchLabels"`
}

// Experimental.
type TenantSpecPrometheusAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions struct {
	// Experimental.
	Key *string `field:"required" json:"key" yaml:"key"`
	// Experimental.
	Operator *string `field:"required" json:"operator" yaml:"operator"`
	// Experimental.
	Values *[]*string `field:"optional" json:"values" yaml:"values"`
}

// Experimental.
type TenantSpecPrometheusResources struct {
	// Experimental.
	Limits *map[string]TenantSpecPrometheusResourcesLimits `field:"optional" json:"limits" yaml:"limits"`
	// Experimental.
	Requests *map[string]TenantSpecPrometheusResourcesRequests `field:"optional" json:"requests" yaml:"requests"`
}

// Experimental.
type TenantSpecPrometheusResourcesLimits interface {
	// Experimental.
	Value() interface{}
}

// The jsii proxy struct for TenantSpecPrometheusResourcesLimits
type jsiiProxy_TenantSpecPrometheusResourcesLimits struct {
	_ byte // padding
}

func (j *jsiiProxy_TenantSpecPrometheusResourcesLimits) Value() interface{} {
	var returns interface{}
	_jsii_.Get(
		j,
		"value",
		&returns,
	)
	return returns
}


// Experimental.
func TenantSpecPrometheusResourcesLimits_FromNumber(value *float64) TenantSpecPrometheusResourcesLimits {
	_init_.Initialize()

	var returns TenantSpecPrometheusResourcesLimits

	_jsii_.StaticInvoke(
		"cdk8s-metaflow.minio.TenantSpecPrometheusResourcesLimits",
		"fromNumber",
		[]interface{}{value},
		&returns,
	)

	return returns
}

// Experimental.
func TenantSpecPrometheusResourcesLimits_FromString(value *string) TenantSpecPrometheusResourcesLimits {
	_init_.Initialize()

	var returns TenantSpecPrometheusResourcesLimits

	_jsii_.StaticInvoke(
		"cdk8s-metaflow.minio.TenantSpecPrometheusResourcesLimits",
		"fromString",
		[]interface{}{value},
		&returns,
	)

	return returns
}

// Experimental.
type TenantSpecPrometheusResourcesRequests interface {
	// Experimental.
	Value() interface{}
}

// The jsii proxy struct for TenantSpecPrometheusResourcesRequests
type jsiiProxy_TenantSpecPrometheusResourcesRequests struct {
	_ byte // padding
}

func (j *jsiiProxy_TenantSpecPrometheusResourcesRequests) Value() interface{} {
	var returns interface{}
	_jsii_.Get(
		j,
		"value",
		&returns,
	)
	return returns
}


// Experimental.
func TenantSpecPrometheusResourcesRequests_FromNumber(value *float64) TenantSpecPrometheusResourcesRequests {
	_init_.Initialize()

	var returns TenantSpecPrometheusResourcesRequests

	_jsii_.StaticInvoke(
		"cdk8s-metaflow.minio.TenantSpecPrometheusResourcesRequests",
		"fromNumber",
		[]interface{}{value},
		&returns,
	)

	return returns
}

// Experimental.
func TenantSpecPrometheusResourcesRequests_FromString(value *string) TenantSpecPrometheusResourcesRequests {
	_init_.Initialize()

	var returns TenantSpecPrometheusResourcesRequests

	_jsii_.StaticInvoke(
		"cdk8s-metaflow.minio.TenantSpecPrometheusResourcesRequests",
		"fromString",
		[]interface{}{value},
		&returns,
	)

	return returns
}

// Experimental.
type TenantSpecPrometheusSecurityContext struct {
	// Experimental.
	FsGroup *float64 `field:"optional" json:"fsGroup" yaml:"fsGroup"`
	// Experimental.
	FsGroupChangePolicy *string `field:"optional" json:"fsGroupChangePolicy" yaml:"fsGroupChangePolicy"`
	// Experimental.
	RunAsGroup *float64 `field:"optional" json:"runAsGroup" yaml:"runAsGroup"`
	// Experimental.
	RunAsNonRoot *bool `field:"optional" json:"runAsNonRoot" yaml:"runAsNonRoot"`
	// Experimental.
	RunAsUser *float64 `field:"optional" json:"runAsUser" yaml:"runAsUser"`
	// Experimental.
	SeccompProfile *TenantSpecPrometheusSecurityContextSeccompProfile `field:"optional" json:"seccompProfile" yaml:"seccompProfile"`
	// Experimental.
	SeLinuxOptions *TenantSpecPrometheusSecurityContextSeLinuxOptions `field:"optional" json:"seLinuxOptions" yaml:"seLinuxOptions"`
	// Experimental.
	SupplementalGroups *[]*float64 `field:"optional" json:"supplementalGroups" yaml:"supplementalGroups"`
	// Experimental.
	Sysctls *[]*TenantSpecPrometheusSecurityContextSysctls `field:"optional" json:"sysctls" yaml:"sysctls"`
	// Experimental.
	WindowsOptions *TenantSpecPrometheusSecurityContextWindowsOptions `field:"optional" json:"windowsOptions" yaml:"windowsOptions"`
}

// Experimental.
type TenantSpecPrometheusSecurityContextSeLinuxOptions struct {
	// Experimental.
	Level *string `field:"optional" json:"level" yaml:"level"`
	// Experimental.
	Role *string `field:"optional" json:"role" yaml:"role"`
	// Experimental.
	Type *string `field:"optional" json:"type" yaml:"type"`
	// Experimental.
	User *string `field:"optional" json:"user" yaml:"user"`
}

// Experimental.
type TenantSpecPrometheusSecurityContextSeccompProfile struct {
	// Experimental.
	Type *string `field:"required" json:"type" yaml:"type"`
	// Experimental.
	LocalhostProfile *string `field:"optional" json:"localhostProfile" yaml:"localhostProfile"`
}

// Experimental.
type TenantSpecPrometheusSecurityContextSysctls struct {
	// Experimental.
	Name *string `field:"required" json:"name" yaml:"name"`
	// Experimental.
	Value *string `field:"required" json:"value" yaml:"value"`
}

// Experimental.
type TenantSpecPrometheusSecurityContextWindowsOptions struct {
	// Experimental.
	GmsaCredentialSpec *string `field:"optional" json:"gmsaCredentialSpec" yaml:"gmsaCredentialSpec"`
	// Experimental.
	GmsaCredentialSpecName *string `field:"optional" json:"gmsaCredentialSpecName" yaml:"gmsaCredentialSpecName"`
	// Experimental.
	RunAsUserName *string `field:"optional" json:"runAsUserName" yaml:"runAsUserName"`
}

// Experimental.
type TenantSpecPrometheusTopologySpreadConstraints struct {
	// Experimental.
	MaxSkew *float64 `field:"required" json:"maxSkew" yaml:"maxSkew"`
	// Experimental.
	TopologyKey *string `field:"required" json:"topologyKey" yaml:"topologyKey"`
	// Experimental.
	WhenUnsatisfiable *string `field:"required" json:"whenUnsatisfiable" yaml:"whenUnsatisfiable"`
	// Experimental.
	LabelSelector *TenantSpecPrometheusTopologySpreadConstraintsLabelSelector `field:"optional" json:"labelSelector" yaml:"labelSelector"`
}

// Experimental.
type TenantSpecPrometheusTopologySpreadConstraintsLabelSelector struct {
	// Experimental.
	MatchExpressions *[]*TenantSpecPrometheusTopologySpreadConstraintsLabelSelectorMatchExpressions `field:"optional" json:"matchExpressions" yaml:"matchExpressions"`
	// Experimental.
	MatchLabels *map[string]*string `field:"optional" json:"matchLabels" yaml:"matchLabels"`
}

// Experimental.
type TenantSpecPrometheusTopologySpreadConstraintsLabelSelectorMatchExpressions struct {
	// Experimental.
	Key *string `field:"required" json:"key" yaml:"key"`
	// Experimental.
	Operator *string `field:"required" json:"operator" yaml:"operator"`
	// Experimental.
	Values *[]*string `field:"optional" json:"values" yaml:"values"`
}

// Experimental.
type TenantSpecS3 struct {
	// Experimental.
	BucketDns *bool `field:"optional" json:"bucketDns" yaml:"bucketDns"`
}

// Experimental.
type TenantSpecSecurityContext struct {
	// Experimental.
	FsGroup *float64 `field:"optional" json:"fsGroup" yaml:"fsGroup"`
	// Experimental.
	FsGroupChangePolicy *string `field:"optional" json:"fsGroupChangePolicy" yaml:"fsGroupChangePolicy"`
	// Experimental.
	RunAsGroup *float64 `field:"optional" json:"runAsGroup" yaml:"runAsGroup"`
	// Experimental.
	RunAsNonRoot *bool `field:"optional" json:"runAsNonRoot" yaml:"runAsNonRoot"`
	// Experimental.
	RunAsUser *float64 `field:"optional" json:"runAsUser" yaml:"runAsUser"`
	// Experimental.
	SeccompProfile *TenantSpecSecurityContextSeccompProfile `field:"optional" json:"seccompProfile" yaml:"seccompProfile"`
	// Experimental.
	SeLinuxOptions *TenantSpecSecurityContextSeLinuxOptions `field:"optional" json:"seLinuxOptions" yaml:"seLinuxOptions"`
	// Experimental.
	SupplementalGroups *[]*float64 `field:"optional" json:"supplementalGroups" yaml:"supplementalGroups"`
	// Experimental.
	Sysctls *[]*TenantSpecSecurityContextSysctls `field:"optional" json:"sysctls" yaml:"sysctls"`
	// Experimental.
	WindowsOptions *TenantSpecSecurityContextWindowsOptions `field:"optional" json:"windowsOptions" yaml:"windowsOptions"`
}

// Experimental.
type TenantSpecSecurityContextSeLinuxOptions struct {
	// Experimental.
	Level *string `field:"optional" json:"level" yaml:"level"`
	// Experimental.
	Role *string `field:"optional" json:"role" yaml:"role"`
	// Experimental.
	Type *string `field:"optional" json:"type" yaml:"type"`
	// Experimental.
	User *string `field:"optional" json:"user" yaml:"user"`
}

// Experimental.
type TenantSpecSecurityContextSeccompProfile struct {
	// Experimental.
	Type *string `field:"required" json:"type" yaml:"type"`
	// Experimental.
	LocalhostProfile *string `field:"optional" json:"localhostProfile" yaml:"localhostProfile"`
}

// Experimental.
type TenantSpecSecurityContextSysctls struct {
	// Experimental.
	Name *string `field:"required" json:"name" yaml:"name"`
	// Experimental.
	Value *string `field:"required" json:"value" yaml:"value"`
}

// Experimental.
type TenantSpecSecurityContextWindowsOptions struct {
	// Experimental.
	GmsaCredentialSpec *string `field:"optional" json:"gmsaCredentialSpec" yaml:"gmsaCredentialSpec"`
	// Experimental.
	GmsaCredentialSpecName *string `field:"optional" json:"gmsaCredentialSpecName" yaml:"gmsaCredentialSpecName"`
	// Experimental.
	RunAsUserName *string `field:"optional" json:"runAsUserName" yaml:"runAsUserName"`
}

// Experimental.
type TenantSpecSideCars struct {
	// Experimental.
	Containers *[]*TenantSpecSideCarsContainers `field:"required" json:"containers" yaml:"containers"`
	// Experimental.
	VolumeClaimTemplates *[]*TenantSpecSideCarsVolumeClaimTemplates `field:"optional" json:"volumeClaimTemplates" yaml:"volumeClaimTemplates"`
	// Experimental.
	Volumes *[]*TenantSpecSideCarsVolumes `field:"optional" json:"volumes" yaml:"volumes"`
}

// Experimental.
type TenantSpecSideCarsContainers struct {
	// Experimental.
	Name *string `field:"required" json:"name" yaml:"name"`
	// Experimental.
	Args *[]*string `field:"optional" json:"args" yaml:"args"`
	// Experimental.
	Command *[]*string `field:"optional" json:"command" yaml:"command"`
	// Experimental.
	Env *[]*TenantSpecSideCarsContainersEnv `field:"optional" json:"env" yaml:"env"`
	// Experimental.
	EnvFrom *[]*TenantSpecSideCarsContainersEnvFrom `field:"optional" json:"envFrom" yaml:"envFrom"`
	// Experimental.
	Image *string `field:"optional" json:"image" yaml:"image"`
	// Experimental.
	ImagePullPolicy *string `field:"optional" json:"imagePullPolicy" yaml:"imagePullPolicy"`
	// Experimental.
	Lifecycle *TenantSpecSideCarsContainersLifecycle `field:"optional" json:"lifecycle" yaml:"lifecycle"`
	// Experimental.
	LivenessProbe *TenantSpecSideCarsContainersLivenessProbe `field:"optional" json:"livenessProbe" yaml:"livenessProbe"`
	// Experimental.
	Ports *[]*TenantSpecSideCarsContainersPorts `field:"optional" json:"ports" yaml:"ports"`
	// Experimental.
	ReadinessProbe *TenantSpecSideCarsContainersReadinessProbe `field:"optional" json:"readinessProbe" yaml:"readinessProbe"`
	// Experimental.
	Resources *TenantSpecSideCarsContainersResources `field:"optional" json:"resources" yaml:"resources"`
	// Experimental.
	SecurityContext *TenantSpecSideCarsContainersSecurityContext `field:"optional" json:"securityContext" yaml:"securityContext"`
	// Experimental.
	StartupProbe *TenantSpecSideCarsContainersStartupProbe `field:"optional" json:"startupProbe" yaml:"startupProbe"`
	// Experimental.
	Stdin *bool `field:"optional" json:"stdin" yaml:"stdin"`
	// Experimental.
	StdinOnce *bool `field:"optional" json:"stdinOnce" yaml:"stdinOnce"`
	// Experimental.
	TerminationMessagePath *string `field:"optional" json:"terminationMessagePath" yaml:"terminationMessagePath"`
	// Experimental.
	TerminationMessagePolicy *string `field:"optional" json:"terminationMessagePolicy" yaml:"terminationMessagePolicy"`
	// Experimental.
	Tty *bool `field:"optional" json:"tty" yaml:"tty"`
	// Experimental.
	VolumeDevices *[]*TenantSpecSideCarsContainersVolumeDevices `field:"optional" json:"volumeDevices" yaml:"volumeDevices"`
	// Experimental.
	VolumeMounts *[]*TenantSpecSideCarsContainersVolumeMounts `field:"optional" json:"volumeMounts" yaml:"volumeMounts"`
	// Experimental.
	WorkingDir *string `field:"optional" json:"workingDir" yaml:"workingDir"`
}

// Experimental.
type TenantSpecSideCarsContainersEnv struct {
	// Experimental.
	Name *string `field:"required" json:"name" yaml:"name"`
	// Experimental.
	Value *string `field:"optional" json:"value" yaml:"value"`
	// Experimental.
	ValueFrom *TenantSpecSideCarsContainersEnvValueFrom `field:"optional" json:"valueFrom" yaml:"valueFrom"`
}

// Experimental.
type TenantSpecSideCarsContainersEnvFrom struct {
	// Experimental.
	ConfigMapRef *TenantSpecSideCarsContainersEnvFromConfigMapRef `field:"optional" json:"configMapRef" yaml:"configMapRef"`
	// Experimental.
	Prefix *string `field:"optional" json:"prefix" yaml:"prefix"`
	// Experimental.
	SecretRef *TenantSpecSideCarsContainersEnvFromSecretRef `field:"optional" json:"secretRef" yaml:"secretRef"`
}

// Experimental.
type TenantSpecSideCarsContainersEnvFromConfigMapRef struct {
	// Experimental.
	Name *string `field:"optional" json:"name" yaml:"name"`
	// Experimental.
	Optional *bool `field:"optional" json:"optional" yaml:"optional"`
}

// Experimental.
type TenantSpecSideCarsContainersEnvFromSecretRef struct {
	// Experimental.
	Name *string `field:"optional" json:"name" yaml:"name"`
	// Experimental.
	Optional *bool `field:"optional" json:"optional" yaml:"optional"`
}

// Experimental.
type TenantSpecSideCarsContainersEnvValueFrom struct {
	// Experimental.
	ConfigMapKeyRef *TenantSpecSideCarsContainersEnvValueFromConfigMapKeyRef `field:"optional" json:"configMapKeyRef" yaml:"configMapKeyRef"`
	// Experimental.
	FieldRef *TenantSpecSideCarsContainersEnvValueFromFieldRef `field:"optional" json:"fieldRef" yaml:"fieldRef"`
	// Experimental.
	ResourceFieldRef *TenantSpecSideCarsContainersEnvValueFromResourceFieldRef `field:"optional" json:"resourceFieldRef" yaml:"resourceFieldRef"`
	// Experimental.
	SecretKeyRef *TenantSpecSideCarsContainersEnvValueFromSecretKeyRef `field:"optional" json:"secretKeyRef" yaml:"secretKeyRef"`
}

// Experimental.
type TenantSpecSideCarsContainersEnvValueFromConfigMapKeyRef struct {
	// Experimental.
	Key *string `field:"required" json:"key" yaml:"key"`
	// Experimental.
	Name *string `field:"optional" json:"name" yaml:"name"`
	// Experimental.
	Optional *bool `field:"optional" json:"optional" yaml:"optional"`
}

// Experimental.
type TenantSpecSideCarsContainersEnvValueFromFieldRef struct {
	// Experimental.
	FieldPath *string `field:"required" json:"fieldPath" yaml:"fieldPath"`
	// Experimental.
	ApiVersion *string `field:"optional" json:"apiVersion" yaml:"apiVersion"`
}

// Experimental.
type TenantSpecSideCarsContainersEnvValueFromResourceFieldRef struct {
	// Experimental.
	Resource *string `field:"required" json:"resource" yaml:"resource"`
	// Experimental.
	ContainerName *string `field:"optional" json:"containerName" yaml:"containerName"`
	// Experimental.
	Divisor TenantSpecSideCarsContainersEnvValueFromResourceFieldRefDivisor `field:"optional" json:"divisor" yaml:"divisor"`
}

// Experimental.
type TenantSpecSideCarsContainersEnvValueFromResourceFieldRefDivisor interface {
	// Experimental.
	Value() interface{}
}

// The jsii proxy struct for TenantSpecSideCarsContainersEnvValueFromResourceFieldRefDivisor
type jsiiProxy_TenantSpecSideCarsContainersEnvValueFromResourceFieldRefDivisor struct {
	_ byte // padding
}

func (j *jsiiProxy_TenantSpecSideCarsContainersEnvValueFromResourceFieldRefDivisor) Value() interface{} {
	var returns interface{}
	_jsii_.Get(
		j,
		"value",
		&returns,
	)
	return returns
}


// Experimental.
func TenantSpecSideCarsContainersEnvValueFromResourceFieldRefDivisor_FromNumber(value *float64) TenantSpecSideCarsContainersEnvValueFromResourceFieldRefDivisor {
	_init_.Initialize()

	var returns TenantSpecSideCarsContainersEnvValueFromResourceFieldRefDivisor

	_jsii_.StaticInvoke(
		"cdk8s-metaflow.minio.TenantSpecSideCarsContainersEnvValueFromResourceFieldRefDivisor",
		"fromNumber",
		[]interface{}{value},
		&returns,
	)

	return returns
}

// Experimental.
func TenantSpecSideCarsContainersEnvValueFromResourceFieldRefDivisor_FromString(value *string) TenantSpecSideCarsContainersEnvValueFromResourceFieldRefDivisor {
	_init_.Initialize()

	var returns TenantSpecSideCarsContainersEnvValueFromResourceFieldRefDivisor

	_jsii_.StaticInvoke(
		"cdk8s-metaflow.minio.TenantSpecSideCarsContainersEnvValueFromResourceFieldRefDivisor",
		"fromString",
		[]interface{}{value},
		&returns,
	)

	return returns
}

// Experimental.
type TenantSpecSideCarsContainersEnvValueFromSecretKeyRef struct {
	// Experimental.
	Key *string `field:"required" json:"key" yaml:"key"`
	// Experimental.
	Name *string `field:"optional" json:"name" yaml:"name"`
	// Experimental.
	Optional *bool `field:"optional" json:"optional" yaml:"optional"`
}

// Experimental.
type TenantSpecSideCarsContainersLifecycle struct {
	// Experimental.
	PostStart *TenantSpecSideCarsContainersLifecyclePostStart `field:"optional" json:"postStart" yaml:"postStart"`
	// Experimental.
	PreStop *TenantSpecSideCarsContainersLifecyclePreStop `field:"optional" json:"preStop" yaml:"preStop"`
}

// Experimental.
type TenantSpecSideCarsContainersLifecyclePostStart struct {
	// Experimental.
	Exec *TenantSpecSideCarsContainersLifecyclePostStartExec `field:"optional" json:"exec" yaml:"exec"`
	// Experimental.
	HttpGet *TenantSpecSideCarsContainersLifecyclePostStartHttpGet `field:"optional" json:"httpGet" yaml:"httpGet"`
	// Experimental.
	TcpSocket *TenantSpecSideCarsContainersLifecyclePostStartTcpSocket `field:"optional" json:"tcpSocket" yaml:"tcpSocket"`
}

// Experimental.
type TenantSpecSideCarsContainersLifecyclePostStartExec struct {
	// Experimental.
	Command *[]*string `field:"optional" json:"command" yaml:"command"`
}

// Experimental.
type TenantSpecSideCarsContainersLifecyclePostStartHttpGet struct {
	// Experimental.
	Port TenantSpecSideCarsContainersLifecyclePostStartHttpGetPort `field:"required" json:"port" yaml:"port"`
	// Experimental.
	Host *string `field:"optional" json:"host" yaml:"host"`
	// Experimental.
	HttpHeaders *[]*TenantSpecSideCarsContainersLifecyclePostStartHttpGetHttpHeaders `field:"optional" json:"httpHeaders" yaml:"httpHeaders"`
	// Experimental.
	Path *string `field:"optional" json:"path" yaml:"path"`
	// Experimental.
	Scheme *string `field:"optional" json:"scheme" yaml:"scheme"`
}

// Experimental.
type TenantSpecSideCarsContainersLifecyclePostStartHttpGetHttpHeaders struct {
	// Experimental.
	Name *string `field:"required" json:"name" yaml:"name"`
	// Experimental.
	Value *string `field:"required" json:"value" yaml:"value"`
}

// Experimental.
type TenantSpecSideCarsContainersLifecyclePostStartHttpGetPort interface {
	// Experimental.
	Value() interface{}
}

// The jsii proxy struct for TenantSpecSideCarsContainersLifecyclePostStartHttpGetPort
type jsiiProxy_TenantSpecSideCarsContainersLifecyclePostStartHttpGetPort struct {
	_ byte // padding
}

func (j *jsiiProxy_TenantSpecSideCarsContainersLifecyclePostStartHttpGetPort) Value() interface{} {
	var returns interface{}
	_jsii_.Get(
		j,
		"value",
		&returns,
	)
	return returns
}


// Experimental.
func TenantSpecSideCarsContainersLifecyclePostStartHttpGetPort_FromNumber(value *float64) TenantSpecSideCarsContainersLifecyclePostStartHttpGetPort {
	_init_.Initialize()

	var returns TenantSpecSideCarsContainersLifecyclePostStartHttpGetPort

	_jsii_.StaticInvoke(
		"cdk8s-metaflow.minio.TenantSpecSideCarsContainersLifecyclePostStartHttpGetPort",
		"fromNumber",
		[]interface{}{value},
		&returns,
	)

	return returns
}

// Experimental.
func TenantSpecSideCarsContainersLifecyclePostStartHttpGetPort_FromString(value *string) TenantSpecSideCarsContainersLifecyclePostStartHttpGetPort {
	_init_.Initialize()

	var returns TenantSpecSideCarsContainersLifecyclePostStartHttpGetPort

	_jsii_.StaticInvoke(
		"cdk8s-metaflow.minio.TenantSpecSideCarsContainersLifecyclePostStartHttpGetPort",
		"fromString",
		[]interface{}{value},
		&returns,
	)

	return returns
}

// Experimental.
type TenantSpecSideCarsContainersLifecyclePostStartTcpSocket struct {
	// Experimental.
	Port TenantSpecSideCarsContainersLifecyclePostStartTcpSocketPort `field:"required" json:"port" yaml:"port"`
	// Experimental.
	Host *string `field:"optional" json:"host" yaml:"host"`
}

// Experimental.
type TenantSpecSideCarsContainersLifecyclePostStartTcpSocketPort interface {
	// Experimental.
	Value() interface{}
}

// The jsii proxy struct for TenantSpecSideCarsContainersLifecyclePostStartTcpSocketPort
type jsiiProxy_TenantSpecSideCarsContainersLifecyclePostStartTcpSocketPort struct {
	_ byte // padding
}

func (j *jsiiProxy_TenantSpecSideCarsContainersLifecyclePostStartTcpSocketPort) Value() interface{} {
	var returns interface{}
	_jsii_.Get(
		j,
		"value",
		&returns,
	)
	return returns
}


// Experimental.
func TenantSpecSideCarsContainersLifecyclePostStartTcpSocketPort_FromNumber(value *float64) TenantSpecSideCarsContainersLifecyclePostStartTcpSocketPort {
	_init_.Initialize()

	var returns TenantSpecSideCarsContainersLifecyclePostStartTcpSocketPort

	_jsii_.StaticInvoke(
		"cdk8s-metaflow.minio.TenantSpecSideCarsContainersLifecyclePostStartTcpSocketPort",
		"fromNumber",
		[]interface{}{value},
		&returns,
	)

	return returns
}

// Experimental.
func TenantSpecSideCarsContainersLifecyclePostStartTcpSocketPort_FromString(value *string) TenantSpecSideCarsContainersLifecyclePostStartTcpSocketPort {
	_init_.Initialize()

	var returns TenantSpecSideCarsContainersLifecyclePostStartTcpSocketPort

	_jsii_.StaticInvoke(
		"cdk8s-metaflow.minio.TenantSpecSideCarsContainersLifecyclePostStartTcpSocketPort",
		"fromString",
		[]interface{}{value},
		&returns,
	)

	return returns
}

// Experimental.
type TenantSpecSideCarsContainersLifecyclePreStop struct {
	// Experimental.
	Exec *TenantSpecSideCarsContainersLifecyclePreStopExec `field:"optional" json:"exec" yaml:"exec"`
	// Experimental.
	HttpGet *TenantSpecSideCarsContainersLifecyclePreStopHttpGet `field:"optional" json:"httpGet" yaml:"httpGet"`
	// Experimental.
	TcpSocket *TenantSpecSideCarsContainersLifecyclePreStopTcpSocket `field:"optional" json:"tcpSocket" yaml:"tcpSocket"`
}

// Experimental.
type TenantSpecSideCarsContainersLifecyclePreStopExec struct {
	// Experimental.
	Command *[]*string `field:"optional" json:"command" yaml:"command"`
}

// Experimental.
type TenantSpecSideCarsContainersLifecyclePreStopHttpGet struct {
	// Experimental.
	Port TenantSpecSideCarsContainersLifecyclePreStopHttpGetPort `field:"required" json:"port" yaml:"port"`
	// Experimental.
	Host *string `field:"optional" json:"host" yaml:"host"`
	// Experimental.
	HttpHeaders *[]*TenantSpecSideCarsContainersLifecyclePreStopHttpGetHttpHeaders `field:"optional" json:"httpHeaders" yaml:"httpHeaders"`
	// Experimental.
	Path *string `field:"optional" json:"path" yaml:"path"`
	// Experimental.
	Scheme *string `field:"optional" json:"scheme" yaml:"scheme"`
}

// Experimental.
type TenantSpecSideCarsContainersLifecyclePreStopHttpGetHttpHeaders struct {
	// Experimental.
	Name *string `field:"required" json:"name" yaml:"name"`
	// Experimental.
	Value *string `field:"required" json:"value" yaml:"value"`
}

// Experimental.
type TenantSpecSideCarsContainersLifecyclePreStopHttpGetPort interface {
	// Experimental.
	Value() interface{}
}

// The jsii proxy struct for TenantSpecSideCarsContainersLifecyclePreStopHttpGetPort
type jsiiProxy_TenantSpecSideCarsContainersLifecyclePreStopHttpGetPort struct {
	_ byte // padding
}

func (j *jsiiProxy_TenantSpecSideCarsContainersLifecyclePreStopHttpGetPort) Value() interface{} {
	var returns interface{}
	_jsii_.Get(
		j,
		"value",
		&returns,
	)
	return returns
}


// Experimental.
func TenantSpecSideCarsContainersLifecyclePreStopHttpGetPort_FromNumber(value *float64) TenantSpecSideCarsContainersLifecyclePreStopHttpGetPort {
	_init_.Initialize()

	var returns TenantSpecSideCarsContainersLifecyclePreStopHttpGetPort

	_jsii_.StaticInvoke(
		"cdk8s-metaflow.minio.TenantSpecSideCarsContainersLifecyclePreStopHttpGetPort",
		"fromNumber",
		[]interface{}{value},
		&returns,
	)

	return returns
}

// Experimental.
func TenantSpecSideCarsContainersLifecyclePreStopHttpGetPort_FromString(value *string) TenantSpecSideCarsContainersLifecyclePreStopHttpGetPort {
	_init_.Initialize()

	var returns TenantSpecSideCarsContainersLifecyclePreStopHttpGetPort

	_jsii_.StaticInvoke(
		"cdk8s-metaflow.minio.TenantSpecSideCarsContainersLifecyclePreStopHttpGetPort",
		"fromString",
		[]interface{}{value},
		&returns,
	)

	return returns
}

// Experimental.
type TenantSpecSideCarsContainersLifecyclePreStopTcpSocket struct {
	// Experimental.
	Port TenantSpecSideCarsContainersLifecyclePreStopTcpSocketPort `field:"required" json:"port" yaml:"port"`
	// Experimental.
	Host *string `field:"optional" json:"host" yaml:"host"`
}

// Experimental.
type TenantSpecSideCarsContainersLifecyclePreStopTcpSocketPort interface {
	// Experimental.
	Value() interface{}
}

// The jsii proxy struct for TenantSpecSideCarsContainersLifecyclePreStopTcpSocketPort
type jsiiProxy_TenantSpecSideCarsContainersLifecyclePreStopTcpSocketPort struct {
	_ byte // padding
}

func (j *jsiiProxy_TenantSpecSideCarsContainersLifecyclePreStopTcpSocketPort) Value() interface{} {
	var returns interface{}
	_jsii_.Get(
		j,
		"value",
		&returns,
	)
	return returns
}


// Experimental.
func TenantSpecSideCarsContainersLifecyclePreStopTcpSocketPort_FromNumber(value *float64) TenantSpecSideCarsContainersLifecyclePreStopTcpSocketPort {
	_init_.Initialize()

	var returns TenantSpecSideCarsContainersLifecyclePreStopTcpSocketPort

	_jsii_.StaticInvoke(
		"cdk8s-metaflow.minio.TenantSpecSideCarsContainersLifecyclePreStopTcpSocketPort",
		"fromNumber",
		[]interface{}{value},
		&returns,
	)

	return returns
}

// Experimental.
func TenantSpecSideCarsContainersLifecyclePreStopTcpSocketPort_FromString(value *string) TenantSpecSideCarsContainersLifecyclePreStopTcpSocketPort {
	_init_.Initialize()

	var returns TenantSpecSideCarsContainersLifecyclePreStopTcpSocketPort

	_jsii_.StaticInvoke(
		"cdk8s-metaflow.minio.TenantSpecSideCarsContainersLifecyclePreStopTcpSocketPort",
		"fromString",
		[]interface{}{value},
		&returns,
	)

	return returns
}

// Experimental.
type TenantSpecSideCarsContainersLivenessProbe struct {
	// Experimental.
	Exec *TenantSpecSideCarsContainersLivenessProbeExec `field:"optional" json:"exec" yaml:"exec"`
	// Experimental.
	FailureThreshold *float64 `field:"optional" json:"failureThreshold" yaml:"failureThreshold"`
	// Experimental.
	HttpGet *TenantSpecSideCarsContainersLivenessProbeHttpGet `field:"optional" json:"httpGet" yaml:"httpGet"`
	// Experimental.
	InitialDelaySeconds *float64 `field:"optional" json:"initialDelaySeconds" yaml:"initialDelaySeconds"`
	// Experimental.
	PeriodSeconds *float64 `field:"optional" json:"periodSeconds" yaml:"periodSeconds"`
	// Experimental.
	SuccessThreshold *float64 `field:"optional" json:"successThreshold" yaml:"successThreshold"`
	// Experimental.
	TcpSocket *TenantSpecSideCarsContainersLivenessProbeTcpSocket `field:"optional" json:"tcpSocket" yaml:"tcpSocket"`
	// Experimental.
	TimeoutSeconds *float64 `field:"optional" json:"timeoutSeconds" yaml:"timeoutSeconds"`
}

// Experimental.
type TenantSpecSideCarsContainersLivenessProbeExec struct {
	// Experimental.
	Command *[]*string `field:"optional" json:"command" yaml:"command"`
}

// Experimental.
type TenantSpecSideCarsContainersLivenessProbeHttpGet struct {
	// Experimental.
	Port TenantSpecSideCarsContainersLivenessProbeHttpGetPort `field:"required" json:"port" yaml:"port"`
	// Experimental.
	Host *string `field:"optional" json:"host" yaml:"host"`
	// Experimental.
	HttpHeaders *[]*TenantSpecSideCarsContainersLivenessProbeHttpGetHttpHeaders `field:"optional" json:"httpHeaders" yaml:"httpHeaders"`
	// Experimental.
	Path *string `field:"optional" json:"path" yaml:"path"`
	// Experimental.
	Scheme *string `field:"optional" json:"scheme" yaml:"scheme"`
}

// Experimental.
type TenantSpecSideCarsContainersLivenessProbeHttpGetHttpHeaders struct {
	// Experimental.
	Name *string `field:"required" json:"name" yaml:"name"`
	// Experimental.
	Value *string `field:"required" json:"value" yaml:"value"`
}

// Experimental.
type TenantSpecSideCarsContainersLivenessProbeHttpGetPort interface {
	// Experimental.
	Value() interface{}
}

// The jsii proxy struct for TenantSpecSideCarsContainersLivenessProbeHttpGetPort
type jsiiProxy_TenantSpecSideCarsContainersLivenessProbeHttpGetPort struct {
	_ byte // padding
}

func (j *jsiiProxy_TenantSpecSideCarsContainersLivenessProbeHttpGetPort) Value() interface{} {
	var returns interface{}
	_jsii_.Get(
		j,
		"value",
		&returns,
	)
	return returns
}


// Experimental.
func TenantSpecSideCarsContainersLivenessProbeHttpGetPort_FromNumber(value *float64) TenantSpecSideCarsContainersLivenessProbeHttpGetPort {
	_init_.Initialize()

	var returns TenantSpecSideCarsContainersLivenessProbeHttpGetPort

	_jsii_.StaticInvoke(
		"cdk8s-metaflow.minio.TenantSpecSideCarsContainersLivenessProbeHttpGetPort",
		"fromNumber",
		[]interface{}{value},
		&returns,
	)

	return returns
}

// Experimental.
func TenantSpecSideCarsContainersLivenessProbeHttpGetPort_FromString(value *string) TenantSpecSideCarsContainersLivenessProbeHttpGetPort {
	_init_.Initialize()

	var returns TenantSpecSideCarsContainersLivenessProbeHttpGetPort

	_jsii_.StaticInvoke(
		"cdk8s-metaflow.minio.TenantSpecSideCarsContainersLivenessProbeHttpGetPort",
		"fromString",
		[]interface{}{value},
		&returns,
	)

	return returns
}

// Experimental.
type TenantSpecSideCarsContainersLivenessProbeTcpSocket struct {
	// Experimental.
	Port TenantSpecSideCarsContainersLivenessProbeTcpSocketPort `field:"required" json:"port" yaml:"port"`
	// Experimental.
	Host *string `field:"optional" json:"host" yaml:"host"`
}

// Experimental.
type TenantSpecSideCarsContainersLivenessProbeTcpSocketPort interface {
	// Experimental.
	Value() interface{}
}

// The jsii proxy struct for TenantSpecSideCarsContainersLivenessProbeTcpSocketPort
type jsiiProxy_TenantSpecSideCarsContainersLivenessProbeTcpSocketPort struct {
	_ byte // padding
}

func (j *jsiiProxy_TenantSpecSideCarsContainersLivenessProbeTcpSocketPort) Value() interface{} {
	var returns interface{}
	_jsii_.Get(
		j,
		"value",
		&returns,
	)
	return returns
}


// Experimental.
func TenantSpecSideCarsContainersLivenessProbeTcpSocketPort_FromNumber(value *float64) TenantSpecSideCarsContainersLivenessProbeTcpSocketPort {
	_init_.Initialize()

	var returns TenantSpecSideCarsContainersLivenessProbeTcpSocketPort

	_jsii_.StaticInvoke(
		"cdk8s-metaflow.minio.TenantSpecSideCarsContainersLivenessProbeTcpSocketPort",
		"fromNumber",
		[]interface{}{value},
		&returns,
	)

	return returns
}

// Experimental.
func TenantSpecSideCarsContainersLivenessProbeTcpSocketPort_FromString(value *string) TenantSpecSideCarsContainersLivenessProbeTcpSocketPort {
	_init_.Initialize()

	var returns TenantSpecSideCarsContainersLivenessProbeTcpSocketPort

	_jsii_.StaticInvoke(
		"cdk8s-metaflow.minio.TenantSpecSideCarsContainersLivenessProbeTcpSocketPort",
		"fromString",
		[]interface{}{value},
		&returns,
	)

	return returns
}

// Experimental.
type TenantSpecSideCarsContainersPorts struct {
	// Experimental.
	ContainerPort *float64 `field:"required" json:"containerPort" yaml:"containerPort"`
	// Experimental.
	HostIp *string `field:"optional" json:"hostIp" yaml:"hostIp"`
	// Experimental.
	HostPort *float64 `field:"optional" json:"hostPort" yaml:"hostPort"`
	// Experimental.
	Name *string `field:"optional" json:"name" yaml:"name"`
	// Experimental.
	Protocol *string `field:"optional" json:"protocol" yaml:"protocol"`
}

// Experimental.
type TenantSpecSideCarsContainersReadinessProbe struct {
	// Experimental.
	Exec *TenantSpecSideCarsContainersReadinessProbeExec `field:"optional" json:"exec" yaml:"exec"`
	// Experimental.
	FailureThreshold *float64 `field:"optional" json:"failureThreshold" yaml:"failureThreshold"`
	// Experimental.
	HttpGet *TenantSpecSideCarsContainersReadinessProbeHttpGet `field:"optional" json:"httpGet" yaml:"httpGet"`
	// Experimental.
	InitialDelaySeconds *float64 `field:"optional" json:"initialDelaySeconds" yaml:"initialDelaySeconds"`
	// Experimental.
	PeriodSeconds *float64 `field:"optional" json:"periodSeconds" yaml:"periodSeconds"`
	// Experimental.
	SuccessThreshold *float64 `field:"optional" json:"successThreshold" yaml:"successThreshold"`
	// Experimental.
	TcpSocket *TenantSpecSideCarsContainersReadinessProbeTcpSocket `field:"optional" json:"tcpSocket" yaml:"tcpSocket"`
	// Experimental.
	TimeoutSeconds *float64 `field:"optional" json:"timeoutSeconds" yaml:"timeoutSeconds"`
}

// Experimental.
type TenantSpecSideCarsContainersReadinessProbeExec struct {
	// Experimental.
	Command *[]*string `field:"optional" json:"command" yaml:"command"`
}

// Experimental.
type TenantSpecSideCarsContainersReadinessProbeHttpGet struct {
	// Experimental.
	Port TenantSpecSideCarsContainersReadinessProbeHttpGetPort `field:"required" json:"port" yaml:"port"`
	// Experimental.
	Host *string `field:"optional" json:"host" yaml:"host"`
	// Experimental.
	HttpHeaders *[]*TenantSpecSideCarsContainersReadinessProbeHttpGetHttpHeaders `field:"optional" json:"httpHeaders" yaml:"httpHeaders"`
	// Experimental.
	Path *string `field:"optional" json:"path" yaml:"path"`
	// Experimental.
	Scheme *string `field:"optional" json:"scheme" yaml:"scheme"`
}

// Experimental.
type TenantSpecSideCarsContainersReadinessProbeHttpGetHttpHeaders struct {
	// Experimental.
	Name *string `field:"required" json:"name" yaml:"name"`
	// Experimental.
	Value *string `field:"required" json:"value" yaml:"value"`
}

// Experimental.
type TenantSpecSideCarsContainersReadinessProbeHttpGetPort interface {
	// Experimental.
	Value() interface{}
}

// The jsii proxy struct for TenantSpecSideCarsContainersReadinessProbeHttpGetPort
type jsiiProxy_TenantSpecSideCarsContainersReadinessProbeHttpGetPort struct {
	_ byte // padding
}

func (j *jsiiProxy_TenantSpecSideCarsContainersReadinessProbeHttpGetPort) Value() interface{} {
	var returns interface{}
	_jsii_.Get(
		j,
		"value",
		&returns,
	)
	return returns
}


// Experimental.
func TenantSpecSideCarsContainersReadinessProbeHttpGetPort_FromNumber(value *float64) TenantSpecSideCarsContainersReadinessProbeHttpGetPort {
	_init_.Initialize()

	var returns TenantSpecSideCarsContainersReadinessProbeHttpGetPort

	_jsii_.StaticInvoke(
		"cdk8s-metaflow.minio.TenantSpecSideCarsContainersReadinessProbeHttpGetPort",
		"fromNumber",
		[]interface{}{value},
		&returns,
	)

	return returns
}

// Experimental.
func TenantSpecSideCarsContainersReadinessProbeHttpGetPort_FromString(value *string) TenantSpecSideCarsContainersReadinessProbeHttpGetPort {
	_init_.Initialize()

	var returns TenantSpecSideCarsContainersReadinessProbeHttpGetPort

	_jsii_.StaticInvoke(
		"cdk8s-metaflow.minio.TenantSpecSideCarsContainersReadinessProbeHttpGetPort",
		"fromString",
		[]interface{}{value},
		&returns,
	)

	return returns
}

// Experimental.
type TenantSpecSideCarsContainersReadinessProbeTcpSocket struct {
	// Experimental.
	Port TenantSpecSideCarsContainersReadinessProbeTcpSocketPort `field:"required" json:"port" yaml:"port"`
	// Experimental.
	Host *string `field:"optional" json:"host" yaml:"host"`
}

// Experimental.
type TenantSpecSideCarsContainersReadinessProbeTcpSocketPort interface {
	// Experimental.
	Value() interface{}
}

// The jsii proxy struct for TenantSpecSideCarsContainersReadinessProbeTcpSocketPort
type jsiiProxy_TenantSpecSideCarsContainersReadinessProbeTcpSocketPort struct {
	_ byte // padding
}

func (j *jsiiProxy_TenantSpecSideCarsContainersReadinessProbeTcpSocketPort) Value() interface{} {
	var returns interface{}
	_jsii_.Get(
		j,
		"value",
		&returns,
	)
	return returns
}


// Experimental.
func TenantSpecSideCarsContainersReadinessProbeTcpSocketPort_FromNumber(value *float64) TenantSpecSideCarsContainersReadinessProbeTcpSocketPort {
	_init_.Initialize()

	var returns TenantSpecSideCarsContainersReadinessProbeTcpSocketPort

	_jsii_.StaticInvoke(
		"cdk8s-metaflow.minio.TenantSpecSideCarsContainersReadinessProbeTcpSocketPort",
		"fromNumber",
		[]interface{}{value},
		&returns,
	)

	return returns
}

// Experimental.
func TenantSpecSideCarsContainersReadinessProbeTcpSocketPort_FromString(value *string) TenantSpecSideCarsContainersReadinessProbeTcpSocketPort {
	_init_.Initialize()

	var returns TenantSpecSideCarsContainersReadinessProbeTcpSocketPort

	_jsii_.StaticInvoke(
		"cdk8s-metaflow.minio.TenantSpecSideCarsContainersReadinessProbeTcpSocketPort",
		"fromString",
		[]interface{}{value},
		&returns,
	)

	return returns
}

// Experimental.
type TenantSpecSideCarsContainersResources struct {
	// Experimental.
	Limits *map[string]TenantSpecSideCarsContainersResourcesLimits `field:"optional" json:"limits" yaml:"limits"`
	// Experimental.
	Requests *map[string]TenantSpecSideCarsContainersResourcesRequests `field:"optional" json:"requests" yaml:"requests"`
}

// Experimental.
type TenantSpecSideCarsContainersResourcesLimits interface {
	// Experimental.
	Value() interface{}
}

// The jsii proxy struct for TenantSpecSideCarsContainersResourcesLimits
type jsiiProxy_TenantSpecSideCarsContainersResourcesLimits struct {
	_ byte // padding
}

func (j *jsiiProxy_TenantSpecSideCarsContainersResourcesLimits) Value() interface{} {
	var returns interface{}
	_jsii_.Get(
		j,
		"value",
		&returns,
	)
	return returns
}


// Experimental.
func TenantSpecSideCarsContainersResourcesLimits_FromNumber(value *float64) TenantSpecSideCarsContainersResourcesLimits {
	_init_.Initialize()

	var returns TenantSpecSideCarsContainersResourcesLimits

	_jsii_.StaticInvoke(
		"cdk8s-metaflow.minio.TenantSpecSideCarsContainersResourcesLimits",
		"fromNumber",
		[]interface{}{value},
		&returns,
	)

	return returns
}

// Experimental.
func TenantSpecSideCarsContainersResourcesLimits_FromString(value *string) TenantSpecSideCarsContainersResourcesLimits {
	_init_.Initialize()

	var returns TenantSpecSideCarsContainersResourcesLimits

	_jsii_.StaticInvoke(
		"cdk8s-metaflow.minio.TenantSpecSideCarsContainersResourcesLimits",
		"fromString",
		[]interface{}{value},
		&returns,
	)

	return returns
}

// Experimental.
type TenantSpecSideCarsContainersResourcesRequests interface {
	// Experimental.
	Value() interface{}
}

// The jsii proxy struct for TenantSpecSideCarsContainersResourcesRequests
type jsiiProxy_TenantSpecSideCarsContainersResourcesRequests struct {
	_ byte // padding
}

func (j *jsiiProxy_TenantSpecSideCarsContainersResourcesRequests) Value() interface{} {
	var returns interface{}
	_jsii_.Get(
		j,
		"value",
		&returns,
	)
	return returns
}


// Experimental.
func TenantSpecSideCarsContainersResourcesRequests_FromNumber(value *float64) TenantSpecSideCarsContainersResourcesRequests {
	_init_.Initialize()

	var returns TenantSpecSideCarsContainersResourcesRequests

	_jsii_.StaticInvoke(
		"cdk8s-metaflow.minio.TenantSpecSideCarsContainersResourcesRequests",
		"fromNumber",
		[]interface{}{value},
		&returns,
	)

	return returns
}

// Experimental.
func TenantSpecSideCarsContainersResourcesRequests_FromString(value *string) TenantSpecSideCarsContainersResourcesRequests {
	_init_.Initialize()

	var returns TenantSpecSideCarsContainersResourcesRequests

	_jsii_.StaticInvoke(
		"cdk8s-metaflow.minio.TenantSpecSideCarsContainersResourcesRequests",
		"fromString",
		[]interface{}{value},
		&returns,
	)

	return returns
}

// Experimental.
type TenantSpecSideCarsContainersSecurityContext struct {
	// Experimental.
	AllowPrivilegeEscalation *bool `field:"optional" json:"allowPrivilegeEscalation" yaml:"allowPrivilegeEscalation"`
	// Experimental.
	Capabilities *TenantSpecSideCarsContainersSecurityContextCapabilities `field:"optional" json:"capabilities" yaml:"capabilities"`
	// Experimental.
	Privileged *bool `field:"optional" json:"privileged" yaml:"privileged"`
	// Experimental.
	ProcMount *string `field:"optional" json:"procMount" yaml:"procMount"`
	// Experimental.
	ReadOnlyRootFilesystem *bool `field:"optional" json:"readOnlyRootFilesystem" yaml:"readOnlyRootFilesystem"`
	// Experimental.
	RunAsGroup *float64 `field:"optional" json:"runAsGroup" yaml:"runAsGroup"`
	// Experimental.
	RunAsNonRoot *bool `field:"optional" json:"runAsNonRoot" yaml:"runAsNonRoot"`
	// Experimental.
	RunAsUser *float64 `field:"optional" json:"runAsUser" yaml:"runAsUser"`
	// Experimental.
	SeccompProfile *TenantSpecSideCarsContainersSecurityContextSeccompProfile `field:"optional" json:"seccompProfile" yaml:"seccompProfile"`
	// Experimental.
	SeLinuxOptions *TenantSpecSideCarsContainersSecurityContextSeLinuxOptions `field:"optional" json:"seLinuxOptions" yaml:"seLinuxOptions"`
	// Experimental.
	WindowsOptions *TenantSpecSideCarsContainersSecurityContextWindowsOptions `field:"optional" json:"windowsOptions" yaml:"windowsOptions"`
}

// Experimental.
type TenantSpecSideCarsContainersSecurityContextCapabilities struct {
	// Experimental.
	Add *[]*string `field:"optional" json:"add" yaml:"add"`
	// Experimental.
	Drop *[]*string `field:"optional" json:"drop" yaml:"drop"`
}

// Experimental.
type TenantSpecSideCarsContainersSecurityContextSeLinuxOptions struct {
	// Experimental.
	Level *string `field:"optional" json:"level" yaml:"level"`
	// Experimental.
	Role *string `field:"optional" json:"role" yaml:"role"`
	// Experimental.
	Type *string `field:"optional" json:"type" yaml:"type"`
	// Experimental.
	User *string `field:"optional" json:"user" yaml:"user"`
}

// Experimental.
type TenantSpecSideCarsContainersSecurityContextSeccompProfile struct {
	// Experimental.
	Type *string `field:"required" json:"type" yaml:"type"`
	// Experimental.
	LocalhostProfile *string `field:"optional" json:"localhostProfile" yaml:"localhostProfile"`
}

// Experimental.
type TenantSpecSideCarsContainersSecurityContextWindowsOptions struct {
	// Experimental.
	GmsaCredentialSpec *string `field:"optional" json:"gmsaCredentialSpec" yaml:"gmsaCredentialSpec"`
	// Experimental.
	GmsaCredentialSpecName *string `field:"optional" json:"gmsaCredentialSpecName" yaml:"gmsaCredentialSpecName"`
	// Experimental.
	RunAsUserName *string `field:"optional" json:"runAsUserName" yaml:"runAsUserName"`
}

// Experimental.
type TenantSpecSideCarsContainersStartupProbe struct {
	// Experimental.
	Exec *TenantSpecSideCarsContainersStartupProbeExec `field:"optional" json:"exec" yaml:"exec"`
	// Experimental.
	FailureThreshold *float64 `field:"optional" json:"failureThreshold" yaml:"failureThreshold"`
	// Experimental.
	HttpGet *TenantSpecSideCarsContainersStartupProbeHttpGet `field:"optional" json:"httpGet" yaml:"httpGet"`
	// Experimental.
	InitialDelaySeconds *float64 `field:"optional" json:"initialDelaySeconds" yaml:"initialDelaySeconds"`
	// Experimental.
	PeriodSeconds *float64 `field:"optional" json:"periodSeconds" yaml:"periodSeconds"`
	// Experimental.
	SuccessThreshold *float64 `field:"optional" json:"successThreshold" yaml:"successThreshold"`
	// Experimental.
	TcpSocket *TenantSpecSideCarsContainersStartupProbeTcpSocket `field:"optional" json:"tcpSocket" yaml:"tcpSocket"`
	// Experimental.
	TimeoutSeconds *float64 `field:"optional" json:"timeoutSeconds" yaml:"timeoutSeconds"`
}

// Experimental.
type TenantSpecSideCarsContainersStartupProbeExec struct {
	// Experimental.
	Command *[]*string `field:"optional" json:"command" yaml:"command"`
}

// Experimental.
type TenantSpecSideCarsContainersStartupProbeHttpGet struct {
	// Experimental.
	Port TenantSpecSideCarsContainersStartupProbeHttpGetPort `field:"required" json:"port" yaml:"port"`
	// Experimental.
	Host *string `field:"optional" json:"host" yaml:"host"`
	// Experimental.
	HttpHeaders *[]*TenantSpecSideCarsContainersStartupProbeHttpGetHttpHeaders `field:"optional" json:"httpHeaders" yaml:"httpHeaders"`
	// Experimental.
	Path *string `field:"optional" json:"path" yaml:"path"`
	// Experimental.
	Scheme *string `field:"optional" json:"scheme" yaml:"scheme"`
}

// Experimental.
type TenantSpecSideCarsContainersStartupProbeHttpGetHttpHeaders struct {
	// Experimental.
	Name *string `field:"required" json:"name" yaml:"name"`
	// Experimental.
	Value *string `field:"required" json:"value" yaml:"value"`
}

// Experimental.
type TenantSpecSideCarsContainersStartupProbeHttpGetPort interface {
	// Experimental.
	Value() interface{}
}

// The jsii proxy struct for TenantSpecSideCarsContainersStartupProbeHttpGetPort
type jsiiProxy_TenantSpecSideCarsContainersStartupProbeHttpGetPort struct {
	_ byte // padding
}

func (j *jsiiProxy_TenantSpecSideCarsContainersStartupProbeHttpGetPort) Value() interface{} {
	var returns interface{}
	_jsii_.Get(
		j,
		"value",
		&returns,
	)
	return returns
}


// Experimental.
func TenantSpecSideCarsContainersStartupProbeHttpGetPort_FromNumber(value *float64) TenantSpecSideCarsContainersStartupProbeHttpGetPort {
	_init_.Initialize()

	var returns TenantSpecSideCarsContainersStartupProbeHttpGetPort

	_jsii_.StaticInvoke(
		"cdk8s-metaflow.minio.TenantSpecSideCarsContainersStartupProbeHttpGetPort",
		"fromNumber",
		[]interface{}{value},
		&returns,
	)

	return returns
}

// Experimental.
func TenantSpecSideCarsContainersStartupProbeHttpGetPort_FromString(value *string) TenantSpecSideCarsContainersStartupProbeHttpGetPort {
	_init_.Initialize()

	var returns TenantSpecSideCarsContainersStartupProbeHttpGetPort

	_jsii_.StaticInvoke(
		"cdk8s-metaflow.minio.TenantSpecSideCarsContainersStartupProbeHttpGetPort",
		"fromString",
		[]interface{}{value},
		&returns,
	)

	return returns
}

// Experimental.
type TenantSpecSideCarsContainersStartupProbeTcpSocket struct {
	// Experimental.
	Port TenantSpecSideCarsContainersStartupProbeTcpSocketPort `field:"required" json:"port" yaml:"port"`
	// Experimental.
	Host *string `field:"optional" json:"host" yaml:"host"`
}

// Experimental.
type TenantSpecSideCarsContainersStartupProbeTcpSocketPort interface {
	// Experimental.
	Value() interface{}
}

// The jsii proxy struct for TenantSpecSideCarsContainersStartupProbeTcpSocketPort
type jsiiProxy_TenantSpecSideCarsContainersStartupProbeTcpSocketPort struct {
	_ byte // padding
}

func (j *jsiiProxy_TenantSpecSideCarsContainersStartupProbeTcpSocketPort) Value() interface{} {
	var returns interface{}
	_jsii_.Get(
		j,
		"value",
		&returns,
	)
	return returns
}


// Experimental.
func TenantSpecSideCarsContainersStartupProbeTcpSocketPort_FromNumber(value *float64) TenantSpecSideCarsContainersStartupProbeTcpSocketPort {
	_init_.Initialize()

	var returns TenantSpecSideCarsContainersStartupProbeTcpSocketPort

	_jsii_.StaticInvoke(
		"cdk8s-metaflow.minio.TenantSpecSideCarsContainersStartupProbeTcpSocketPort",
		"fromNumber",
		[]interface{}{value},
		&returns,
	)

	return returns
}

// Experimental.
func TenantSpecSideCarsContainersStartupProbeTcpSocketPort_FromString(value *string) TenantSpecSideCarsContainersStartupProbeTcpSocketPort {
	_init_.Initialize()

	var returns TenantSpecSideCarsContainersStartupProbeTcpSocketPort

	_jsii_.StaticInvoke(
		"cdk8s-metaflow.minio.TenantSpecSideCarsContainersStartupProbeTcpSocketPort",
		"fromString",
		[]interface{}{value},
		&returns,
	)

	return returns
}

// Experimental.
type TenantSpecSideCarsContainersVolumeDevices struct {
	// Experimental.
	DevicePath *string `field:"required" json:"devicePath" yaml:"devicePath"`
	// Experimental.
	Name *string `field:"required" json:"name" yaml:"name"`
}

// Experimental.
type TenantSpecSideCarsContainersVolumeMounts struct {
	// Experimental.
	MountPath *string `field:"required" json:"mountPath" yaml:"mountPath"`
	// Experimental.
	Name *string `field:"required" json:"name" yaml:"name"`
	// Experimental.
	MountPropagation *string `field:"optional" json:"mountPropagation" yaml:"mountPropagation"`
	// Experimental.
	ReadOnly *bool `field:"optional" json:"readOnly" yaml:"readOnly"`
	// Experimental.
	SubPath *string `field:"optional" json:"subPath" yaml:"subPath"`
	// Experimental.
	SubPathExpr *string `field:"optional" json:"subPathExpr" yaml:"subPathExpr"`
}

// Experimental.
type TenantSpecSideCarsVolumeClaimTemplates struct {
	// Experimental.
	ApiVersion *string `field:"optional" json:"apiVersion" yaml:"apiVersion"`
	// Experimental.
	Kind *string `field:"optional" json:"kind" yaml:"kind"`
	// Experimental.
	Metadata *TenantSpecSideCarsVolumeClaimTemplatesMetadata `field:"optional" json:"metadata" yaml:"metadata"`
	// Experimental.
	Spec *TenantSpecSideCarsVolumeClaimTemplatesSpec `field:"optional" json:"spec" yaml:"spec"`
	// Experimental.
	Status *TenantSpecSideCarsVolumeClaimTemplatesStatus `field:"optional" json:"status" yaml:"status"`
}

// Experimental.
type TenantSpecSideCarsVolumeClaimTemplatesMetadata struct {
	// Experimental.
	Annotations *map[string]*string `field:"optional" json:"annotations" yaml:"annotations"`
	// Experimental.
	Finalizers *[]*string `field:"optional" json:"finalizers" yaml:"finalizers"`
	// Experimental.
	Labels *map[string]*string `field:"optional" json:"labels" yaml:"labels"`
	// Experimental.
	Name *string `field:"optional" json:"name" yaml:"name"`
	// Experimental.
	Namespace *string `field:"optional" json:"namespace" yaml:"namespace"`
}

// Experimental.
type TenantSpecSideCarsVolumeClaimTemplatesSpec struct {
	// Experimental.
	AccessModes *[]*string `field:"optional" json:"accessModes" yaml:"accessModes"`
	// Experimental.
	DataSource *TenantSpecSideCarsVolumeClaimTemplatesSpecDataSource `field:"optional" json:"dataSource" yaml:"dataSource"`
	// Experimental.
	Resources *TenantSpecSideCarsVolumeClaimTemplatesSpecResources `field:"optional" json:"resources" yaml:"resources"`
	// Experimental.
	Selector *TenantSpecSideCarsVolumeClaimTemplatesSpecSelector `field:"optional" json:"selector" yaml:"selector"`
	// Experimental.
	StorageClassName *string `field:"optional" json:"storageClassName" yaml:"storageClassName"`
	// Experimental.
	VolumeMode *string `field:"optional" json:"volumeMode" yaml:"volumeMode"`
	// Experimental.
	VolumeName *string `field:"optional" json:"volumeName" yaml:"volumeName"`
}

// Experimental.
type TenantSpecSideCarsVolumeClaimTemplatesSpecDataSource struct {
	// Experimental.
	Kind *string `field:"required" json:"kind" yaml:"kind"`
	// Experimental.
	Name *string `field:"required" json:"name" yaml:"name"`
	// Experimental.
	ApiGroup *string `field:"optional" json:"apiGroup" yaml:"apiGroup"`
}

// Experimental.
type TenantSpecSideCarsVolumeClaimTemplatesSpecResources struct {
	// Experimental.
	Limits *map[string]TenantSpecSideCarsVolumeClaimTemplatesSpecResourcesLimits `field:"optional" json:"limits" yaml:"limits"`
	// Experimental.
	Requests *map[string]TenantSpecSideCarsVolumeClaimTemplatesSpecResourcesRequests `field:"optional" json:"requests" yaml:"requests"`
}

// Experimental.
type TenantSpecSideCarsVolumeClaimTemplatesSpecResourcesLimits interface {
	// Experimental.
	Value() interface{}
}

// The jsii proxy struct for TenantSpecSideCarsVolumeClaimTemplatesSpecResourcesLimits
type jsiiProxy_TenantSpecSideCarsVolumeClaimTemplatesSpecResourcesLimits struct {
	_ byte // padding
}

func (j *jsiiProxy_TenantSpecSideCarsVolumeClaimTemplatesSpecResourcesLimits) Value() interface{} {
	var returns interface{}
	_jsii_.Get(
		j,
		"value",
		&returns,
	)
	return returns
}


// Experimental.
func TenantSpecSideCarsVolumeClaimTemplatesSpecResourcesLimits_FromNumber(value *float64) TenantSpecSideCarsVolumeClaimTemplatesSpecResourcesLimits {
	_init_.Initialize()

	var returns TenantSpecSideCarsVolumeClaimTemplatesSpecResourcesLimits

	_jsii_.StaticInvoke(
		"cdk8s-metaflow.minio.TenantSpecSideCarsVolumeClaimTemplatesSpecResourcesLimits",
		"fromNumber",
		[]interface{}{value},
		&returns,
	)

	return returns
}

// Experimental.
func TenantSpecSideCarsVolumeClaimTemplatesSpecResourcesLimits_FromString(value *string) TenantSpecSideCarsVolumeClaimTemplatesSpecResourcesLimits {
	_init_.Initialize()

	var returns TenantSpecSideCarsVolumeClaimTemplatesSpecResourcesLimits

	_jsii_.StaticInvoke(
		"cdk8s-metaflow.minio.TenantSpecSideCarsVolumeClaimTemplatesSpecResourcesLimits",
		"fromString",
		[]interface{}{value},
		&returns,
	)

	return returns
}

// Experimental.
type TenantSpecSideCarsVolumeClaimTemplatesSpecResourcesRequests interface {
	// Experimental.
	Value() interface{}
}

// The jsii proxy struct for TenantSpecSideCarsVolumeClaimTemplatesSpecResourcesRequests
type jsiiProxy_TenantSpecSideCarsVolumeClaimTemplatesSpecResourcesRequests struct {
	_ byte // padding
}

func (j *jsiiProxy_TenantSpecSideCarsVolumeClaimTemplatesSpecResourcesRequests) Value() interface{} {
	var returns interface{}
	_jsii_.Get(
		j,
		"value",
		&returns,
	)
	return returns
}


// Experimental.
func TenantSpecSideCarsVolumeClaimTemplatesSpecResourcesRequests_FromNumber(value *float64) TenantSpecSideCarsVolumeClaimTemplatesSpecResourcesRequests {
	_init_.Initialize()

	var returns TenantSpecSideCarsVolumeClaimTemplatesSpecResourcesRequests

	_jsii_.StaticInvoke(
		"cdk8s-metaflow.minio.TenantSpecSideCarsVolumeClaimTemplatesSpecResourcesRequests",
		"fromNumber",
		[]interface{}{value},
		&returns,
	)

	return returns
}

// Experimental.
func TenantSpecSideCarsVolumeClaimTemplatesSpecResourcesRequests_FromString(value *string) TenantSpecSideCarsVolumeClaimTemplatesSpecResourcesRequests {
	_init_.Initialize()

	var returns TenantSpecSideCarsVolumeClaimTemplatesSpecResourcesRequests

	_jsii_.StaticInvoke(
		"cdk8s-metaflow.minio.TenantSpecSideCarsVolumeClaimTemplatesSpecResourcesRequests",
		"fromString",
		[]interface{}{value},
		&returns,
	)

	return returns
}

// Experimental.
type TenantSpecSideCarsVolumeClaimTemplatesSpecSelector struct {
	// Experimental.
	MatchExpressions *[]*TenantSpecSideCarsVolumeClaimTemplatesSpecSelectorMatchExpressions `field:"optional" json:"matchExpressions" yaml:"matchExpressions"`
	// Experimental.
	MatchLabels *map[string]*string `field:"optional" json:"matchLabels" yaml:"matchLabels"`
}

// Experimental.
type TenantSpecSideCarsVolumeClaimTemplatesSpecSelectorMatchExpressions struct {
	// Experimental.
	Key *string `field:"required" json:"key" yaml:"key"`
	// Experimental.
	Operator *string `field:"required" json:"operator" yaml:"operator"`
	// Experimental.
	Values *[]*string `field:"optional" json:"values" yaml:"values"`
}

// Experimental.
type TenantSpecSideCarsVolumeClaimTemplatesStatus struct {
	// Experimental.
	AccessModes *[]*string `field:"optional" json:"accessModes" yaml:"accessModes"`
	// Experimental.
	Capacity *map[string]TenantSpecSideCarsVolumeClaimTemplatesStatusCapacity `field:"optional" json:"capacity" yaml:"capacity"`
	// Experimental.
	Conditions *[]*TenantSpecSideCarsVolumeClaimTemplatesStatusConditions `field:"optional" json:"conditions" yaml:"conditions"`
	// Experimental.
	Phase *string `field:"optional" json:"phase" yaml:"phase"`
}

// Experimental.
type TenantSpecSideCarsVolumeClaimTemplatesStatusCapacity interface {
	// Experimental.
	Value() interface{}
}

// The jsii proxy struct for TenantSpecSideCarsVolumeClaimTemplatesStatusCapacity
type jsiiProxy_TenantSpecSideCarsVolumeClaimTemplatesStatusCapacity struct {
	_ byte // padding
}

func (j *jsiiProxy_TenantSpecSideCarsVolumeClaimTemplatesStatusCapacity) Value() interface{} {
	var returns interface{}
	_jsii_.Get(
		j,
		"value",
		&returns,
	)
	return returns
}


// Experimental.
func TenantSpecSideCarsVolumeClaimTemplatesStatusCapacity_FromNumber(value *float64) TenantSpecSideCarsVolumeClaimTemplatesStatusCapacity {
	_init_.Initialize()

	var returns TenantSpecSideCarsVolumeClaimTemplatesStatusCapacity

	_jsii_.StaticInvoke(
		"cdk8s-metaflow.minio.TenantSpecSideCarsVolumeClaimTemplatesStatusCapacity",
		"fromNumber",
		[]interface{}{value},
		&returns,
	)

	return returns
}

// Experimental.
func TenantSpecSideCarsVolumeClaimTemplatesStatusCapacity_FromString(value *string) TenantSpecSideCarsVolumeClaimTemplatesStatusCapacity {
	_init_.Initialize()

	var returns TenantSpecSideCarsVolumeClaimTemplatesStatusCapacity

	_jsii_.StaticInvoke(
		"cdk8s-metaflow.minio.TenantSpecSideCarsVolumeClaimTemplatesStatusCapacity",
		"fromString",
		[]interface{}{value},
		&returns,
	)

	return returns
}

// Experimental.
type TenantSpecSideCarsVolumeClaimTemplatesStatusConditions struct {
	// Experimental.
	Status *string `field:"required" json:"status" yaml:"status"`
	// Experimental.
	Type *string `field:"required" json:"type" yaml:"type"`
	// Experimental.
	LastProbeTime *time.Time `field:"optional" json:"lastProbeTime" yaml:"lastProbeTime"`
	// Experimental.
	LastTransitionTime *time.Time `field:"optional" json:"lastTransitionTime" yaml:"lastTransitionTime"`
	// Experimental.
	Message *string `field:"optional" json:"message" yaml:"message"`
	// Experimental.
	Reason *string `field:"optional" json:"reason" yaml:"reason"`
}

// Experimental.
type TenantSpecSideCarsVolumes struct {
	// Experimental.
	Name *string `field:"required" json:"name" yaml:"name"`
	// Experimental.
	AwsElasticBlockStore *TenantSpecSideCarsVolumesAwsElasticBlockStore `field:"optional" json:"awsElasticBlockStore" yaml:"awsElasticBlockStore"`
	// Experimental.
	AzureDisk *TenantSpecSideCarsVolumesAzureDisk `field:"optional" json:"azureDisk" yaml:"azureDisk"`
	// Experimental.
	AzureFile *TenantSpecSideCarsVolumesAzureFile `field:"optional" json:"azureFile" yaml:"azureFile"`
	// Experimental.
	Cephfs *TenantSpecSideCarsVolumesCephfs `field:"optional" json:"cephfs" yaml:"cephfs"`
	// Experimental.
	Cinder *TenantSpecSideCarsVolumesCinder `field:"optional" json:"cinder" yaml:"cinder"`
	// Experimental.
	ConfigMap *TenantSpecSideCarsVolumesConfigMap `field:"optional" json:"configMap" yaml:"configMap"`
	// Experimental.
	Csi *TenantSpecSideCarsVolumesCsi `field:"optional" json:"csi" yaml:"csi"`
	// Experimental.
	DownwardApi *TenantSpecSideCarsVolumesDownwardApi `field:"optional" json:"downwardApi" yaml:"downwardApi"`
	// Experimental.
	EmptyDir *TenantSpecSideCarsVolumesEmptyDir `field:"optional" json:"emptyDir" yaml:"emptyDir"`
	// Experimental.
	Ephemeral *TenantSpecSideCarsVolumesEphemeral `field:"optional" json:"ephemeral" yaml:"ephemeral"`
	// Experimental.
	Fc *TenantSpecSideCarsVolumesFc `field:"optional" json:"fc" yaml:"fc"`
	// Experimental.
	FlexVolume *TenantSpecSideCarsVolumesFlexVolume `field:"optional" json:"flexVolume" yaml:"flexVolume"`
	// Experimental.
	Flocker *TenantSpecSideCarsVolumesFlocker `field:"optional" json:"flocker" yaml:"flocker"`
	// Experimental.
	GcePersistentDisk *TenantSpecSideCarsVolumesGcePersistentDisk `field:"optional" json:"gcePersistentDisk" yaml:"gcePersistentDisk"`
	// Experimental.
	GitRepo *TenantSpecSideCarsVolumesGitRepo `field:"optional" json:"gitRepo" yaml:"gitRepo"`
	// Experimental.
	Glusterfs *TenantSpecSideCarsVolumesGlusterfs `field:"optional" json:"glusterfs" yaml:"glusterfs"`
	// Experimental.
	HostPath *TenantSpecSideCarsVolumesHostPath `field:"optional" json:"hostPath" yaml:"hostPath"`
	// Experimental.
	Iscsi *TenantSpecSideCarsVolumesIscsi `field:"optional" json:"iscsi" yaml:"iscsi"`
	// Experimental.
	Nfs *TenantSpecSideCarsVolumesNfs `field:"optional" json:"nfs" yaml:"nfs"`
	// Experimental.
	PersistentVolumeClaim *TenantSpecSideCarsVolumesPersistentVolumeClaim `field:"optional" json:"persistentVolumeClaim" yaml:"persistentVolumeClaim"`
	// Experimental.
	PhotonPersistentDisk *TenantSpecSideCarsVolumesPhotonPersistentDisk `field:"optional" json:"photonPersistentDisk" yaml:"photonPersistentDisk"`
	// Experimental.
	PortworxVolume *TenantSpecSideCarsVolumesPortworxVolume `field:"optional" json:"portworxVolume" yaml:"portworxVolume"`
	// Experimental.
	Projected *TenantSpecSideCarsVolumesProjected `field:"optional" json:"projected" yaml:"projected"`
	// Experimental.
	Quobyte *TenantSpecSideCarsVolumesQuobyte `field:"optional" json:"quobyte" yaml:"quobyte"`
	// Experimental.
	Rbd *TenantSpecSideCarsVolumesRbd `field:"optional" json:"rbd" yaml:"rbd"`
	// Experimental.
	ScaleIo *TenantSpecSideCarsVolumesScaleIo `field:"optional" json:"scaleIo" yaml:"scaleIo"`
	// Experimental.
	Secret *TenantSpecSideCarsVolumesSecret `field:"optional" json:"secret" yaml:"secret"`
	// Experimental.
	Storageos *TenantSpecSideCarsVolumesStorageos `field:"optional" json:"storageos" yaml:"storageos"`
	// Experimental.
	VsphereVolume *TenantSpecSideCarsVolumesVsphereVolume `field:"optional" json:"vsphereVolume" yaml:"vsphereVolume"`
}

// Experimental.
type TenantSpecSideCarsVolumesAwsElasticBlockStore struct {
	// Experimental.
	VolumeId *string `field:"required" json:"volumeId" yaml:"volumeId"`
	// Experimental.
	FsType *string `field:"optional" json:"fsType" yaml:"fsType"`
	// Experimental.
	Partition *float64 `field:"optional" json:"partition" yaml:"partition"`
	// Experimental.
	ReadOnly *bool `field:"optional" json:"readOnly" yaml:"readOnly"`
}

// Experimental.
type TenantSpecSideCarsVolumesAzureDisk struct {
	// Experimental.
	DiskName *string `field:"required" json:"diskName" yaml:"diskName"`
	// Experimental.
	DiskUri *string `field:"required" json:"diskUri" yaml:"diskUri"`
	// Experimental.
	CachingMode *string `field:"optional" json:"cachingMode" yaml:"cachingMode"`
	// Experimental.
	FsType *string `field:"optional" json:"fsType" yaml:"fsType"`
	// Experimental.
	Kind *string `field:"optional" json:"kind" yaml:"kind"`
	// Experimental.
	ReadOnly *bool `field:"optional" json:"readOnly" yaml:"readOnly"`
}

// Experimental.
type TenantSpecSideCarsVolumesAzureFile struct {
	// Experimental.
	SecretName *string `field:"required" json:"secretName" yaml:"secretName"`
	// Experimental.
	ShareName *string `field:"required" json:"shareName" yaml:"shareName"`
	// Experimental.
	ReadOnly *bool `field:"optional" json:"readOnly" yaml:"readOnly"`
}

// Experimental.
type TenantSpecSideCarsVolumesCephfs struct {
	// Experimental.
	Monitors *[]*string `field:"required" json:"monitors" yaml:"monitors"`
	// Experimental.
	Path *string `field:"optional" json:"path" yaml:"path"`
	// Experimental.
	ReadOnly *bool `field:"optional" json:"readOnly" yaml:"readOnly"`
	// Experimental.
	SecretFile *string `field:"optional" json:"secretFile" yaml:"secretFile"`
	// Experimental.
	SecretRef *TenantSpecSideCarsVolumesCephfsSecretRef `field:"optional" json:"secretRef" yaml:"secretRef"`
	// Experimental.
	User *string `field:"optional" json:"user" yaml:"user"`
}

// Experimental.
type TenantSpecSideCarsVolumesCephfsSecretRef struct {
	// Experimental.
	Name *string `field:"optional" json:"name" yaml:"name"`
}

// Experimental.
type TenantSpecSideCarsVolumesCinder struct {
	// Experimental.
	VolumeId *string `field:"required" json:"volumeId" yaml:"volumeId"`
	// Experimental.
	FsType *string `field:"optional" json:"fsType" yaml:"fsType"`
	// Experimental.
	ReadOnly *bool `field:"optional" json:"readOnly" yaml:"readOnly"`
	// Experimental.
	SecretRef *TenantSpecSideCarsVolumesCinderSecretRef `field:"optional" json:"secretRef" yaml:"secretRef"`
}

// Experimental.
type TenantSpecSideCarsVolumesCinderSecretRef struct {
	// Experimental.
	Name *string `field:"optional" json:"name" yaml:"name"`
}

// Experimental.
type TenantSpecSideCarsVolumesConfigMap struct {
	// Experimental.
	DefaultMode *float64 `field:"optional" json:"defaultMode" yaml:"defaultMode"`
	// Experimental.
	Items *[]*TenantSpecSideCarsVolumesConfigMapItems `field:"optional" json:"items" yaml:"items"`
	// Experimental.
	Name *string `field:"optional" json:"name" yaml:"name"`
	// Experimental.
	Optional *bool `field:"optional" json:"optional" yaml:"optional"`
}

// Experimental.
type TenantSpecSideCarsVolumesConfigMapItems struct {
	// Experimental.
	Key *string `field:"required" json:"key" yaml:"key"`
	// Experimental.
	Path *string `field:"required" json:"path" yaml:"path"`
	// Experimental.
	Mode *float64 `field:"optional" json:"mode" yaml:"mode"`
}

// Experimental.
type TenantSpecSideCarsVolumesCsi struct {
	// Experimental.
	Driver *string `field:"required" json:"driver" yaml:"driver"`
	// Experimental.
	FsType *string `field:"optional" json:"fsType" yaml:"fsType"`
	// Experimental.
	NodePublishSecretRef *TenantSpecSideCarsVolumesCsiNodePublishSecretRef `field:"optional" json:"nodePublishSecretRef" yaml:"nodePublishSecretRef"`
	// Experimental.
	ReadOnly *bool `field:"optional" json:"readOnly" yaml:"readOnly"`
	// Experimental.
	VolumeAttributes *map[string]*string `field:"optional" json:"volumeAttributes" yaml:"volumeAttributes"`
}

// Experimental.
type TenantSpecSideCarsVolumesCsiNodePublishSecretRef struct {
	// Experimental.
	Name *string `field:"optional" json:"name" yaml:"name"`
}

// Experimental.
type TenantSpecSideCarsVolumesDownwardApi struct {
	// Experimental.
	DefaultMode *float64 `field:"optional" json:"defaultMode" yaml:"defaultMode"`
	// Experimental.
	Items *[]*TenantSpecSideCarsVolumesDownwardApiItems `field:"optional" json:"items" yaml:"items"`
}

// Experimental.
type TenantSpecSideCarsVolumesDownwardApiItems struct {
	// Experimental.
	Path *string `field:"required" json:"path" yaml:"path"`
	// Experimental.
	FieldRef *TenantSpecSideCarsVolumesDownwardApiItemsFieldRef `field:"optional" json:"fieldRef" yaml:"fieldRef"`
	// Experimental.
	Mode *float64 `field:"optional" json:"mode" yaml:"mode"`
	// Experimental.
	ResourceFieldRef *TenantSpecSideCarsVolumesDownwardApiItemsResourceFieldRef `field:"optional" json:"resourceFieldRef" yaml:"resourceFieldRef"`
}

// Experimental.
type TenantSpecSideCarsVolumesDownwardApiItemsFieldRef struct {
	// Experimental.
	FieldPath *string `field:"required" json:"fieldPath" yaml:"fieldPath"`
	// Experimental.
	ApiVersion *string `field:"optional" json:"apiVersion" yaml:"apiVersion"`
}

// Experimental.
type TenantSpecSideCarsVolumesDownwardApiItemsResourceFieldRef struct {
	// Experimental.
	Resource *string `field:"required" json:"resource" yaml:"resource"`
	// Experimental.
	ContainerName *string `field:"optional" json:"containerName" yaml:"containerName"`
	// Experimental.
	Divisor TenantSpecSideCarsVolumesDownwardApiItemsResourceFieldRefDivisor `field:"optional" json:"divisor" yaml:"divisor"`
}

// Experimental.
type TenantSpecSideCarsVolumesDownwardApiItemsResourceFieldRefDivisor interface {
	// Experimental.
	Value() interface{}
}

// The jsii proxy struct for TenantSpecSideCarsVolumesDownwardApiItemsResourceFieldRefDivisor
type jsiiProxy_TenantSpecSideCarsVolumesDownwardApiItemsResourceFieldRefDivisor struct {
	_ byte // padding
}

func (j *jsiiProxy_TenantSpecSideCarsVolumesDownwardApiItemsResourceFieldRefDivisor) Value() interface{} {
	var returns interface{}
	_jsii_.Get(
		j,
		"value",
		&returns,
	)
	return returns
}


// Experimental.
func TenantSpecSideCarsVolumesDownwardApiItemsResourceFieldRefDivisor_FromNumber(value *float64) TenantSpecSideCarsVolumesDownwardApiItemsResourceFieldRefDivisor {
	_init_.Initialize()

	var returns TenantSpecSideCarsVolumesDownwardApiItemsResourceFieldRefDivisor

	_jsii_.StaticInvoke(
		"cdk8s-metaflow.minio.TenantSpecSideCarsVolumesDownwardApiItemsResourceFieldRefDivisor",
		"fromNumber",
		[]interface{}{value},
		&returns,
	)

	return returns
}

// Experimental.
func TenantSpecSideCarsVolumesDownwardApiItemsResourceFieldRefDivisor_FromString(value *string) TenantSpecSideCarsVolumesDownwardApiItemsResourceFieldRefDivisor {
	_init_.Initialize()

	var returns TenantSpecSideCarsVolumesDownwardApiItemsResourceFieldRefDivisor

	_jsii_.StaticInvoke(
		"cdk8s-metaflow.minio.TenantSpecSideCarsVolumesDownwardApiItemsResourceFieldRefDivisor",
		"fromString",
		[]interface{}{value},
		&returns,
	)

	return returns
}

// Experimental.
type TenantSpecSideCarsVolumesEmptyDir struct {
	// Experimental.
	Medium *string `field:"optional" json:"medium" yaml:"medium"`
	// Experimental.
	SizeLimit TenantSpecSideCarsVolumesEmptyDirSizeLimit `field:"optional" json:"sizeLimit" yaml:"sizeLimit"`
}

// Experimental.
type TenantSpecSideCarsVolumesEmptyDirSizeLimit interface {
	// Experimental.
	Value() interface{}
}

// The jsii proxy struct for TenantSpecSideCarsVolumesEmptyDirSizeLimit
type jsiiProxy_TenantSpecSideCarsVolumesEmptyDirSizeLimit struct {
	_ byte // padding
}

func (j *jsiiProxy_TenantSpecSideCarsVolumesEmptyDirSizeLimit) Value() interface{} {
	var returns interface{}
	_jsii_.Get(
		j,
		"value",
		&returns,
	)
	return returns
}


// Experimental.
func TenantSpecSideCarsVolumesEmptyDirSizeLimit_FromNumber(value *float64) TenantSpecSideCarsVolumesEmptyDirSizeLimit {
	_init_.Initialize()

	var returns TenantSpecSideCarsVolumesEmptyDirSizeLimit

	_jsii_.StaticInvoke(
		"cdk8s-metaflow.minio.TenantSpecSideCarsVolumesEmptyDirSizeLimit",
		"fromNumber",
		[]interface{}{value},
		&returns,
	)

	return returns
}

// Experimental.
func TenantSpecSideCarsVolumesEmptyDirSizeLimit_FromString(value *string) TenantSpecSideCarsVolumesEmptyDirSizeLimit {
	_init_.Initialize()

	var returns TenantSpecSideCarsVolumesEmptyDirSizeLimit

	_jsii_.StaticInvoke(
		"cdk8s-metaflow.minio.TenantSpecSideCarsVolumesEmptyDirSizeLimit",
		"fromString",
		[]interface{}{value},
		&returns,
	)

	return returns
}

// Experimental.
type TenantSpecSideCarsVolumesEphemeral struct {
	// Experimental.
	ReadOnly *bool `field:"optional" json:"readOnly" yaml:"readOnly"`
	// Experimental.
	VolumeClaimTemplate *TenantSpecSideCarsVolumesEphemeralVolumeClaimTemplate `field:"optional" json:"volumeClaimTemplate" yaml:"volumeClaimTemplate"`
}

// Experimental.
type TenantSpecSideCarsVolumesEphemeralVolumeClaimTemplate struct {
	// Experimental.
	Spec *TenantSpecSideCarsVolumesEphemeralVolumeClaimTemplateSpec `field:"required" json:"spec" yaml:"spec"`
	// Experimental.
	Metadata *TenantSpecSideCarsVolumesEphemeralVolumeClaimTemplateMetadata `field:"optional" json:"metadata" yaml:"metadata"`
}

// Experimental.
type TenantSpecSideCarsVolumesEphemeralVolumeClaimTemplateMetadata struct {
	// Experimental.
	Annotations *map[string]*string `field:"optional" json:"annotations" yaml:"annotations"`
	// Experimental.
	Finalizers *[]*string `field:"optional" json:"finalizers" yaml:"finalizers"`
	// Experimental.
	Labels *map[string]*string `field:"optional" json:"labels" yaml:"labels"`
	// Experimental.
	Name *string `field:"optional" json:"name" yaml:"name"`
	// Experimental.
	Namespace *string `field:"optional" json:"namespace" yaml:"namespace"`
}

// Experimental.
type TenantSpecSideCarsVolumesEphemeralVolumeClaimTemplateSpec struct {
	// Experimental.
	AccessModes *[]*string `field:"optional" json:"accessModes" yaml:"accessModes"`
	// Experimental.
	DataSource *TenantSpecSideCarsVolumesEphemeralVolumeClaimTemplateSpecDataSource `field:"optional" json:"dataSource" yaml:"dataSource"`
	// Experimental.
	Resources *TenantSpecSideCarsVolumesEphemeralVolumeClaimTemplateSpecResources `field:"optional" json:"resources" yaml:"resources"`
	// Experimental.
	Selector *TenantSpecSideCarsVolumesEphemeralVolumeClaimTemplateSpecSelector `field:"optional" json:"selector" yaml:"selector"`
	// Experimental.
	StorageClassName *string `field:"optional" json:"storageClassName" yaml:"storageClassName"`
	// Experimental.
	VolumeMode *string `field:"optional" json:"volumeMode" yaml:"volumeMode"`
	// Experimental.
	VolumeName *string `field:"optional" json:"volumeName" yaml:"volumeName"`
}

// Experimental.
type TenantSpecSideCarsVolumesEphemeralVolumeClaimTemplateSpecDataSource struct {
	// Experimental.
	Kind *string `field:"required" json:"kind" yaml:"kind"`
	// Experimental.
	Name *string `field:"required" json:"name" yaml:"name"`
	// Experimental.
	ApiGroup *string `field:"optional" json:"apiGroup" yaml:"apiGroup"`
}

// Experimental.
type TenantSpecSideCarsVolumesEphemeralVolumeClaimTemplateSpecResources struct {
	// Experimental.
	Limits *map[string]TenantSpecSideCarsVolumesEphemeralVolumeClaimTemplateSpecResourcesLimits `field:"optional" json:"limits" yaml:"limits"`
	// Experimental.
	Requests *map[string]TenantSpecSideCarsVolumesEphemeralVolumeClaimTemplateSpecResourcesRequests `field:"optional" json:"requests" yaml:"requests"`
}

// Experimental.
type TenantSpecSideCarsVolumesEphemeralVolumeClaimTemplateSpecResourcesLimits interface {
	// Experimental.
	Value() interface{}
}

// The jsii proxy struct for TenantSpecSideCarsVolumesEphemeralVolumeClaimTemplateSpecResourcesLimits
type jsiiProxy_TenantSpecSideCarsVolumesEphemeralVolumeClaimTemplateSpecResourcesLimits struct {
	_ byte // padding
}

func (j *jsiiProxy_TenantSpecSideCarsVolumesEphemeralVolumeClaimTemplateSpecResourcesLimits) Value() interface{} {
	var returns interface{}
	_jsii_.Get(
		j,
		"value",
		&returns,
	)
	return returns
}


// Experimental.
func TenantSpecSideCarsVolumesEphemeralVolumeClaimTemplateSpecResourcesLimits_FromNumber(value *float64) TenantSpecSideCarsVolumesEphemeralVolumeClaimTemplateSpecResourcesLimits {
	_init_.Initialize()

	var returns TenantSpecSideCarsVolumesEphemeralVolumeClaimTemplateSpecResourcesLimits

	_jsii_.StaticInvoke(
		"cdk8s-metaflow.minio.TenantSpecSideCarsVolumesEphemeralVolumeClaimTemplateSpecResourcesLimits",
		"fromNumber",
		[]interface{}{value},
		&returns,
	)

	return returns
}

// Experimental.
func TenantSpecSideCarsVolumesEphemeralVolumeClaimTemplateSpecResourcesLimits_FromString(value *string) TenantSpecSideCarsVolumesEphemeralVolumeClaimTemplateSpecResourcesLimits {
	_init_.Initialize()

	var returns TenantSpecSideCarsVolumesEphemeralVolumeClaimTemplateSpecResourcesLimits

	_jsii_.StaticInvoke(
		"cdk8s-metaflow.minio.TenantSpecSideCarsVolumesEphemeralVolumeClaimTemplateSpecResourcesLimits",
		"fromString",
		[]interface{}{value},
		&returns,
	)

	return returns
}

// Experimental.
type TenantSpecSideCarsVolumesEphemeralVolumeClaimTemplateSpecResourcesRequests interface {
	// Experimental.
	Value() interface{}
}

// The jsii proxy struct for TenantSpecSideCarsVolumesEphemeralVolumeClaimTemplateSpecResourcesRequests
type jsiiProxy_TenantSpecSideCarsVolumesEphemeralVolumeClaimTemplateSpecResourcesRequests struct {
	_ byte // padding
}

func (j *jsiiProxy_TenantSpecSideCarsVolumesEphemeralVolumeClaimTemplateSpecResourcesRequests) Value() interface{} {
	var returns interface{}
	_jsii_.Get(
		j,
		"value",
		&returns,
	)
	return returns
}


// Experimental.
func TenantSpecSideCarsVolumesEphemeralVolumeClaimTemplateSpecResourcesRequests_FromNumber(value *float64) TenantSpecSideCarsVolumesEphemeralVolumeClaimTemplateSpecResourcesRequests {
	_init_.Initialize()

	var returns TenantSpecSideCarsVolumesEphemeralVolumeClaimTemplateSpecResourcesRequests

	_jsii_.StaticInvoke(
		"cdk8s-metaflow.minio.TenantSpecSideCarsVolumesEphemeralVolumeClaimTemplateSpecResourcesRequests",
		"fromNumber",
		[]interface{}{value},
		&returns,
	)

	return returns
}

// Experimental.
func TenantSpecSideCarsVolumesEphemeralVolumeClaimTemplateSpecResourcesRequests_FromString(value *string) TenantSpecSideCarsVolumesEphemeralVolumeClaimTemplateSpecResourcesRequests {
	_init_.Initialize()

	var returns TenantSpecSideCarsVolumesEphemeralVolumeClaimTemplateSpecResourcesRequests

	_jsii_.StaticInvoke(
		"cdk8s-metaflow.minio.TenantSpecSideCarsVolumesEphemeralVolumeClaimTemplateSpecResourcesRequests",
		"fromString",
		[]interface{}{value},
		&returns,
	)

	return returns
}

// Experimental.
type TenantSpecSideCarsVolumesEphemeralVolumeClaimTemplateSpecSelector struct {
	// Experimental.
	MatchExpressions *[]*TenantSpecSideCarsVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressions `field:"optional" json:"matchExpressions" yaml:"matchExpressions"`
	// Experimental.
	MatchLabels *map[string]*string `field:"optional" json:"matchLabels" yaml:"matchLabels"`
}

// Experimental.
type TenantSpecSideCarsVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressions struct {
	// Experimental.
	Key *string `field:"required" json:"key" yaml:"key"`
	// Experimental.
	Operator *string `field:"required" json:"operator" yaml:"operator"`
	// Experimental.
	Values *[]*string `field:"optional" json:"values" yaml:"values"`
}

// Experimental.
type TenantSpecSideCarsVolumesFc struct {
	// Experimental.
	FsType *string `field:"optional" json:"fsType" yaml:"fsType"`
	// Experimental.
	Lun *float64 `field:"optional" json:"lun" yaml:"lun"`
	// Experimental.
	ReadOnly *bool `field:"optional" json:"readOnly" yaml:"readOnly"`
	// Experimental.
	TargetWwNs *[]*string `field:"optional" json:"targetWwNs" yaml:"targetWwNs"`
	// Experimental.
	Wwids *[]*string `field:"optional" json:"wwids" yaml:"wwids"`
}

// Experimental.
type TenantSpecSideCarsVolumesFlexVolume struct {
	// Experimental.
	Driver *string `field:"required" json:"driver" yaml:"driver"`
	// Experimental.
	FsType *string `field:"optional" json:"fsType" yaml:"fsType"`
	// Experimental.
	Options *map[string]*string `field:"optional" json:"options" yaml:"options"`
	// Experimental.
	ReadOnly *bool `field:"optional" json:"readOnly" yaml:"readOnly"`
	// Experimental.
	SecretRef *TenantSpecSideCarsVolumesFlexVolumeSecretRef `field:"optional" json:"secretRef" yaml:"secretRef"`
}

// Experimental.
type TenantSpecSideCarsVolumesFlexVolumeSecretRef struct {
	// Experimental.
	Name *string `field:"optional" json:"name" yaml:"name"`
}

// Experimental.
type TenantSpecSideCarsVolumesFlocker struct {
	// Experimental.
	DatasetName *string `field:"optional" json:"datasetName" yaml:"datasetName"`
	// Experimental.
	DatasetUuid *string `field:"optional" json:"datasetUuid" yaml:"datasetUuid"`
}

// Experimental.
type TenantSpecSideCarsVolumesGcePersistentDisk struct {
	// Experimental.
	PdName *string `field:"required" json:"pdName" yaml:"pdName"`
	// Experimental.
	FsType *string `field:"optional" json:"fsType" yaml:"fsType"`
	// Experimental.
	Partition *float64 `field:"optional" json:"partition" yaml:"partition"`
	// Experimental.
	ReadOnly *bool `field:"optional" json:"readOnly" yaml:"readOnly"`
}

// Experimental.
type TenantSpecSideCarsVolumesGitRepo struct {
	// Experimental.
	Repository *string `field:"required" json:"repository" yaml:"repository"`
	// Experimental.
	Directory *string `field:"optional" json:"directory" yaml:"directory"`
	// Experimental.
	Revision *string `field:"optional" json:"revision" yaml:"revision"`
}

// Experimental.
type TenantSpecSideCarsVolumesGlusterfs struct {
	// Experimental.
	Endpoints *string `field:"required" json:"endpoints" yaml:"endpoints"`
	// Experimental.
	Path *string `field:"required" json:"path" yaml:"path"`
	// Experimental.
	ReadOnly *bool `field:"optional" json:"readOnly" yaml:"readOnly"`
}

// Experimental.
type TenantSpecSideCarsVolumesHostPath struct {
	// Experimental.
	Path *string `field:"required" json:"path" yaml:"path"`
	// Experimental.
	Type *string `field:"optional" json:"type" yaml:"type"`
}

// Experimental.
type TenantSpecSideCarsVolumesIscsi struct {
	// Experimental.
	Iqn *string `field:"required" json:"iqn" yaml:"iqn"`
	// Experimental.
	Lun *float64 `field:"required" json:"lun" yaml:"lun"`
	// Experimental.
	TargetPortal *string `field:"required" json:"targetPortal" yaml:"targetPortal"`
	// Experimental.
	ChapAuthDiscovery *bool `field:"optional" json:"chapAuthDiscovery" yaml:"chapAuthDiscovery"`
	// Experimental.
	ChapAuthSession *bool `field:"optional" json:"chapAuthSession" yaml:"chapAuthSession"`
	// Experimental.
	FsType *string `field:"optional" json:"fsType" yaml:"fsType"`
	// Experimental.
	InitiatorName *string `field:"optional" json:"initiatorName" yaml:"initiatorName"`
	// Experimental.
	IscsiInterface *string `field:"optional" json:"iscsiInterface" yaml:"iscsiInterface"`
	// Experimental.
	Portals *[]*string `field:"optional" json:"portals" yaml:"portals"`
	// Experimental.
	ReadOnly *bool `field:"optional" json:"readOnly" yaml:"readOnly"`
	// Experimental.
	SecretRef *TenantSpecSideCarsVolumesIscsiSecretRef `field:"optional" json:"secretRef" yaml:"secretRef"`
}

// Experimental.
type TenantSpecSideCarsVolumesIscsiSecretRef struct {
	// Experimental.
	Name *string `field:"optional" json:"name" yaml:"name"`
}

// Experimental.
type TenantSpecSideCarsVolumesNfs struct {
	// Experimental.
	Path *string `field:"required" json:"path" yaml:"path"`
	// Experimental.
	Server *string `field:"required" json:"server" yaml:"server"`
	// Experimental.
	ReadOnly *bool `field:"optional" json:"readOnly" yaml:"readOnly"`
}

// Experimental.
type TenantSpecSideCarsVolumesPersistentVolumeClaim struct {
	// Experimental.
	ClaimName *string `field:"required" json:"claimName" yaml:"claimName"`
	// Experimental.
	ReadOnly *bool `field:"optional" json:"readOnly" yaml:"readOnly"`
}

// Experimental.
type TenantSpecSideCarsVolumesPhotonPersistentDisk struct {
	// Experimental.
	PdId *string `field:"required" json:"pdId" yaml:"pdId"`
	// Experimental.
	FsType *string `field:"optional" json:"fsType" yaml:"fsType"`
}

// Experimental.
type TenantSpecSideCarsVolumesPortworxVolume struct {
	// Experimental.
	VolumeId *string `field:"required" json:"volumeId" yaml:"volumeId"`
	// Experimental.
	FsType *string `field:"optional" json:"fsType" yaml:"fsType"`
	// Experimental.
	ReadOnly *bool `field:"optional" json:"readOnly" yaml:"readOnly"`
}

// Experimental.
type TenantSpecSideCarsVolumesProjected struct {
	// Experimental.
	DefaultMode *float64 `field:"optional" json:"defaultMode" yaml:"defaultMode"`
	// Experimental.
	Sources *[]*TenantSpecSideCarsVolumesProjectedSources `field:"optional" json:"sources" yaml:"sources"`
}

// Experimental.
type TenantSpecSideCarsVolumesProjectedSources struct {
	// Experimental.
	ConfigMap *TenantSpecSideCarsVolumesProjectedSourcesConfigMap `field:"optional" json:"configMap" yaml:"configMap"`
	// Experimental.
	DownwardApi *TenantSpecSideCarsVolumesProjectedSourcesDownwardApi `field:"optional" json:"downwardApi" yaml:"downwardApi"`
	// Experimental.
	Secret *TenantSpecSideCarsVolumesProjectedSourcesSecret `field:"optional" json:"secret" yaml:"secret"`
	// Experimental.
	ServiceAccountToken *TenantSpecSideCarsVolumesProjectedSourcesServiceAccountToken `field:"optional" json:"serviceAccountToken" yaml:"serviceAccountToken"`
}

// Experimental.
type TenantSpecSideCarsVolumesProjectedSourcesConfigMap struct {
	// Experimental.
	Items *[]*TenantSpecSideCarsVolumesProjectedSourcesConfigMapItems `field:"optional" json:"items" yaml:"items"`
	// Experimental.
	Name *string `field:"optional" json:"name" yaml:"name"`
	// Experimental.
	Optional *bool `field:"optional" json:"optional" yaml:"optional"`
}

// Experimental.
type TenantSpecSideCarsVolumesProjectedSourcesConfigMapItems struct {
	// Experimental.
	Key *string `field:"required" json:"key" yaml:"key"`
	// Experimental.
	Path *string `field:"required" json:"path" yaml:"path"`
	// Experimental.
	Mode *float64 `field:"optional" json:"mode" yaml:"mode"`
}

// Experimental.
type TenantSpecSideCarsVolumesProjectedSourcesDownwardApi struct {
	// Experimental.
	Items *[]*TenantSpecSideCarsVolumesProjectedSourcesDownwardApiItems `field:"optional" json:"items" yaml:"items"`
}

// Experimental.
type TenantSpecSideCarsVolumesProjectedSourcesDownwardApiItems struct {
	// Experimental.
	Path *string `field:"required" json:"path" yaml:"path"`
	// Experimental.
	FieldRef *TenantSpecSideCarsVolumesProjectedSourcesDownwardApiItemsFieldRef `field:"optional" json:"fieldRef" yaml:"fieldRef"`
	// Experimental.
	Mode *float64 `field:"optional" json:"mode" yaml:"mode"`
	// Experimental.
	ResourceFieldRef *TenantSpecSideCarsVolumesProjectedSourcesDownwardApiItemsResourceFieldRef `field:"optional" json:"resourceFieldRef" yaml:"resourceFieldRef"`
}

// Experimental.
type TenantSpecSideCarsVolumesProjectedSourcesDownwardApiItemsFieldRef struct {
	// Experimental.
	FieldPath *string `field:"required" json:"fieldPath" yaml:"fieldPath"`
	// Experimental.
	ApiVersion *string `field:"optional" json:"apiVersion" yaml:"apiVersion"`
}

// Experimental.
type TenantSpecSideCarsVolumesProjectedSourcesDownwardApiItemsResourceFieldRef struct {
	// Experimental.
	Resource *string `field:"required" json:"resource" yaml:"resource"`
	// Experimental.
	ContainerName *string `field:"optional" json:"containerName" yaml:"containerName"`
	// Experimental.
	Divisor TenantSpecSideCarsVolumesProjectedSourcesDownwardApiItemsResourceFieldRefDivisor `field:"optional" json:"divisor" yaml:"divisor"`
}

// Experimental.
type TenantSpecSideCarsVolumesProjectedSourcesDownwardApiItemsResourceFieldRefDivisor interface {
	// Experimental.
	Value() interface{}
}

// The jsii proxy struct for TenantSpecSideCarsVolumesProjectedSourcesDownwardApiItemsResourceFieldRefDivisor
type jsiiProxy_TenantSpecSideCarsVolumesProjectedSourcesDownwardApiItemsResourceFieldRefDivisor struct {
	_ byte // padding
}

func (j *jsiiProxy_TenantSpecSideCarsVolumesProjectedSourcesDownwardApiItemsResourceFieldRefDivisor) Value() interface{} {
	var returns interface{}
	_jsii_.Get(
		j,
		"value",
		&returns,
	)
	return returns
}


// Experimental.
func TenantSpecSideCarsVolumesProjectedSourcesDownwardApiItemsResourceFieldRefDivisor_FromNumber(value *float64) TenantSpecSideCarsVolumesProjectedSourcesDownwardApiItemsResourceFieldRefDivisor {
	_init_.Initialize()

	var returns TenantSpecSideCarsVolumesProjectedSourcesDownwardApiItemsResourceFieldRefDivisor

	_jsii_.StaticInvoke(
		"cdk8s-metaflow.minio.TenantSpecSideCarsVolumesProjectedSourcesDownwardApiItemsResourceFieldRefDivisor",
		"fromNumber",
		[]interface{}{value},
		&returns,
	)

	return returns
}

// Experimental.
func TenantSpecSideCarsVolumesProjectedSourcesDownwardApiItemsResourceFieldRefDivisor_FromString(value *string) TenantSpecSideCarsVolumesProjectedSourcesDownwardApiItemsResourceFieldRefDivisor {
	_init_.Initialize()

	var returns TenantSpecSideCarsVolumesProjectedSourcesDownwardApiItemsResourceFieldRefDivisor

	_jsii_.StaticInvoke(
		"cdk8s-metaflow.minio.TenantSpecSideCarsVolumesProjectedSourcesDownwardApiItemsResourceFieldRefDivisor",
		"fromString",
		[]interface{}{value},
		&returns,
	)

	return returns
}

// Experimental.
type TenantSpecSideCarsVolumesProjectedSourcesSecret struct {
	// Experimental.
	Items *[]*TenantSpecSideCarsVolumesProjectedSourcesSecretItems `field:"optional" json:"items" yaml:"items"`
	// Experimental.
	Name *string `field:"optional" json:"name" yaml:"name"`
	// Experimental.
	Optional *bool `field:"optional" json:"optional" yaml:"optional"`
}

// Experimental.
type TenantSpecSideCarsVolumesProjectedSourcesSecretItems struct {
	// Experimental.
	Key *string `field:"required" json:"key" yaml:"key"`
	// Experimental.
	Path *string `field:"required" json:"path" yaml:"path"`
	// Experimental.
	Mode *float64 `field:"optional" json:"mode" yaml:"mode"`
}

// Experimental.
type TenantSpecSideCarsVolumesProjectedSourcesServiceAccountToken struct {
	// Experimental.
	Path *string `field:"required" json:"path" yaml:"path"`
	// Experimental.
	Audience *string `field:"optional" json:"audience" yaml:"audience"`
	// Experimental.
	ExpirationSeconds *float64 `field:"optional" json:"expirationSeconds" yaml:"expirationSeconds"`
}

// Experimental.
type TenantSpecSideCarsVolumesQuobyte struct {
	// Experimental.
	Registry *string `field:"required" json:"registry" yaml:"registry"`
	// Experimental.
	Volume *string `field:"required" json:"volume" yaml:"volume"`
	// Experimental.
	Group *string `field:"optional" json:"group" yaml:"group"`
	// Experimental.
	ReadOnly *bool `field:"optional" json:"readOnly" yaml:"readOnly"`
	// Experimental.
	Tenant *string `field:"optional" json:"tenant" yaml:"tenant"`
	// Experimental.
	User *string `field:"optional" json:"user" yaml:"user"`
}

// Experimental.
type TenantSpecSideCarsVolumesRbd struct {
	// Experimental.
	Image *string `field:"required" json:"image" yaml:"image"`
	// Experimental.
	Monitors *[]*string `field:"required" json:"monitors" yaml:"monitors"`
	// Experimental.
	FsType *string `field:"optional" json:"fsType" yaml:"fsType"`
	// Experimental.
	Keyring *string `field:"optional" json:"keyring" yaml:"keyring"`
	// Experimental.
	Pool *string `field:"optional" json:"pool" yaml:"pool"`
	// Experimental.
	ReadOnly *bool `field:"optional" json:"readOnly" yaml:"readOnly"`
	// Experimental.
	SecretRef *TenantSpecSideCarsVolumesRbdSecretRef `field:"optional" json:"secretRef" yaml:"secretRef"`
	// Experimental.
	User *string `field:"optional" json:"user" yaml:"user"`
}

// Experimental.
type TenantSpecSideCarsVolumesRbdSecretRef struct {
	// Experimental.
	Name *string `field:"optional" json:"name" yaml:"name"`
}

// Experimental.
type TenantSpecSideCarsVolumesScaleIo struct {
	// Experimental.
	Gateway *string `field:"required" json:"gateway" yaml:"gateway"`
	// Experimental.
	SecretRef *TenantSpecSideCarsVolumesScaleIoSecretRef `field:"required" json:"secretRef" yaml:"secretRef"`
	// Experimental.
	System *string `field:"required" json:"system" yaml:"system"`
	// Experimental.
	FsType *string `field:"optional" json:"fsType" yaml:"fsType"`
	// Experimental.
	ProtectionDomain *string `field:"optional" json:"protectionDomain" yaml:"protectionDomain"`
	// Experimental.
	ReadOnly *bool `field:"optional" json:"readOnly" yaml:"readOnly"`
	// Experimental.
	SslEnabled *bool `field:"optional" json:"sslEnabled" yaml:"sslEnabled"`
	// Experimental.
	StorageMode *string `field:"optional" json:"storageMode" yaml:"storageMode"`
	// Experimental.
	StoragePool *string `field:"optional" json:"storagePool" yaml:"storagePool"`
	// Experimental.
	VolumeName *string `field:"optional" json:"volumeName" yaml:"volumeName"`
}

// Experimental.
type TenantSpecSideCarsVolumesScaleIoSecretRef struct {
	// Experimental.
	Name *string `field:"optional" json:"name" yaml:"name"`
}

// Experimental.
type TenantSpecSideCarsVolumesSecret struct {
	// Experimental.
	DefaultMode *float64 `field:"optional" json:"defaultMode" yaml:"defaultMode"`
	// Experimental.
	Items *[]*TenantSpecSideCarsVolumesSecretItems `field:"optional" json:"items" yaml:"items"`
	// Experimental.
	Optional *bool `field:"optional" json:"optional" yaml:"optional"`
	// Experimental.
	SecretName *string `field:"optional" json:"secretName" yaml:"secretName"`
}

// Experimental.
type TenantSpecSideCarsVolumesSecretItems struct {
	// Experimental.
	Key *string `field:"required" json:"key" yaml:"key"`
	// Experimental.
	Path *string `field:"required" json:"path" yaml:"path"`
	// Experimental.
	Mode *float64 `field:"optional" json:"mode" yaml:"mode"`
}

// Experimental.
type TenantSpecSideCarsVolumesStorageos struct {
	// Experimental.
	FsType *string `field:"optional" json:"fsType" yaml:"fsType"`
	// Experimental.
	ReadOnly *bool `field:"optional" json:"readOnly" yaml:"readOnly"`
	// Experimental.
	SecretRef *TenantSpecSideCarsVolumesStorageosSecretRef `field:"optional" json:"secretRef" yaml:"secretRef"`
	// Experimental.
	VolumeName *string `field:"optional" json:"volumeName" yaml:"volumeName"`
	// Experimental.
	VolumeNamespace *string `field:"optional" json:"volumeNamespace" yaml:"volumeNamespace"`
}

// Experimental.
type TenantSpecSideCarsVolumesStorageosSecretRef struct {
	// Experimental.
	Name *string `field:"optional" json:"name" yaml:"name"`
}

// Experimental.
type TenantSpecSideCarsVolumesVsphereVolume struct {
	// Experimental.
	VolumePath *string `field:"required" json:"volumePath" yaml:"volumePath"`
	// Experimental.
	FsType *string `field:"optional" json:"fsType" yaml:"fsType"`
	// Experimental.
	StoragePolicyId *string `field:"optional" json:"storagePolicyId" yaml:"storagePolicyId"`
	// Experimental.
	StoragePolicyName *string `field:"optional" json:"storagePolicyName" yaml:"storagePolicyName"`
}

// Experimental.
type TenantSpecUsers struct {
	// Experimental.
	Name *string `field:"optional" json:"name" yaml:"name"`
}

// Experimental.
type TenantSpecZones struct {
	// Experimental.
	Servers *float64 `field:"required" json:"servers" yaml:"servers"`
	// Experimental.
	VolumeClaimTemplate *TenantSpecZonesVolumeClaimTemplate `field:"required" json:"volumeClaimTemplate" yaml:"volumeClaimTemplate"`
	// Experimental.
	VolumesPerServer *float64 `field:"required" json:"volumesPerServer" yaml:"volumesPerServer"`
	// Experimental.
	Affinity *TenantSpecZonesAffinity `field:"optional" json:"affinity" yaml:"affinity"`
	// Experimental.
	Annotations *map[string]*string `field:"optional" json:"annotations" yaml:"annotations"`
	// Experimental.
	Labels *map[string]*string `field:"optional" json:"labels" yaml:"labels"`
	// Experimental.
	Name *string `field:"optional" json:"name" yaml:"name"`
	// Experimental.
	NodeSelector *map[string]*string `field:"optional" json:"nodeSelector" yaml:"nodeSelector"`
	// Experimental.
	Resources *TenantSpecZonesResources `field:"optional" json:"resources" yaml:"resources"`
	// Experimental.
	SecurityContext *TenantSpecZonesSecurityContext `field:"optional" json:"securityContext" yaml:"securityContext"`
	// Experimental.
	Tolerations *[]*TenantSpecZonesTolerations `field:"optional" json:"tolerations" yaml:"tolerations"`
	// Experimental.
	TopologySpreadConstraints *[]*TenantSpecZonesTopologySpreadConstraints `field:"optional" json:"topologySpreadConstraints" yaml:"topologySpreadConstraints"`
}

// Experimental.
type TenantSpecZonesAffinity struct {
	// Experimental.
	NodeAffinity *TenantSpecZonesAffinityNodeAffinity `field:"optional" json:"nodeAffinity" yaml:"nodeAffinity"`
	// Experimental.
	PodAffinity *TenantSpecZonesAffinityPodAffinity `field:"optional" json:"podAffinity" yaml:"podAffinity"`
	// Experimental.
	PodAntiAffinity *TenantSpecZonesAffinityPodAntiAffinity `field:"optional" json:"podAntiAffinity" yaml:"podAntiAffinity"`
}

// Experimental.
type TenantSpecZonesAffinityNodeAffinity struct {
	// Experimental.
	PreferredDuringSchedulingIgnoredDuringExecution *[]*TenantSpecZonesAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution `field:"optional" json:"preferredDuringSchedulingIgnoredDuringExecution" yaml:"preferredDuringSchedulingIgnoredDuringExecution"`
	// Experimental.
	RequiredDuringSchedulingIgnoredDuringExecution *TenantSpecZonesAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution `field:"optional" json:"requiredDuringSchedulingIgnoredDuringExecution" yaml:"requiredDuringSchedulingIgnoredDuringExecution"`
}

// Experimental.
type TenantSpecZonesAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution struct {
	// Experimental.
	Preference *TenantSpecZonesAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference `field:"required" json:"preference" yaml:"preference"`
	// Experimental.
	Weight *float64 `field:"required" json:"weight" yaml:"weight"`
}

// Experimental.
type TenantSpecZonesAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference struct {
	// Experimental.
	MatchExpressions *[]*TenantSpecZonesAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions `field:"optional" json:"matchExpressions" yaml:"matchExpressions"`
	// Experimental.
	MatchFields *[]*TenantSpecZonesAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields `field:"optional" json:"matchFields" yaml:"matchFields"`
}

// Experimental.
type TenantSpecZonesAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions struct {
	// Experimental.
	Key *string `field:"required" json:"key" yaml:"key"`
	// Experimental.
	Operator *string `field:"required" json:"operator" yaml:"operator"`
	// Experimental.
	Values *[]*string `field:"optional" json:"values" yaml:"values"`
}

// Experimental.
type TenantSpecZonesAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields struct {
	// Experimental.
	Key *string `field:"required" json:"key" yaml:"key"`
	// Experimental.
	Operator *string `field:"required" json:"operator" yaml:"operator"`
	// Experimental.
	Values *[]*string `field:"optional" json:"values" yaml:"values"`
}

// Experimental.
type TenantSpecZonesAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution struct {
	// Experimental.
	NodeSelectorTerms *[]*TenantSpecZonesAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms `field:"required" json:"nodeSelectorTerms" yaml:"nodeSelectorTerms"`
}

// Experimental.
type TenantSpecZonesAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms struct {
	// Experimental.
	MatchExpressions *[]*TenantSpecZonesAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions `field:"optional" json:"matchExpressions" yaml:"matchExpressions"`
	// Experimental.
	MatchFields *[]*TenantSpecZonesAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields `field:"optional" json:"matchFields" yaml:"matchFields"`
}

// Experimental.
type TenantSpecZonesAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions struct {
	// Experimental.
	Key *string `field:"required" json:"key" yaml:"key"`
	// Experimental.
	Operator *string `field:"required" json:"operator" yaml:"operator"`
	// Experimental.
	Values *[]*string `field:"optional" json:"values" yaml:"values"`
}

// Experimental.
type TenantSpecZonesAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields struct {
	// Experimental.
	Key *string `field:"required" json:"key" yaml:"key"`
	// Experimental.
	Operator *string `field:"required" json:"operator" yaml:"operator"`
	// Experimental.
	Values *[]*string `field:"optional" json:"values" yaml:"values"`
}

// Experimental.
type TenantSpecZonesAffinityPodAffinity struct {
	// Experimental.
	PreferredDuringSchedulingIgnoredDuringExecution *[]*TenantSpecZonesAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution `field:"optional" json:"preferredDuringSchedulingIgnoredDuringExecution" yaml:"preferredDuringSchedulingIgnoredDuringExecution"`
	// Experimental.
	RequiredDuringSchedulingIgnoredDuringExecution *[]*TenantSpecZonesAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution `field:"optional" json:"requiredDuringSchedulingIgnoredDuringExecution" yaml:"requiredDuringSchedulingIgnoredDuringExecution"`
}

// Experimental.
type TenantSpecZonesAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution struct {
	// Experimental.
	PodAffinityTerm *TenantSpecZonesAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm `field:"required" json:"podAffinityTerm" yaml:"podAffinityTerm"`
	// Experimental.
	Weight *float64 `field:"required" json:"weight" yaml:"weight"`
}

// Experimental.
type TenantSpecZonesAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm struct {
	// Experimental.
	TopologyKey *string `field:"required" json:"topologyKey" yaml:"topologyKey"`
	// Experimental.
	LabelSelector *TenantSpecZonesAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector `field:"optional" json:"labelSelector" yaml:"labelSelector"`
	// Experimental.
	Namespaces *[]*string `field:"optional" json:"namespaces" yaml:"namespaces"`
}

// Experimental.
type TenantSpecZonesAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector struct {
	// Experimental.
	MatchExpressions *[]*TenantSpecZonesAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions `field:"optional" json:"matchExpressions" yaml:"matchExpressions"`
	// Experimental.
	MatchLabels *map[string]*string `field:"optional" json:"matchLabels" yaml:"matchLabels"`
}

// Experimental.
type TenantSpecZonesAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions struct {
	// Experimental.
	Key *string `field:"required" json:"key" yaml:"key"`
	// Experimental.
	Operator *string `field:"required" json:"operator" yaml:"operator"`
	// Experimental.
	Values *[]*string `field:"optional" json:"values" yaml:"values"`
}

// Experimental.
type TenantSpecZonesAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution struct {
	// Experimental.
	TopologyKey *string `field:"required" json:"topologyKey" yaml:"topologyKey"`
	// Experimental.
	LabelSelector *TenantSpecZonesAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector `field:"optional" json:"labelSelector" yaml:"labelSelector"`
	// Experimental.
	Namespaces *[]*string `field:"optional" json:"namespaces" yaml:"namespaces"`
}

// Experimental.
type TenantSpecZonesAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector struct {
	// Experimental.
	MatchExpressions *[]*TenantSpecZonesAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions `field:"optional" json:"matchExpressions" yaml:"matchExpressions"`
	// Experimental.
	MatchLabels *map[string]*string `field:"optional" json:"matchLabels" yaml:"matchLabels"`
}

// Experimental.
type TenantSpecZonesAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions struct {
	// Experimental.
	Key *string `field:"required" json:"key" yaml:"key"`
	// Experimental.
	Operator *string `field:"required" json:"operator" yaml:"operator"`
	// Experimental.
	Values *[]*string `field:"optional" json:"values" yaml:"values"`
}

// Experimental.
type TenantSpecZonesAffinityPodAntiAffinity struct {
	// Experimental.
	PreferredDuringSchedulingIgnoredDuringExecution *[]*TenantSpecZonesAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution `field:"optional" json:"preferredDuringSchedulingIgnoredDuringExecution" yaml:"preferredDuringSchedulingIgnoredDuringExecution"`
	// Experimental.
	RequiredDuringSchedulingIgnoredDuringExecution *[]*TenantSpecZonesAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution `field:"optional" json:"requiredDuringSchedulingIgnoredDuringExecution" yaml:"requiredDuringSchedulingIgnoredDuringExecution"`
}

// Experimental.
type TenantSpecZonesAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution struct {
	// Experimental.
	PodAffinityTerm *TenantSpecZonesAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm `field:"required" json:"podAffinityTerm" yaml:"podAffinityTerm"`
	// Experimental.
	Weight *float64 `field:"required" json:"weight" yaml:"weight"`
}

// Experimental.
type TenantSpecZonesAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm struct {
	// Experimental.
	TopologyKey *string `field:"required" json:"topologyKey" yaml:"topologyKey"`
	// Experimental.
	LabelSelector *TenantSpecZonesAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector `field:"optional" json:"labelSelector" yaml:"labelSelector"`
	// Experimental.
	Namespaces *[]*string `field:"optional" json:"namespaces" yaml:"namespaces"`
}

// Experimental.
type TenantSpecZonesAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector struct {
	// Experimental.
	MatchExpressions *[]*TenantSpecZonesAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions `field:"optional" json:"matchExpressions" yaml:"matchExpressions"`
	// Experimental.
	MatchLabels *map[string]*string `field:"optional" json:"matchLabels" yaml:"matchLabels"`
}

// Experimental.
type TenantSpecZonesAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions struct {
	// Experimental.
	Key *string `field:"required" json:"key" yaml:"key"`
	// Experimental.
	Operator *string `field:"required" json:"operator" yaml:"operator"`
	// Experimental.
	Values *[]*string `field:"optional" json:"values" yaml:"values"`
}

// Experimental.
type TenantSpecZonesAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution struct {
	// Experimental.
	TopologyKey *string `field:"required" json:"topologyKey" yaml:"topologyKey"`
	// Experimental.
	LabelSelector *TenantSpecZonesAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector `field:"optional" json:"labelSelector" yaml:"labelSelector"`
	// Experimental.
	Namespaces *[]*string `field:"optional" json:"namespaces" yaml:"namespaces"`
}

// Experimental.
type TenantSpecZonesAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector struct {
	// Experimental.
	MatchExpressions *[]*TenantSpecZonesAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions `field:"optional" json:"matchExpressions" yaml:"matchExpressions"`
	// Experimental.
	MatchLabels *map[string]*string `field:"optional" json:"matchLabels" yaml:"matchLabels"`
}

// Experimental.
type TenantSpecZonesAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions struct {
	// Experimental.
	Key *string `field:"required" json:"key" yaml:"key"`
	// Experimental.
	Operator *string `field:"required" json:"operator" yaml:"operator"`
	// Experimental.
	Values *[]*string `field:"optional" json:"values" yaml:"values"`
}

// Experimental.
type TenantSpecZonesResources struct {
	// Experimental.
	Limits *map[string]TenantSpecZonesResourcesLimits `field:"optional" json:"limits" yaml:"limits"`
	// Experimental.
	Requests *map[string]TenantSpecZonesResourcesRequests `field:"optional" json:"requests" yaml:"requests"`
}

// Experimental.
type TenantSpecZonesResourcesLimits interface {
	// Experimental.
	Value() interface{}
}

// The jsii proxy struct for TenantSpecZonesResourcesLimits
type jsiiProxy_TenantSpecZonesResourcesLimits struct {
	_ byte // padding
}

func (j *jsiiProxy_TenantSpecZonesResourcesLimits) Value() interface{} {
	var returns interface{}
	_jsii_.Get(
		j,
		"value",
		&returns,
	)
	return returns
}


// Experimental.
func TenantSpecZonesResourcesLimits_FromNumber(value *float64) TenantSpecZonesResourcesLimits {
	_init_.Initialize()

	var returns TenantSpecZonesResourcesLimits

	_jsii_.StaticInvoke(
		"cdk8s-metaflow.minio.TenantSpecZonesResourcesLimits",
		"fromNumber",
		[]interface{}{value},
		&returns,
	)

	return returns
}

// Experimental.
func TenantSpecZonesResourcesLimits_FromString(value *string) TenantSpecZonesResourcesLimits {
	_init_.Initialize()

	var returns TenantSpecZonesResourcesLimits

	_jsii_.StaticInvoke(
		"cdk8s-metaflow.minio.TenantSpecZonesResourcesLimits",
		"fromString",
		[]interface{}{value},
		&returns,
	)

	return returns
}

// Experimental.
type TenantSpecZonesResourcesRequests interface {
	// Experimental.
	Value() interface{}
}

// The jsii proxy struct for TenantSpecZonesResourcesRequests
type jsiiProxy_TenantSpecZonesResourcesRequests struct {
	_ byte // padding
}

func (j *jsiiProxy_TenantSpecZonesResourcesRequests) Value() interface{} {
	var returns interface{}
	_jsii_.Get(
		j,
		"value",
		&returns,
	)
	return returns
}


// Experimental.
func TenantSpecZonesResourcesRequests_FromNumber(value *float64) TenantSpecZonesResourcesRequests {
	_init_.Initialize()

	var returns TenantSpecZonesResourcesRequests

	_jsii_.StaticInvoke(
		"cdk8s-metaflow.minio.TenantSpecZonesResourcesRequests",
		"fromNumber",
		[]interface{}{value},
		&returns,
	)

	return returns
}

// Experimental.
func TenantSpecZonesResourcesRequests_FromString(value *string) TenantSpecZonesResourcesRequests {
	_init_.Initialize()

	var returns TenantSpecZonesResourcesRequests

	_jsii_.StaticInvoke(
		"cdk8s-metaflow.minio.TenantSpecZonesResourcesRequests",
		"fromString",
		[]interface{}{value},
		&returns,
	)

	return returns
}

// Experimental.
type TenantSpecZonesSecurityContext struct {
	// Experimental.
	FsGroup *float64 `field:"optional" json:"fsGroup" yaml:"fsGroup"`
	// Experimental.
	FsGroupChangePolicy *string `field:"optional" json:"fsGroupChangePolicy" yaml:"fsGroupChangePolicy"`
	// Experimental.
	RunAsGroup *float64 `field:"optional" json:"runAsGroup" yaml:"runAsGroup"`
	// Experimental.
	RunAsNonRoot *bool `field:"optional" json:"runAsNonRoot" yaml:"runAsNonRoot"`
	// Experimental.
	RunAsUser *float64 `field:"optional" json:"runAsUser" yaml:"runAsUser"`
	// Experimental.
	SeccompProfile *TenantSpecZonesSecurityContextSeccompProfile `field:"optional" json:"seccompProfile" yaml:"seccompProfile"`
	// Experimental.
	SeLinuxOptions *TenantSpecZonesSecurityContextSeLinuxOptions `field:"optional" json:"seLinuxOptions" yaml:"seLinuxOptions"`
	// Experimental.
	SupplementalGroups *[]*float64 `field:"optional" json:"supplementalGroups" yaml:"supplementalGroups"`
	// Experimental.
	Sysctls *[]*TenantSpecZonesSecurityContextSysctls `field:"optional" json:"sysctls" yaml:"sysctls"`
	// Experimental.
	WindowsOptions *TenantSpecZonesSecurityContextWindowsOptions `field:"optional" json:"windowsOptions" yaml:"windowsOptions"`
}

// Experimental.
type TenantSpecZonesSecurityContextSeLinuxOptions struct {
	// Experimental.
	Level *string `field:"optional" json:"level" yaml:"level"`
	// Experimental.
	Role *string `field:"optional" json:"role" yaml:"role"`
	// Experimental.
	Type *string `field:"optional" json:"type" yaml:"type"`
	// Experimental.
	User *string `field:"optional" json:"user" yaml:"user"`
}

// Experimental.
type TenantSpecZonesSecurityContextSeccompProfile struct {
	// Experimental.
	Type *string `field:"required" json:"type" yaml:"type"`
	// Experimental.
	LocalhostProfile *string `field:"optional" json:"localhostProfile" yaml:"localhostProfile"`
}

// Experimental.
type TenantSpecZonesSecurityContextSysctls struct {
	// Experimental.
	Name *string `field:"required" json:"name" yaml:"name"`
	// Experimental.
	Value *string `field:"required" json:"value" yaml:"value"`
}

// Experimental.
type TenantSpecZonesSecurityContextWindowsOptions struct {
	// Experimental.
	GmsaCredentialSpec *string `field:"optional" json:"gmsaCredentialSpec" yaml:"gmsaCredentialSpec"`
	// Experimental.
	GmsaCredentialSpecName *string `field:"optional" json:"gmsaCredentialSpecName" yaml:"gmsaCredentialSpecName"`
	// Experimental.
	RunAsUserName *string `field:"optional" json:"runAsUserName" yaml:"runAsUserName"`
}

// Experimental.
type TenantSpecZonesTolerations struct {
	// Experimental.
	Effect *string `field:"optional" json:"effect" yaml:"effect"`
	// Experimental.
	Key *string `field:"optional" json:"key" yaml:"key"`
	// Experimental.
	Operator *string `field:"optional" json:"operator" yaml:"operator"`
	// Experimental.
	TolerationSeconds *float64 `field:"optional" json:"tolerationSeconds" yaml:"tolerationSeconds"`
	// Experimental.
	Value *string `field:"optional" json:"value" yaml:"value"`
}

// Experimental.
type TenantSpecZonesTopologySpreadConstraints struct {
	// Experimental.
	MaxSkew *float64 `field:"required" json:"maxSkew" yaml:"maxSkew"`
	// Experimental.
	TopologyKey *string `field:"required" json:"topologyKey" yaml:"topologyKey"`
	// Experimental.
	WhenUnsatisfiable *string `field:"required" json:"whenUnsatisfiable" yaml:"whenUnsatisfiable"`
	// Experimental.
	LabelSelector *TenantSpecZonesTopologySpreadConstraintsLabelSelector `field:"optional" json:"labelSelector" yaml:"labelSelector"`
}

// Experimental.
type TenantSpecZonesTopologySpreadConstraintsLabelSelector struct {
	// Experimental.
	MatchExpressions *[]*TenantSpecZonesTopologySpreadConstraintsLabelSelectorMatchExpressions `field:"optional" json:"matchExpressions" yaml:"matchExpressions"`
	// Experimental.
	MatchLabels *map[string]*string `field:"optional" json:"matchLabels" yaml:"matchLabels"`
}

// Experimental.
type TenantSpecZonesTopologySpreadConstraintsLabelSelectorMatchExpressions struct {
	// Experimental.
	Key *string `field:"required" json:"key" yaml:"key"`
	// Experimental.
	Operator *string `field:"required" json:"operator" yaml:"operator"`
	// Experimental.
	Values *[]*string `field:"optional" json:"values" yaml:"values"`
}

// Experimental.
type TenantSpecZonesVolumeClaimTemplate struct {
	// Experimental.
	ApiVersion *string `field:"optional" json:"apiVersion" yaml:"apiVersion"`
	// Experimental.
	Kind *string `field:"optional" json:"kind" yaml:"kind"`
	// Experimental.
	Metadata *TenantSpecZonesVolumeClaimTemplateMetadata `field:"optional" json:"metadata" yaml:"metadata"`
	// Experimental.
	Spec *TenantSpecZonesVolumeClaimTemplateSpec `field:"optional" json:"spec" yaml:"spec"`
	// Experimental.
	Status *TenantSpecZonesVolumeClaimTemplateStatus `field:"optional" json:"status" yaml:"status"`
}

// Experimental.
type TenantSpecZonesVolumeClaimTemplateMetadata struct {
	// Experimental.
	Annotations *map[string]*string `field:"optional" json:"annotations" yaml:"annotations"`
	// Experimental.
	Finalizers *[]*string `field:"optional" json:"finalizers" yaml:"finalizers"`
	// Experimental.
	Labels *map[string]*string `field:"optional" json:"labels" yaml:"labels"`
	// Experimental.
	Name *string `field:"optional" json:"name" yaml:"name"`
	// Experimental.
	Namespace *string `field:"optional" json:"namespace" yaml:"namespace"`
}

// Experimental.
type TenantSpecZonesVolumeClaimTemplateSpec struct {
	// Experimental.
	AccessModes *[]*string `field:"optional" json:"accessModes" yaml:"accessModes"`
	// Experimental.
	DataSource *TenantSpecZonesVolumeClaimTemplateSpecDataSource `field:"optional" json:"dataSource" yaml:"dataSource"`
	// Experimental.
	Resources *TenantSpecZonesVolumeClaimTemplateSpecResources `field:"optional" json:"resources" yaml:"resources"`
	// Experimental.
	Selector *TenantSpecZonesVolumeClaimTemplateSpecSelector `field:"optional" json:"selector" yaml:"selector"`
	// Experimental.
	StorageClassName *string `field:"optional" json:"storageClassName" yaml:"storageClassName"`
	// Experimental.
	VolumeMode *string `field:"optional" json:"volumeMode" yaml:"volumeMode"`
	// Experimental.
	VolumeName *string `field:"optional" json:"volumeName" yaml:"volumeName"`
}

// Experimental.
type TenantSpecZonesVolumeClaimTemplateSpecDataSource struct {
	// Experimental.
	Kind *string `field:"required" json:"kind" yaml:"kind"`
	// Experimental.
	Name *string `field:"required" json:"name" yaml:"name"`
	// Experimental.
	ApiGroup *string `field:"optional" json:"apiGroup" yaml:"apiGroup"`
}

// Experimental.
type TenantSpecZonesVolumeClaimTemplateSpecResources struct {
	// Experimental.
	Limits *map[string]TenantSpecZonesVolumeClaimTemplateSpecResourcesLimits `field:"optional" json:"limits" yaml:"limits"`
	// Experimental.
	Requests *map[string]TenantSpecZonesVolumeClaimTemplateSpecResourcesRequests `field:"optional" json:"requests" yaml:"requests"`
}

// Experimental.
type TenantSpecZonesVolumeClaimTemplateSpecResourcesLimits interface {
	// Experimental.
	Value() interface{}
}

// The jsii proxy struct for TenantSpecZonesVolumeClaimTemplateSpecResourcesLimits
type jsiiProxy_TenantSpecZonesVolumeClaimTemplateSpecResourcesLimits struct {
	_ byte // padding
}

func (j *jsiiProxy_TenantSpecZonesVolumeClaimTemplateSpecResourcesLimits) Value() interface{} {
	var returns interface{}
	_jsii_.Get(
		j,
		"value",
		&returns,
	)
	return returns
}


// Experimental.
func TenantSpecZonesVolumeClaimTemplateSpecResourcesLimits_FromNumber(value *float64) TenantSpecZonesVolumeClaimTemplateSpecResourcesLimits {
	_init_.Initialize()

	var returns TenantSpecZonesVolumeClaimTemplateSpecResourcesLimits

	_jsii_.StaticInvoke(
		"cdk8s-metaflow.minio.TenantSpecZonesVolumeClaimTemplateSpecResourcesLimits",
		"fromNumber",
		[]interface{}{value},
		&returns,
	)

	return returns
}

// Experimental.
func TenantSpecZonesVolumeClaimTemplateSpecResourcesLimits_FromString(value *string) TenantSpecZonesVolumeClaimTemplateSpecResourcesLimits {
	_init_.Initialize()

	var returns TenantSpecZonesVolumeClaimTemplateSpecResourcesLimits

	_jsii_.StaticInvoke(
		"cdk8s-metaflow.minio.TenantSpecZonesVolumeClaimTemplateSpecResourcesLimits",
		"fromString",
		[]interface{}{value},
		&returns,
	)

	return returns
}

// Experimental.
type TenantSpecZonesVolumeClaimTemplateSpecResourcesRequests interface {
	// Experimental.
	Value() interface{}
}

// The jsii proxy struct for TenantSpecZonesVolumeClaimTemplateSpecResourcesRequests
type jsiiProxy_TenantSpecZonesVolumeClaimTemplateSpecResourcesRequests struct {
	_ byte // padding
}

func (j *jsiiProxy_TenantSpecZonesVolumeClaimTemplateSpecResourcesRequests) Value() interface{} {
	var returns interface{}
	_jsii_.Get(
		j,
		"value",
		&returns,
	)
	return returns
}


// Experimental.
func TenantSpecZonesVolumeClaimTemplateSpecResourcesRequests_FromNumber(value *float64) TenantSpecZonesVolumeClaimTemplateSpecResourcesRequests {
	_init_.Initialize()

	var returns TenantSpecZonesVolumeClaimTemplateSpecResourcesRequests

	_jsii_.StaticInvoke(
		"cdk8s-metaflow.minio.TenantSpecZonesVolumeClaimTemplateSpecResourcesRequests",
		"fromNumber",
		[]interface{}{value},
		&returns,
	)

	return returns
}

// Experimental.
func TenantSpecZonesVolumeClaimTemplateSpecResourcesRequests_FromString(value *string) TenantSpecZonesVolumeClaimTemplateSpecResourcesRequests {
	_init_.Initialize()

	var returns TenantSpecZonesVolumeClaimTemplateSpecResourcesRequests

	_jsii_.StaticInvoke(
		"cdk8s-metaflow.minio.TenantSpecZonesVolumeClaimTemplateSpecResourcesRequests",
		"fromString",
		[]interface{}{value},
		&returns,
	)

	return returns
}

// Experimental.
type TenantSpecZonesVolumeClaimTemplateSpecSelector struct {
	// Experimental.
	MatchExpressions *[]*TenantSpecZonesVolumeClaimTemplateSpecSelectorMatchExpressions `field:"optional" json:"matchExpressions" yaml:"matchExpressions"`
	// Experimental.
	MatchLabels *map[string]*string `field:"optional" json:"matchLabels" yaml:"matchLabels"`
}

// Experimental.
type TenantSpecZonesVolumeClaimTemplateSpecSelectorMatchExpressions struct {
	// Experimental.
	Key *string `field:"required" json:"key" yaml:"key"`
	// Experimental.
	Operator *string `field:"required" json:"operator" yaml:"operator"`
	// Experimental.
	Values *[]*string `field:"optional" json:"values" yaml:"values"`
}

// Experimental.
type TenantSpecZonesVolumeClaimTemplateStatus struct {
	// Experimental.
	AccessModes *[]*string `field:"optional" json:"accessModes" yaml:"accessModes"`
	// Experimental.
	Capacity *map[string]TenantSpecZonesVolumeClaimTemplateStatusCapacity `field:"optional" json:"capacity" yaml:"capacity"`
	// Experimental.
	Conditions *[]*TenantSpecZonesVolumeClaimTemplateStatusConditions `field:"optional" json:"conditions" yaml:"conditions"`
	// Experimental.
	Phase *string `field:"optional" json:"phase" yaml:"phase"`
}

// Experimental.
type TenantSpecZonesVolumeClaimTemplateStatusCapacity interface {
	// Experimental.
	Value() interface{}
}

// The jsii proxy struct for TenantSpecZonesVolumeClaimTemplateStatusCapacity
type jsiiProxy_TenantSpecZonesVolumeClaimTemplateStatusCapacity struct {
	_ byte // padding
}

func (j *jsiiProxy_TenantSpecZonesVolumeClaimTemplateStatusCapacity) Value() interface{} {
	var returns interface{}
	_jsii_.Get(
		j,
		"value",
		&returns,
	)
	return returns
}


// Experimental.
func TenantSpecZonesVolumeClaimTemplateStatusCapacity_FromNumber(value *float64) TenantSpecZonesVolumeClaimTemplateStatusCapacity {
	_init_.Initialize()

	var returns TenantSpecZonesVolumeClaimTemplateStatusCapacity

	_jsii_.StaticInvoke(
		"cdk8s-metaflow.minio.TenantSpecZonesVolumeClaimTemplateStatusCapacity",
		"fromNumber",
		[]interface{}{value},
		&returns,
	)

	return returns
}

// Experimental.
func TenantSpecZonesVolumeClaimTemplateStatusCapacity_FromString(value *string) TenantSpecZonesVolumeClaimTemplateStatusCapacity {
	_init_.Initialize()

	var returns TenantSpecZonesVolumeClaimTemplateStatusCapacity

	_jsii_.StaticInvoke(
		"cdk8s-metaflow.minio.TenantSpecZonesVolumeClaimTemplateStatusCapacity",
		"fromString",
		[]interface{}{value},
		&returns,
	)

	return returns
}

// Experimental.
type TenantSpecZonesVolumeClaimTemplateStatusConditions struct {
	// Experimental.
	Status *string `field:"required" json:"status" yaml:"status"`
	// Experimental.
	Type *string `field:"required" json:"type" yaml:"type"`
	// Experimental.
	LastProbeTime *time.Time `field:"optional" json:"lastProbeTime" yaml:"lastProbeTime"`
	// Experimental.
	LastTransitionTime *time.Time `field:"optional" json:"lastTransitionTime" yaml:"lastTransitionTime"`
	// Experimental.
	Message *string `field:"optional" json:"message" yaml:"message"`
	// Experimental.
	Reason *string `field:"optional" json:"reason" yaml:"reason"`
}

// Experimental.
type TenantV2 interface {
	cdk8s.ApiObject
	// The group portion of the API version (e.g. `authorization.k8s.io`).
	// Experimental.
	ApiGroup() *string
	// The object's API version (e.g. `authorization.k8s.io/v1`).
	// Experimental.
	ApiVersion() *string
	// The chart in which this object is defined.
	// Experimental.
	Chart() cdk8s.Chart
	// The object kind.
	// Experimental.
	Kind() *string
	// Metadata associated with this API object.
	// Experimental.
	Metadata() cdk8s.ApiObjectMetadataDefinition
	// The name of the API object.
	//
	// If a name is specified in `metadata.name` this will be the name returned.
	// Otherwise, a name will be generated by calling
	// `Chart.of(this).generatedObjectName(this)`, which by default uses the
	// construct path to generate a DNS-compatible name for the resource.
	// Experimental.
	Name() *string
	// The tree node.
	// Experimental.
	Node() constructs.Node
	// Create a dependency between this ApiObject and other constructs.
	//
	// These can be other ApiObjects, Charts, or custom.
	// Experimental.
	AddDependency(dependencies ...constructs.IConstruct)
	// Applies a set of RFC-6902 JSON-Patch operations to the manifest synthesized for this API object.
	//
	// Example:
	//     kubePod.addJsonPatch(JsonPatch.replace('/spec/enableServiceLinks', true));
	//
	// Experimental.
	AddJsonPatch(ops ...cdk8s.JsonPatch)
	// Renders the object to Kubernetes JSON.
	// Experimental.
	ToJson() interface{}
	// Returns a string representation of this construct.
	// Experimental.
	ToString() *string
}

// The jsii proxy struct for TenantV2
type jsiiProxy_TenantV2 struct {
	internal.Type__cdk8sApiObject
}

func (j *jsiiProxy_TenantV2) ApiGroup() *string {
	var returns *string
	_jsii_.Get(
		j,
		"apiGroup",
		&returns,
	)
	return returns
}

func (j *jsiiProxy_TenantV2) ApiVersion() *string {
	var returns *string
	_jsii_.Get(
		j,
		"apiVersion",
		&returns,
	)
	return returns
}

func (j *jsiiProxy_TenantV2) Chart() cdk8s.Chart {
	var returns cdk8s.Chart
	_jsii_.Get(
		j,
		"chart",
		&returns,
	)
	return returns
}

func (j *jsiiProxy_TenantV2) Kind() *string {
	var returns *string
	_jsii_.Get(
		j,
		"kind",
		&returns,
	)
	return returns
}

func (j *jsiiProxy_TenantV2) Metadata() cdk8s.ApiObjectMetadataDefinition {
	var returns cdk8s.ApiObjectMetadataDefinition
	_jsii_.Get(
		j,
		"metadata",
		&returns,
	)
	return returns
}

func (j *jsiiProxy_TenantV2) Name() *string {
	var returns *string
	_jsii_.Get(
		j,
		"name",
		&returns,
	)
	return returns
}

func (j *jsiiProxy_TenantV2) Node() constructs.Node {
	var returns constructs.Node
	_jsii_.Get(
		j,
		"node",
		&returns,
	)
	return returns
}


// Defines a "TenantV2" API object.
// Experimental.
func NewTenantV2(scope constructs.Construct, id *string, props *TenantV2Props) TenantV2 {
	_init_.Initialize()

	j := jsiiProxy_TenantV2{}

	_jsii_.Create(
		"cdk8s-metaflow.minio.TenantV2",
		[]interface{}{scope, id, props},
		&j,
	)

	return &j
}

// Defines a "TenantV2" API object.
// Experimental.
func NewTenantV2_Override(t TenantV2, scope constructs.Construct, id *string, props *TenantV2Props) {
	_init_.Initialize()

	_jsii_.Create(
		"cdk8s-metaflow.minio.TenantV2",
		[]interface{}{scope, id, props},
		t,
	)
}

// Checks if `x` is a construct.
//
// Use this method instead of `instanceof` to properly detect `Construct`
// instances, even when the construct library is symlinked.
//
// Explanation: in JavaScript, multiple copies of the `constructs` library on
// disk are seen as independent, completely different libraries. As a
// consequence, the class `Construct` in each copy of the `constructs` library
// is seen as a different class, and an instance of one class will not test as
// `instanceof` the other class. `npm install` will not create installations
// like this, but users may manually symlink construct libraries together or
// use a monorepo tool: in those cases, multiple copies of the `constructs`
// library can be accidentally installed, and `instanceof` will behave
// unpredictably. It is safest to avoid using `instanceof`, and using
// this type-testing method instead.
//
// Returns: true if `x` is an object created from a class which extends `Construct`.
// Experimental.
func TenantV2_IsConstruct(x interface{}) *bool {
	_init_.Initialize()

	var returns *bool

	_jsii_.StaticInvoke(
		"cdk8s-metaflow.minio.TenantV2",
		"isConstruct",
		[]interface{}{x},
		&returns,
	)

	return returns
}

// Renders a Kubernetes manifest for "TenantV2".
//
// This can be used to inline resource manifests inside other objects (e.g. as templates).
// Experimental.
func TenantV2_Manifest(props *TenantV2Props) interface{} {
	_init_.Initialize()

	var returns interface{}

	_jsii_.StaticInvoke(
		"cdk8s-metaflow.minio.TenantV2",
		"manifest",
		[]interface{}{props},
		&returns,
	)

	return returns
}

// Returns the `ApiObject` named `Resource` which is a child of the given construct.
//
// If `c` is an `ApiObject`, it is returned directly. Throws an
// exception if the construct does not have a child named `Default` _or_ if
// this child is not an `ApiObject`.
// Experimental.
func TenantV2_Of(c constructs.IConstruct) cdk8s.ApiObject {
	_init_.Initialize()

	var returns cdk8s.ApiObject

	_jsii_.StaticInvoke(
		"cdk8s-metaflow.minio.TenantV2",
		"of",
		[]interface{}{c},
		&returns,
	)

	return returns
}

func TenantV2_GVK() *cdk8s.GroupVersionKind {
	_init_.Initialize()
	var returns *cdk8s.GroupVersionKind
	_jsii_.StaticGet(
		"cdk8s-metaflow.minio.TenantV2",
		"GVK",
		&returns,
	)
	return returns
}

func (t *jsiiProxy_TenantV2) AddDependency(dependencies ...constructs.IConstruct) {
	args := []interface{}{}
	for _, a := range dependencies {
		args = append(args, a)
	}

	_jsii_.InvokeVoid(
		t,
		"addDependency",
		args,
	)
}

func (t *jsiiProxy_TenantV2) AddJsonPatch(ops ...cdk8s.JsonPatch) {
	args := []interface{}{}
	for _, a := range ops {
		args = append(args, a)
	}

	_jsii_.InvokeVoid(
		t,
		"addJsonPatch",
		args,
	)
}

func (t *jsiiProxy_TenantV2) ToJson() interface{} {
	var returns interface{}

	_jsii_.Invoke(
		t,
		"toJson",
		nil, // no parameters
		&returns,
	)

	return returns
}

func (t *jsiiProxy_TenantV2) ToString() *string {
	var returns *string

	_jsii_.Invoke(
		t,
		"toString",
		nil, // no parameters
		&returns,
	)

	return returns
}

// Experimental.
type TenantV2Props struct {
	// Experimental.
	Spec *TenantV2Spec `field:"required" json:"spec" yaml:"spec"`
	// Experimental.
	Metadata *cdk8s.ApiObjectMetadata `field:"optional" json:"metadata" yaml:"metadata"`
	// Experimental.
	Scheduler *TenantV2Scheduler `field:"optional" json:"scheduler" yaml:"scheduler"`
}

// Experimental.
type TenantV2Scheduler struct {
	// Experimental.
	Name *string `field:"required" json:"name" yaml:"name"`
}

// Experimental.
type TenantV2Spec struct {
	// Experimental.
	Pools *[]*TenantV2SpecPools `field:"required" json:"pools" yaml:"pools"`
	// Experimental.
	Buckets *[]*TenantV2SpecBuckets `field:"optional" json:"buckets" yaml:"buckets"`
	// Experimental.
	CertConfig *TenantV2SpecCertConfig `field:"optional" json:"certConfig" yaml:"certConfig"`
	// Experimental.
	Configuration *TenantV2SpecConfiguration `field:"optional" json:"configuration" yaml:"configuration"`
	// Experimental.
	CredsSecret *TenantV2SpecCredsSecret `field:"optional" json:"credsSecret" yaml:"credsSecret"`
	// Experimental.
	Env *[]*TenantV2SpecEnv `field:"optional" json:"env" yaml:"env"`
	// Experimental.
	ExposeServices *TenantV2SpecExposeServices `field:"optional" json:"exposeServices" yaml:"exposeServices"`
	// Experimental.
	ExternalCaCertSecret *[]*TenantV2SpecExternalCaCertSecret `field:"optional" json:"externalCaCertSecret" yaml:"externalCaCertSecret"`
	// Experimental.
	ExternalCertSecret *[]*TenantV2SpecExternalCertSecret `field:"optional" json:"externalCertSecret" yaml:"externalCertSecret"`
	// Experimental.
	ExternalClientCertSecret *TenantV2SpecExternalClientCertSecret `field:"optional" json:"externalClientCertSecret" yaml:"externalClientCertSecret"`
	// Experimental.
	Features *TenantV2SpecFeatures `field:"optional" json:"features" yaml:"features"`
	// Experimental.
	Image *string `field:"optional" json:"image" yaml:"image"`
	// Experimental.
	ImagePullPolicy *string `field:"optional" json:"imagePullPolicy" yaml:"imagePullPolicy"`
	// Experimental.
	ImagePullSecret *TenantV2SpecImagePullSecret `field:"optional" json:"imagePullSecret" yaml:"imagePullSecret"`
	// Experimental.
	Kes *TenantV2SpecKes `field:"optional" json:"kes" yaml:"kes"`
	// Experimental.
	Liveness *TenantV2SpecLiveness `field:"optional" json:"liveness" yaml:"liveness"`
	// Experimental.
	Log *TenantV2SpecLog `field:"optional" json:"log" yaml:"log"`
	// Experimental.
	Logging *TenantV2SpecLogging `field:"optional" json:"logging" yaml:"logging"`
	// Experimental.
	MountPath *string `field:"optional" json:"mountPath" yaml:"mountPath"`
	// Experimental.
	PodManagementPolicy *string `field:"optional" json:"podManagementPolicy" yaml:"podManagementPolicy"`
	// Experimental.
	PriorityClassName *string `field:"optional" json:"priorityClassName" yaml:"priorityClassName"`
	// Experimental.
	Prometheus *TenantV2SpecPrometheus `field:"optional" json:"prometheus" yaml:"prometheus"`
	// Experimental.
	PrometheusOperator *bool `field:"optional" json:"prometheusOperator" yaml:"prometheusOperator"`
	// Experimental.
	Readiness *TenantV2SpecReadiness `field:"optional" json:"readiness" yaml:"readiness"`
	// Experimental.
	RequestAutoCert *bool `field:"optional" json:"requestAutoCert" yaml:"requestAutoCert"`
	// Experimental.
	S3 *TenantV2SpecS3 `field:"optional" json:"s3" yaml:"s3"`
	// Experimental.
	ServiceAccountName *string `field:"optional" json:"serviceAccountName" yaml:"serviceAccountName"`
	// Experimental.
	ServiceMetadata *TenantV2SpecServiceMetadata `field:"optional" json:"serviceMetadata" yaml:"serviceMetadata"`
	// Experimental.
	SideCars *TenantV2SpecSideCars `field:"optional" json:"sideCars" yaml:"sideCars"`
	// Experimental.
	SubPath *string `field:"optional" json:"subPath" yaml:"subPath"`
	// Experimental.
	Users *[]*TenantV2SpecUsers `field:"optional" json:"users" yaml:"users"`
}

// Experimental.
type TenantV2SpecBuckets struct {
	// Experimental.
	Name *string `field:"optional" json:"name" yaml:"name"`
	// Experimental.
	ObjectLock *bool `field:"optional" json:"objectLock" yaml:"objectLock"`
	// Experimental.
	Region *string `field:"optional" json:"region" yaml:"region"`
}

// Experimental.
type TenantV2SpecCertConfig struct {
	// Experimental.
	CommonName *string `field:"optional" json:"commonName" yaml:"commonName"`
	// Experimental.
	DnsNames *[]*string `field:"optional" json:"dnsNames" yaml:"dnsNames"`
	// Experimental.
	OrganizationName *[]*string `field:"optional" json:"organizationName" yaml:"organizationName"`
}

// Experimental.
type TenantV2SpecConfiguration struct {
	// Experimental.
	Name *string `field:"optional" json:"name" yaml:"name"`
}

// Experimental.
type TenantV2SpecCredsSecret struct {
	// Experimental.
	Name *string `field:"optional" json:"name" yaml:"name"`
}

// Experimental.
type TenantV2SpecEnv struct {
	// Experimental.
	Name *string `field:"required" json:"name" yaml:"name"`
	// Experimental.
	Value *string `field:"optional" json:"value" yaml:"value"`
	// Experimental.
	ValueFrom *TenantV2SpecEnvValueFrom `field:"optional" json:"valueFrom" yaml:"valueFrom"`
}

// Experimental.
type TenantV2SpecEnvValueFrom struct {
	// Experimental.
	ConfigMapKeyRef *TenantV2SpecEnvValueFromConfigMapKeyRef `field:"optional" json:"configMapKeyRef" yaml:"configMapKeyRef"`
	// Experimental.
	FieldRef *TenantV2SpecEnvValueFromFieldRef `field:"optional" json:"fieldRef" yaml:"fieldRef"`
	// Experimental.
	ResourceFieldRef *TenantV2SpecEnvValueFromResourceFieldRef `field:"optional" json:"resourceFieldRef" yaml:"resourceFieldRef"`
	// Experimental.
	SecretKeyRef *TenantV2SpecEnvValueFromSecretKeyRef `field:"optional" json:"secretKeyRef" yaml:"secretKeyRef"`
}

// Experimental.
type TenantV2SpecEnvValueFromConfigMapKeyRef struct {
	// Experimental.
	Key *string `field:"required" json:"key" yaml:"key"`
	// Experimental.
	Name *string `field:"optional" json:"name" yaml:"name"`
	// Experimental.
	Optional *bool `field:"optional" json:"optional" yaml:"optional"`
}

// Experimental.
type TenantV2SpecEnvValueFromFieldRef struct {
	// Experimental.
	FieldPath *string `field:"required" json:"fieldPath" yaml:"fieldPath"`
	// Experimental.
	ApiVersion *string `field:"optional" json:"apiVersion" yaml:"apiVersion"`
}

// Experimental.
type TenantV2SpecEnvValueFromResourceFieldRef struct {
	// Experimental.
	Resource *string `field:"required" json:"resource" yaml:"resource"`
	// Experimental.
	ContainerName *string `field:"optional" json:"containerName" yaml:"containerName"`
	// Experimental.
	Divisor TenantV2SpecEnvValueFromResourceFieldRefDivisor `field:"optional" json:"divisor" yaml:"divisor"`
}

// Experimental.
type TenantV2SpecEnvValueFromResourceFieldRefDivisor interface {
	// Experimental.
	Value() interface{}
}

// The jsii proxy struct for TenantV2SpecEnvValueFromResourceFieldRefDivisor
type jsiiProxy_TenantV2SpecEnvValueFromResourceFieldRefDivisor struct {
	_ byte // padding
}

func (j *jsiiProxy_TenantV2SpecEnvValueFromResourceFieldRefDivisor) Value() interface{} {
	var returns interface{}
	_jsii_.Get(
		j,
		"value",
		&returns,
	)
	return returns
}


// Experimental.
func TenantV2SpecEnvValueFromResourceFieldRefDivisor_FromNumber(value *float64) TenantV2SpecEnvValueFromResourceFieldRefDivisor {
	_init_.Initialize()

	var returns TenantV2SpecEnvValueFromResourceFieldRefDivisor

	_jsii_.StaticInvoke(
		"cdk8s-metaflow.minio.TenantV2SpecEnvValueFromResourceFieldRefDivisor",
		"fromNumber",
		[]interface{}{value},
		&returns,
	)

	return returns
}

// Experimental.
func TenantV2SpecEnvValueFromResourceFieldRefDivisor_FromString(value *string) TenantV2SpecEnvValueFromResourceFieldRefDivisor {
	_init_.Initialize()

	var returns TenantV2SpecEnvValueFromResourceFieldRefDivisor

	_jsii_.StaticInvoke(
		"cdk8s-metaflow.minio.TenantV2SpecEnvValueFromResourceFieldRefDivisor",
		"fromString",
		[]interface{}{value},
		&returns,
	)

	return returns
}

// Experimental.
type TenantV2SpecEnvValueFromSecretKeyRef struct {
	// Experimental.
	Key *string `field:"required" json:"key" yaml:"key"`
	// Experimental.
	Name *string `field:"optional" json:"name" yaml:"name"`
	// Experimental.
	Optional *bool `field:"optional" json:"optional" yaml:"optional"`
}

// Experimental.
type TenantV2SpecExposeServices struct {
	// Experimental.
	Console *bool `field:"optional" json:"console" yaml:"console"`
	// Experimental.
	Minio *bool `field:"optional" json:"minio" yaml:"minio"`
}

// Experimental.
type TenantV2SpecExternalCaCertSecret struct {
	// Experimental.
	Name *string `field:"required" json:"name" yaml:"name"`
	// Experimental.
	Type *string `field:"optional" json:"type" yaml:"type"`
}

// Experimental.
type TenantV2SpecExternalCertSecret struct {
	// Experimental.
	Name *string `field:"required" json:"name" yaml:"name"`
	// Experimental.
	Type *string `field:"optional" json:"type" yaml:"type"`
}

// Experimental.
type TenantV2SpecExternalClientCertSecret struct {
	// Experimental.
	Name *string `field:"required" json:"name" yaml:"name"`
	// Experimental.
	Type *string `field:"optional" json:"type" yaml:"type"`
}

// Experimental.
type TenantV2SpecFeatures struct {
	// Experimental.
	BucketDns *bool `field:"optional" json:"bucketDns" yaml:"bucketDns"`
	// Experimental.
	Domains *TenantV2SpecFeaturesDomains `field:"optional" json:"domains" yaml:"domains"`
}

// Experimental.
type TenantV2SpecFeaturesDomains struct {
	// Experimental.
	Console *string `field:"optional" json:"console" yaml:"console"`
	// Experimental.
	Minio *[]*string `field:"optional" json:"minio" yaml:"minio"`
}

// Experimental.
type TenantV2SpecImagePullSecret struct {
	// Experimental.
	Name *string `field:"optional" json:"name" yaml:"name"`
}

// Experimental.
type TenantV2SpecKes struct {
	// Experimental.
	KesSecret *TenantV2SpecKesKesSecret `field:"required" json:"kesSecret" yaml:"kesSecret"`
	// Experimental.
	Affinity *TenantV2SpecKesAffinity `field:"optional" json:"affinity" yaml:"affinity"`
	// Experimental.
	Annotations *map[string]*string `field:"optional" json:"annotations" yaml:"annotations"`
	// Experimental.
	ClientCertSecret *TenantV2SpecKesClientCertSecret `field:"optional" json:"clientCertSecret" yaml:"clientCertSecret"`
	// Experimental.
	ExternalCertSecret *TenantV2SpecKesExternalCertSecret `field:"optional" json:"externalCertSecret" yaml:"externalCertSecret"`
	// Experimental.
	Image *string `field:"optional" json:"image" yaml:"image"`
	// Experimental.
	ImagePullPolicy *string `field:"optional" json:"imagePullPolicy" yaml:"imagePullPolicy"`
	// Experimental.
	KeyName *string `field:"optional" json:"keyName" yaml:"keyName"`
	// Experimental.
	Labels *map[string]*string `field:"optional" json:"labels" yaml:"labels"`
	// Experimental.
	NodeSelector *map[string]*string `field:"optional" json:"nodeSelector" yaml:"nodeSelector"`
	// Experimental.
	Replicas *float64 `field:"optional" json:"replicas" yaml:"replicas"`
	// Experimental.
	Resources *TenantV2SpecKesResources `field:"optional" json:"resources" yaml:"resources"`
	// Experimental.
	SecurityContext *TenantV2SpecKesSecurityContext `field:"optional" json:"securityContext" yaml:"securityContext"`
	// Experimental.
	ServiceAccountName *string `field:"optional" json:"serviceAccountName" yaml:"serviceAccountName"`
	// Experimental.
	Tolerations *[]*TenantV2SpecKesTolerations `field:"optional" json:"tolerations" yaml:"tolerations"`
	// Experimental.
	TopologySpreadConstraints *[]*TenantV2SpecKesTopologySpreadConstraints `field:"optional" json:"topologySpreadConstraints" yaml:"topologySpreadConstraints"`
}

// Experimental.
type TenantV2SpecKesAffinity struct {
	// Experimental.
	NodeAffinity *TenantV2SpecKesAffinityNodeAffinity `field:"optional" json:"nodeAffinity" yaml:"nodeAffinity"`
	// Experimental.
	PodAffinity *TenantV2SpecKesAffinityPodAffinity `field:"optional" json:"podAffinity" yaml:"podAffinity"`
	// Experimental.
	PodAntiAffinity *TenantV2SpecKesAffinityPodAntiAffinity `field:"optional" json:"podAntiAffinity" yaml:"podAntiAffinity"`
}

// Experimental.
type TenantV2SpecKesAffinityNodeAffinity struct {
	// Experimental.
	PreferredDuringSchedulingIgnoredDuringExecution *[]*TenantV2SpecKesAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution `field:"optional" json:"preferredDuringSchedulingIgnoredDuringExecution" yaml:"preferredDuringSchedulingIgnoredDuringExecution"`
	// Experimental.
	RequiredDuringSchedulingIgnoredDuringExecution *TenantV2SpecKesAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution `field:"optional" json:"requiredDuringSchedulingIgnoredDuringExecution" yaml:"requiredDuringSchedulingIgnoredDuringExecution"`
}

// Experimental.
type TenantV2SpecKesAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution struct {
	// Experimental.
	Preference *TenantV2SpecKesAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference `field:"required" json:"preference" yaml:"preference"`
	// Experimental.
	Weight *float64 `field:"required" json:"weight" yaml:"weight"`
}

// Experimental.
type TenantV2SpecKesAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference struct {
	// Experimental.
	MatchExpressions *[]*TenantV2SpecKesAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions `field:"optional" json:"matchExpressions" yaml:"matchExpressions"`
	// Experimental.
	MatchFields *[]*TenantV2SpecKesAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields `field:"optional" json:"matchFields" yaml:"matchFields"`
}

// Experimental.
type TenantV2SpecKesAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions struct {
	// Experimental.
	Key *string `field:"required" json:"key" yaml:"key"`
	// Experimental.
	Operator *string `field:"required" json:"operator" yaml:"operator"`
	// Experimental.
	Values *[]*string `field:"optional" json:"values" yaml:"values"`
}

// Experimental.
type TenantV2SpecKesAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields struct {
	// Experimental.
	Key *string `field:"required" json:"key" yaml:"key"`
	// Experimental.
	Operator *string `field:"required" json:"operator" yaml:"operator"`
	// Experimental.
	Values *[]*string `field:"optional" json:"values" yaml:"values"`
}

// Experimental.
type TenantV2SpecKesAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution struct {
	// Experimental.
	NodeSelectorTerms *[]*TenantV2SpecKesAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms `field:"required" json:"nodeSelectorTerms" yaml:"nodeSelectorTerms"`
}

// Experimental.
type TenantV2SpecKesAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms struct {
	// Experimental.
	MatchExpressions *[]*TenantV2SpecKesAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions `field:"optional" json:"matchExpressions" yaml:"matchExpressions"`
	// Experimental.
	MatchFields *[]*TenantV2SpecKesAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields `field:"optional" json:"matchFields" yaml:"matchFields"`
}

// Experimental.
type TenantV2SpecKesAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions struct {
	// Experimental.
	Key *string `field:"required" json:"key" yaml:"key"`
	// Experimental.
	Operator *string `field:"required" json:"operator" yaml:"operator"`
	// Experimental.
	Values *[]*string `field:"optional" json:"values" yaml:"values"`
}

// Experimental.
type TenantV2SpecKesAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields struct {
	// Experimental.
	Key *string `field:"required" json:"key" yaml:"key"`
	// Experimental.
	Operator *string `field:"required" json:"operator" yaml:"operator"`
	// Experimental.
	Values *[]*string `field:"optional" json:"values" yaml:"values"`
}

// Experimental.
type TenantV2SpecKesAffinityPodAffinity struct {
	// Experimental.
	PreferredDuringSchedulingIgnoredDuringExecution *[]*TenantV2SpecKesAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution `field:"optional" json:"preferredDuringSchedulingIgnoredDuringExecution" yaml:"preferredDuringSchedulingIgnoredDuringExecution"`
	// Experimental.
	RequiredDuringSchedulingIgnoredDuringExecution *[]*TenantV2SpecKesAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution `field:"optional" json:"requiredDuringSchedulingIgnoredDuringExecution" yaml:"requiredDuringSchedulingIgnoredDuringExecution"`
}

// Experimental.
type TenantV2SpecKesAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution struct {
	// Experimental.
	PodAffinityTerm *TenantV2SpecKesAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm `field:"required" json:"podAffinityTerm" yaml:"podAffinityTerm"`
	// Experimental.
	Weight *float64 `field:"required" json:"weight" yaml:"weight"`
}

// Experimental.
type TenantV2SpecKesAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm struct {
	// Experimental.
	TopologyKey *string `field:"required" json:"topologyKey" yaml:"topologyKey"`
	// Experimental.
	LabelSelector *TenantV2SpecKesAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector `field:"optional" json:"labelSelector" yaml:"labelSelector"`
	// Experimental.
	Namespaces *[]*string `field:"optional" json:"namespaces" yaml:"namespaces"`
}

// Experimental.
type TenantV2SpecKesAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector struct {
	// Experimental.
	MatchExpressions *[]*TenantV2SpecKesAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions `field:"optional" json:"matchExpressions" yaml:"matchExpressions"`
	// Experimental.
	MatchLabels *map[string]*string `field:"optional" json:"matchLabels" yaml:"matchLabels"`
}

// Experimental.
type TenantV2SpecKesAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions struct {
	// Experimental.
	Key *string `field:"required" json:"key" yaml:"key"`
	// Experimental.
	Operator *string `field:"required" json:"operator" yaml:"operator"`
	// Experimental.
	Values *[]*string `field:"optional" json:"values" yaml:"values"`
}

// Experimental.
type TenantV2SpecKesAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution struct {
	// Experimental.
	TopologyKey *string `field:"required" json:"topologyKey" yaml:"topologyKey"`
	// Experimental.
	LabelSelector *TenantV2SpecKesAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector `field:"optional" json:"labelSelector" yaml:"labelSelector"`
	// Experimental.
	Namespaces *[]*string `field:"optional" json:"namespaces" yaml:"namespaces"`
}

// Experimental.
type TenantV2SpecKesAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector struct {
	// Experimental.
	MatchExpressions *[]*TenantV2SpecKesAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions `field:"optional" json:"matchExpressions" yaml:"matchExpressions"`
	// Experimental.
	MatchLabels *map[string]*string `field:"optional" json:"matchLabels" yaml:"matchLabels"`
}

// Experimental.
type TenantV2SpecKesAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions struct {
	// Experimental.
	Key *string `field:"required" json:"key" yaml:"key"`
	// Experimental.
	Operator *string `field:"required" json:"operator" yaml:"operator"`
	// Experimental.
	Values *[]*string `field:"optional" json:"values" yaml:"values"`
}

// Experimental.
type TenantV2SpecKesAffinityPodAntiAffinity struct {
	// Experimental.
	PreferredDuringSchedulingIgnoredDuringExecution *[]*TenantV2SpecKesAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution `field:"optional" json:"preferredDuringSchedulingIgnoredDuringExecution" yaml:"preferredDuringSchedulingIgnoredDuringExecution"`
	// Experimental.
	RequiredDuringSchedulingIgnoredDuringExecution *[]*TenantV2SpecKesAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution `field:"optional" json:"requiredDuringSchedulingIgnoredDuringExecution" yaml:"requiredDuringSchedulingIgnoredDuringExecution"`
}

// Experimental.
type TenantV2SpecKesAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution struct {
	// Experimental.
	PodAffinityTerm *TenantV2SpecKesAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm `field:"required" json:"podAffinityTerm" yaml:"podAffinityTerm"`
	// Experimental.
	Weight *float64 `field:"required" json:"weight" yaml:"weight"`
}

// Experimental.
type TenantV2SpecKesAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm struct {
	// Experimental.
	TopologyKey *string `field:"required" json:"topologyKey" yaml:"topologyKey"`
	// Experimental.
	LabelSelector *TenantV2SpecKesAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector `field:"optional" json:"labelSelector" yaml:"labelSelector"`
	// Experimental.
	Namespaces *[]*string `field:"optional" json:"namespaces" yaml:"namespaces"`
}

// Experimental.
type TenantV2SpecKesAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector struct {
	// Experimental.
	MatchExpressions *[]*TenantV2SpecKesAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions `field:"optional" json:"matchExpressions" yaml:"matchExpressions"`
	// Experimental.
	MatchLabels *map[string]*string `field:"optional" json:"matchLabels" yaml:"matchLabels"`
}

// Experimental.
type TenantV2SpecKesAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions struct {
	// Experimental.
	Key *string `field:"required" json:"key" yaml:"key"`
	// Experimental.
	Operator *string `field:"required" json:"operator" yaml:"operator"`
	// Experimental.
	Values *[]*string `field:"optional" json:"values" yaml:"values"`
}

// Experimental.
type TenantV2SpecKesAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution struct {
	// Experimental.
	TopologyKey *string `field:"required" json:"topologyKey" yaml:"topologyKey"`
	// Experimental.
	LabelSelector *TenantV2SpecKesAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector `field:"optional" json:"labelSelector" yaml:"labelSelector"`
	// Experimental.
	Namespaces *[]*string `field:"optional" json:"namespaces" yaml:"namespaces"`
}

// Experimental.
type TenantV2SpecKesAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector struct {
	// Experimental.
	MatchExpressions *[]*TenantV2SpecKesAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions `field:"optional" json:"matchExpressions" yaml:"matchExpressions"`
	// Experimental.
	MatchLabels *map[string]*string `field:"optional" json:"matchLabels" yaml:"matchLabels"`
}

// Experimental.
type TenantV2SpecKesAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions struct {
	// Experimental.
	Key *string `field:"required" json:"key" yaml:"key"`
	// Experimental.
	Operator *string `field:"required" json:"operator" yaml:"operator"`
	// Experimental.
	Values *[]*string `field:"optional" json:"values" yaml:"values"`
}

// Experimental.
type TenantV2SpecKesClientCertSecret struct {
	// Experimental.
	Name *string `field:"required" json:"name" yaml:"name"`
	// Experimental.
	Type *string `field:"optional" json:"type" yaml:"type"`
}

// Experimental.
type TenantV2SpecKesExternalCertSecret struct {
	// Experimental.
	Name *string `field:"required" json:"name" yaml:"name"`
	// Experimental.
	Type *string `field:"optional" json:"type" yaml:"type"`
}

// Experimental.
type TenantV2SpecKesKesSecret struct {
	// Experimental.
	Name *string `field:"optional" json:"name" yaml:"name"`
}

// Experimental.
type TenantV2SpecKesResources struct {
	// Experimental.
	Limits *map[string]TenantV2SpecKesResourcesLimits `field:"optional" json:"limits" yaml:"limits"`
	// Experimental.
	Requests *map[string]TenantV2SpecKesResourcesRequests `field:"optional" json:"requests" yaml:"requests"`
}

// Experimental.
type TenantV2SpecKesResourcesLimits interface {
	// Experimental.
	Value() interface{}
}

// The jsii proxy struct for TenantV2SpecKesResourcesLimits
type jsiiProxy_TenantV2SpecKesResourcesLimits struct {
	_ byte // padding
}

func (j *jsiiProxy_TenantV2SpecKesResourcesLimits) Value() interface{} {
	var returns interface{}
	_jsii_.Get(
		j,
		"value",
		&returns,
	)
	return returns
}


// Experimental.
func TenantV2SpecKesResourcesLimits_FromNumber(value *float64) TenantV2SpecKesResourcesLimits {
	_init_.Initialize()

	var returns TenantV2SpecKesResourcesLimits

	_jsii_.StaticInvoke(
		"cdk8s-metaflow.minio.TenantV2SpecKesResourcesLimits",
		"fromNumber",
		[]interface{}{value},
		&returns,
	)

	return returns
}

// Experimental.
func TenantV2SpecKesResourcesLimits_FromString(value *string) TenantV2SpecKesResourcesLimits {
	_init_.Initialize()

	var returns TenantV2SpecKesResourcesLimits

	_jsii_.StaticInvoke(
		"cdk8s-metaflow.minio.TenantV2SpecKesResourcesLimits",
		"fromString",
		[]interface{}{value},
		&returns,
	)

	return returns
}

// Experimental.
type TenantV2SpecKesResourcesRequests interface {
	// Experimental.
	Value() interface{}
}

// The jsii proxy struct for TenantV2SpecKesResourcesRequests
type jsiiProxy_TenantV2SpecKesResourcesRequests struct {
	_ byte // padding
}

func (j *jsiiProxy_TenantV2SpecKesResourcesRequests) Value() interface{} {
	var returns interface{}
	_jsii_.Get(
		j,
		"value",
		&returns,
	)
	return returns
}


// Experimental.
func TenantV2SpecKesResourcesRequests_FromNumber(value *float64) TenantV2SpecKesResourcesRequests {
	_init_.Initialize()

	var returns TenantV2SpecKesResourcesRequests

	_jsii_.StaticInvoke(
		"cdk8s-metaflow.minio.TenantV2SpecKesResourcesRequests",
		"fromNumber",
		[]interface{}{value},
		&returns,
	)

	return returns
}

// Experimental.
func TenantV2SpecKesResourcesRequests_FromString(value *string) TenantV2SpecKesResourcesRequests {
	_init_.Initialize()

	var returns TenantV2SpecKesResourcesRequests

	_jsii_.StaticInvoke(
		"cdk8s-metaflow.minio.TenantV2SpecKesResourcesRequests",
		"fromString",
		[]interface{}{value},
		&returns,
	)

	return returns
}

// Experimental.
type TenantV2SpecKesSecurityContext struct {
	// Experimental.
	FsGroup *float64 `field:"optional" json:"fsGroup" yaml:"fsGroup"`
	// Experimental.
	FsGroupChangePolicy *string `field:"optional" json:"fsGroupChangePolicy" yaml:"fsGroupChangePolicy"`
	// Experimental.
	RunAsGroup *float64 `field:"optional" json:"runAsGroup" yaml:"runAsGroup"`
	// Experimental.
	RunAsNonRoot *bool `field:"optional" json:"runAsNonRoot" yaml:"runAsNonRoot"`
	// Experimental.
	RunAsUser *float64 `field:"optional" json:"runAsUser" yaml:"runAsUser"`
	// Experimental.
	SeccompProfile *TenantV2SpecKesSecurityContextSeccompProfile `field:"optional" json:"seccompProfile" yaml:"seccompProfile"`
	// Experimental.
	SeLinuxOptions *TenantV2SpecKesSecurityContextSeLinuxOptions `field:"optional" json:"seLinuxOptions" yaml:"seLinuxOptions"`
	// Experimental.
	SupplementalGroups *[]*float64 `field:"optional" json:"supplementalGroups" yaml:"supplementalGroups"`
	// Experimental.
	Sysctls *[]*TenantV2SpecKesSecurityContextSysctls `field:"optional" json:"sysctls" yaml:"sysctls"`
	// Experimental.
	WindowsOptions *TenantV2SpecKesSecurityContextWindowsOptions `field:"optional" json:"windowsOptions" yaml:"windowsOptions"`
}

// Experimental.
type TenantV2SpecKesSecurityContextSeLinuxOptions struct {
	// Experimental.
	Level *string `field:"optional" json:"level" yaml:"level"`
	// Experimental.
	Role *string `field:"optional" json:"role" yaml:"role"`
	// Experimental.
	Type *string `field:"optional" json:"type" yaml:"type"`
	// Experimental.
	User *string `field:"optional" json:"user" yaml:"user"`
}

// Experimental.
type TenantV2SpecKesSecurityContextSeccompProfile struct {
	// Experimental.
	Type *string `field:"required" json:"type" yaml:"type"`
	// Experimental.
	LocalhostProfile *string `field:"optional" json:"localhostProfile" yaml:"localhostProfile"`
}

// Experimental.
type TenantV2SpecKesSecurityContextSysctls struct {
	// Experimental.
	Name *string `field:"required" json:"name" yaml:"name"`
	// Experimental.
	Value *string `field:"required" json:"value" yaml:"value"`
}

// Experimental.
type TenantV2SpecKesSecurityContextWindowsOptions struct {
	// Experimental.
	GmsaCredentialSpec *string `field:"optional" json:"gmsaCredentialSpec" yaml:"gmsaCredentialSpec"`
	// Experimental.
	GmsaCredentialSpecName *string `field:"optional" json:"gmsaCredentialSpecName" yaml:"gmsaCredentialSpecName"`
	// Experimental.
	RunAsUserName *string `field:"optional" json:"runAsUserName" yaml:"runAsUserName"`
}

// Experimental.
type TenantV2SpecKesTolerations struct {
	// Experimental.
	Effect *string `field:"optional" json:"effect" yaml:"effect"`
	// Experimental.
	Key *string `field:"optional" json:"key" yaml:"key"`
	// Experimental.
	Operator *string `field:"optional" json:"operator" yaml:"operator"`
	// Experimental.
	TolerationSeconds *float64 `field:"optional" json:"tolerationSeconds" yaml:"tolerationSeconds"`
	// Experimental.
	Value *string `field:"optional" json:"value" yaml:"value"`
}

// Experimental.
type TenantV2SpecKesTopologySpreadConstraints struct {
	// Experimental.
	MaxSkew *float64 `field:"required" json:"maxSkew" yaml:"maxSkew"`
	// Experimental.
	TopologyKey *string `field:"required" json:"topologyKey" yaml:"topologyKey"`
	// Experimental.
	WhenUnsatisfiable *string `field:"required" json:"whenUnsatisfiable" yaml:"whenUnsatisfiable"`
	// Experimental.
	LabelSelector *TenantV2SpecKesTopologySpreadConstraintsLabelSelector `field:"optional" json:"labelSelector" yaml:"labelSelector"`
}

// Experimental.
type TenantV2SpecKesTopologySpreadConstraintsLabelSelector struct {
	// Experimental.
	MatchExpressions *[]*TenantV2SpecKesTopologySpreadConstraintsLabelSelectorMatchExpressions `field:"optional" json:"matchExpressions" yaml:"matchExpressions"`
	// Experimental.
	MatchLabels *map[string]*string `field:"optional" json:"matchLabels" yaml:"matchLabels"`
}

// Experimental.
type TenantV2SpecKesTopologySpreadConstraintsLabelSelectorMatchExpressions struct {
	// Experimental.
	Key *string `field:"required" json:"key" yaml:"key"`
	// Experimental.
	Operator *string `field:"required" json:"operator" yaml:"operator"`
	// Experimental.
	Values *[]*string `field:"optional" json:"values" yaml:"values"`
}

// Experimental.
type TenantV2SpecLiveness struct {
	// Experimental.
	Exec *TenantV2SpecLivenessExec `field:"optional" json:"exec" yaml:"exec"`
	// Experimental.
	FailureThreshold *float64 `field:"optional" json:"failureThreshold" yaml:"failureThreshold"`
	// Experimental.
	HttpGet *TenantV2SpecLivenessHttpGet `field:"optional" json:"httpGet" yaml:"httpGet"`
	// Experimental.
	InitialDelaySeconds *float64 `field:"optional" json:"initialDelaySeconds" yaml:"initialDelaySeconds"`
	// Experimental.
	PeriodSeconds *float64 `field:"optional" json:"periodSeconds" yaml:"periodSeconds"`
	// Experimental.
	SuccessThreshold *float64 `field:"optional" json:"successThreshold" yaml:"successThreshold"`
	// Experimental.
	TcpSocket *TenantV2SpecLivenessTcpSocket `field:"optional" json:"tcpSocket" yaml:"tcpSocket"`
	// Experimental.
	TimeoutSeconds *float64 `field:"optional" json:"timeoutSeconds" yaml:"timeoutSeconds"`
}

// Experimental.
type TenantV2SpecLivenessExec struct {
	// Experimental.
	Command *[]*string `field:"optional" json:"command" yaml:"command"`
}

// Experimental.
type TenantV2SpecLivenessHttpGet struct {
	// Experimental.
	Port TenantV2SpecLivenessHttpGetPort `field:"required" json:"port" yaml:"port"`
	// Experimental.
	Host *string `field:"optional" json:"host" yaml:"host"`
	// Experimental.
	HttpHeaders *[]*TenantV2SpecLivenessHttpGetHttpHeaders `field:"optional" json:"httpHeaders" yaml:"httpHeaders"`
	// Experimental.
	Path *string `field:"optional" json:"path" yaml:"path"`
	// Experimental.
	Scheme *string `field:"optional" json:"scheme" yaml:"scheme"`
}

// Experimental.
type TenantV2SpecLivenessHttpGetHttpHeaders struct {
	// Experimental.
	Name *string `field:"required" json:"name" yaml:"name"`
	// Experimental.
	Value *string `field:"required" json:"value" yaml:"value"`
}

// Experimental.
type TenantV2SpecLivenessHttpGetPort interface {
	// Experimental.
	Value() interface{}
}

// The jsii proxy struct for TenantV2SpecLivenessHttpGetPort
type jsiiProxy_TenantV2SpecLivenessHttpGetPort struct {
	_ byte // padding
}

func (j *jsiiProxy_TenantV2SpecLivenessHttpGetPort) Value() interface{} {
	var returns interface{}
	_jsii_.Get(
		j,
		"value",
		&returns,
	)
	return returns
}


// Experimental.
func TenantV2SpecLivenessHttpGetPort_FromNumber(value *float64) TenantV2SpecLivenessHttpGetPort {
	_init_.Initialize()

	var returns TenantV2SpecLivenessHttpGetPort

	_jsii_.StaticInvoke(
		"cdk8s-metaflow.minio.TenantV2SpecLivenessHttpGetPort",
		"fromNumber",
		[]interface{}{value},
		&returns,
	)

	return returns
}

// Experimental.
func TenantV2SpecLivenessHttpGetPort_FromString(value *string) TenantV2SpecLivenessHttpGetPort {
	_init_.Initialize()

	var returns TenantV2SpecLivenessHttpGetPort

	_jsii_.StaticInvoke(
		"cdk8s-metaflow.minio.TenantV2SpecLivenessHttpGetPort",
		"fromString",
		[]interface{}{value},
		&returns,
	)

	return returns
}

// Experimental.
type TenantV2SpecLivenessTcpSocket struct {
	// Experimental.
	Port TenantV2SpecLivenessTcpSocketPort `field:"required" json:"port" yaml:"port"`
	// Experimental.
	Host *string `field:"optional" json:"host" yaml:"host"`
}

// Experimental.
type TenantV2SpecLivenessTcpSocketPort interface {
	// Experimental.
	Value() interface{}
}

// The jsii proxy struct for TenantV2SpecLivenessTcpSocketPort
type jsiiProxy_TenantV2SpecLivenessTcpSocketPort struct {
	_ byte // padding
}

func (j *jsiiProxy_TenantV2SpecLivenessTcpSocketPort) Value() interface{} {
	var returns interface{}
	_jsii_.Get(
		j,
		"value",
		&returns,
	)
	return returns
}


// Experimental.
func TenantV2SpecLivenessTcpSocketPort_FromNumber(value *float64) TenantV2SpecLivenessTcpSocketPort {
	_init_.Initialize()

	var returns TenantV2SpecLivenessTcpSocketPort

	_jsii_.StaticInvoke(
		"cdk8s-metaflow.minio.TenantV2SpecLivenessTcpSocketPort",
		"fromNumber",
		[]interface{}{value},
		&returns,
	)

	return returns
}

// Experimental.
func TenantV2SpecLivenessTcpSocketPort_FromString(value *string) TenantV2SpecLivenessTcpSocketPort {
	_init_.Initialize()

	var returns TenantV2SpecLivenessTcpSocketPort

	_jsii_.StaticInvoke(
		"cdk8s-metaflow.minio.TenantV2SpecLivenessTcpSocketPort",
		"fromString",
		[]interface{}{value},
		&returns,
	)

	return returns
}

// Experimental.
type TenantV2SpecLog struct {
	// Experimental.
	Affinity *TenantV2SpecLogAffinity `field:"optional" json:"affinity" yaml:"affinity"`
	// Experimental.
	Annotations *map[string]*string `field:"optional" json:"annotations" yaml:"annotations"`
	// Experimental.
	Audit *TenantV2SpecLogAudit `field:"optional" json:"audit" yaml:"audit"`
	// Experimental.
	Db *TenantV2SpecLogDb `field:"optional" json:"db" yaml:"db"`
	// Experimental.
	Image *string `field:"optional" json:"image" yaml:"image"`
	// Experimental.
	Labels *map[string]*string `field:"optional" json:"labels" yaml:"labels"`
	// Experimental.
	NodeSelector *map[string]*string `field:"optional" json:"nodeSelector" yaml:"nodeSelector"`
	// Experimental.
	Resources *TenantV2SpecLogResources `field:"optional" json:"resources" yaml:"resources"`
	// Experimental.
	SecurityContext *TenantV2SpecLogSecurityContext `field:"optional" json:"securityContext" yaml:"securityContext"`
	// Experimental.
	ServiceAccountName *string `field:"optional" json:"serviceAccountName" yaml:"serviceAccountName"`
	// Experimental.
	Tolerations *[]*TenantV2SpecLogTolerations `field:"optional" json:"tolerations" yaml:"tolerations"`
	// Experimental.
	TopologySpreadConstraints *[]*TenantV2SpecLogTopologySpreadConstraints `field:"optional" json:"topologySpreadConstraints" yaml:"topologySpreadConstraints"`
}

// Experimental.
type TenantV2SpecLogAffinity struct {
	// Experimental.
	NodeAffinity *TenantV2SpecLogAffinityNodeAffinity `field:"optional" json:"nodeAffinity" yaml:"nodeAffinity"`
	// Experimental.
	PodAffinity *TenantV2SpecLogAffinityPodAffinity `field:"optional" json:"podAffinity" yaml:"podAffinity"`
	// Experimental.
	PodAntiAffinity *TenantV2SpecLogAffinityPodAntiAffinity `field:"optional" json:"podAntiAffinity" yaml:"podAntiAffinity"`
}

// Experimental.
type TenantV2SpecLogAffinityNodeAffinity struct {
	// Experimental.
	PreferredDuringSchedulingIgnoredDuringExecution *[]*TenantV2SpecLogAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution `field:"optional" json:"preferredDuringSchedulingIgnoredDuringExecution" yaml:"preferredDuringSchedulingIgnoredDuringExecution"`
	// Experimental.
	RequiredDuringSchedulingIgnoredDuringExecution *TenantV2SpecLogAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution `field:"optional" json:"requiredDuringSchedulingIgnoredDuringExecution" yaml:"requiredDuringSchedulingIgnoredDuringExecution"`
}

// Experimental.
type TenantV2SpecLogAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution struct {
	// Experimental.
	Preference *TenantV2SpecLogAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference `field:"required" json:"preference" yaml:"preference"`
	// Experimental.
	Weight *float64 `field:"required" json:"weight" yaml:"weight"`
}

// Experimental.
type TenantV2SpecLogAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference struct {
	// Experimental.
	MatchExpressions *[]*TenantV2SpecLogAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions `field:"optional" json:"matchExpressions" yaml:"matchExpressions"`
	// Experimental.
	MatchFields *[]*TenantV2SpecLogAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields `field:"optional" json:"matchFields" yaml:"matchFields"`
}

// Experimental.
type TenantV2SpecLogAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions struct {
	// Experimental.
	Key *string `field:"required" json:"key" yaml:"key"`
	// Experimental.
	Operator *string `field:"required" json:"operator" yaml:"operator"`
	// Experimental.
	Values *[]*string `field:"optional" json:"values" yaml:"values"`
}

// Experimental.
type TenantV2SpecLogAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields struct {
	// Experimental.
	Key *string `field:"required" json:"key" yaml:"key"`
	// Experimental.
	Operator *string `field:"required" json:"operator" yaml:"operator"`
	// Experimental.
	Values *[]*string `field:"optional" json:"values" yaml:"values"`
}

// Experimental.
type TenantV2SpecLogAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution struct {
	// Experimental.
	NodeSelectorTerms *[]*TenantV2SpecLogAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms `field:"required" json:"nodeSelectorTerms" yaml:"nodeSelectorTerms"`
}

// Experimental.
type TenantV2SpecLogAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms struct {
	// Experimental.
	MatchExpressions *[]*TenantV2SpecLogAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions `field:"optional" json:"matchExpressions" yaml:"matchExpressions"`
	// Experimental.
	MatchFields *[]*TenantV2SpecLogAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields `field:"optional" json:"matchFields" yaml:"matchFields"`
}

// Experimental.
type TenantV2SpecLogAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions struct {
	// Experimental.
	Key *string `field:"required" json:"key" yaml:"key"`
	// Experimental.
	Operator *string `field:"required" json:"operator" yaml:"operator"`
	// Experimental.
	Values *[]*string `field:"optional" json:"values" yaml:"values"`
}

// Experimental.
type TenantV2SpecLogAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields struct {
	// Experimental.
	Key *string `field:"required" json:"key" yaml:"key"`
	// Experimental.
	Operator *string `field:"required" json:"operator" yaml:"operator"`
	// Experimental.
	Values *[]*string `field:"optional" json:"values" yaml:"values"`
}

// Experimental.
type TenantV2SpecLogAffinityPodAffinity struct {
	// Experimental.
	PreferredDuringSchedulingIgnoredDuringExecution *[]*TenantV2SpecLogAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution `field:"optional" json:"preferredDuringSchedulingIgnoredDuringExecution" yaml:"preferredDuringSchedulingIgnoredDuringExecution"`
	// Experimental.
	RequiredDuringSchedulingIgnoredDuringExecution *[]*TenantV2SpecLogAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution `field:"optional" json:"requiredDuringSchedulingIgnoredDuringExecution" yaml:"requiredDuringSchedulingIgnoredDuringExecution"`
}

// Experimental.
type TenantV2SpecLogAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution struct {
	// Experimental.
	PodAffinityTerm *TenantV2SpecLogAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm `field:"required" json:"podAffinityTerm" yaml:"podAffinityTerm"`
	// Experimental.
	Weight *float64 `field:"required" json:"weight" yaml:"weight"`
}

// Experimental.
type TenantV2SpecLogAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm struct {
	// Experimental.
	TopologyKey *string `field:"required" json:"topologyKey" yaml:"topologyKey"`
	// Experimental.
	LabelSelector *TenantV2SpecLogAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector `field:"optional" json:"labelSelector" yaml:"labelSelector"`
	// Experimental.
	Namespaces *[]*string `field:"optional" json:"namespaces" yaml:"namespaces"`
}

// Experimental.
type TenantV2SpecLogAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector struct {
	// Experimental.
	MatchExpressions *[]*TenantV2SpecLogAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions `field:"optional" json:"matchExpressions" yaml:"matchExpressions"`
	// Experimental.
	MatchLabels *map[string]*string `field:"optional" json:"matchLabels" yaml:"matchLabels"`
}

// Experimental.
type TenantV2SpecLogAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions struct {
	// Experimental.
	Key *string `field:"required" json:"key" yaml:"key"`
	// Experimental.
	Operator *string `field:"required" json:"operator" yaml:"operator"`
	// Experimental.
	Values *[]*string `field:"optional" json:"values" yaml:"values"`
}

// Experimental.
type TenantV2SpecLogAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution struct {
	// Experimental.
	TopologyKey *string `field:"required" json:"topologyKey" yaml:"topologyKey"`
	// Experimental.
	LabelSelector *TenantV2SpecLogAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector `field:"optional" json:"labelSelector" yaml:"labelSelector"`
	// Experimental.
	Namespaces *[]*string `field:"optional" json:"namespaces" yaml:"namespaces"`
}

// Experimental.
type TenantV2SpecLogAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector struct {
	// Experimental.
	MatchExpressions *[]*TenantV2SpecLogAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions `field:"optional" json:"matchExpressions" yaml:"matchExpressions"`
	// Experimental.
	MatchLabels *map[string]*string `field:"optional" json:"matchLabels" yaml:"matchLabels"`
}

// Experimental.
type TenantV2SpecLogAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions struct {
	// Experimental.
	Key *string `field:"required" json:"key" yaml:"key"`
	// Experimental.
	Operator *string `field:"required" json:"operator" yaml:"operator"`
	// Experimental.
	Values *[]*string `field:"optional" json:"values" yaml:"values"`
}

// Experimental.
type TenantV2SpecLogAffinityPodAntiAffinity struct {
	// Experimental.
	PreferredDuringSchedulingIgnoredDuringExecution *[]*TenantV2SpecLogAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution `field:"optional" json:"preferredDuringSchedulingIgnoredDuringExecution" yaml:"preferredDuringSchedulingIgnoredDuringExecution"`
	// Experimental.
	RequiredDuringSchedulingIgnoredDuringExecution *[]*TenantV2SpecLogAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution `field:"optional" json:"requiredDuringSchedulingIgnoredDuringExecution" yaml:"requiredDuringSchedulingIgnoredDuringExecution"`
}

// Experimental.
type TenantV2SpecLogAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution struct {
	// Experimental.
	PodAffinityTerm *TenantV2SpecLogAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm `field:"required" json:"podAffinityTerm" yaml:"podAffinityTerm"`
	// Experimental.
	Weight *float64 `field:"required" json:"weight" yaml:"weight"`
}

// Experimental.
type TenantV2SpecLogAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm struct {
	// Experimental.
	TopologyKey *string `field:"required" json:"topologyKey" yaml:"topologyKey"`
	// Experimental.
	LabelSelector *TenantV2SpecLogAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector `field:"optional" json:"labelSelector" yaml:"labelSelector"`
	// Experimental.
	Namespaces *[]*string `field:"optional" json:"namespaces" yaml:"namespaces"`
}

// Experimental.
type TenantV2SpecLogAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector struct {
	// Experimental.
	MatchExpressions *[]*TenantV2SpecLogAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions `field:"optional" json:"matchExpressions" yaml:"matchExpressions"`
	// Experimental.
	MatchLabels *map[string]*string `field:"optional" json:"matchLabels" yaml:"matchLabels"`
}

// Experimental.
type TenantV2SpecLogAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions struct {
	// Experimental.
	Key *string `field:"required" json:"key" yaml:"key"`
	// Experimental.
	Operator *string `field:"required" json:"operator" yaml:"operator"`
	// Experimental.
	Values *[]*string `field:"optional" json:"values" yaml:"values"`
}

// Experimental.
type TenantV2SpecLogAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution struct {
	// Experimental.
	TopologyKey *string `field:"required" json:"topologyKey" yaml:"topologyKey"`
	// Experimental.
	LabelSelector *TenantV2SpecLogAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector `field:"optional" json:"labelSelector" yaml:"labelSelector"`
	// Experimental.
	Namespaces *[]*string `field:"optional" json:"namespaces" yaml:"namespaces"`
}

// Experimental.
type TenantV2SpecLogAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector struct {
	// Experimental.
	MatchExpressions *[]*TenantV2SpecLogAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions `field:"optional" json:"matchExpressions" yaml:"matchExpressions"`
	// Experimental.
	MatchLabels *map[string]*string `field:"optional" json:"matchLabels" yaml:"matchLabels"`
}

// Experimental.
type TenantV2SpecLogAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions struct {
	// Experimental.
	Key *string `field:"required" json:"key" yaml:"key"`
	// Experimental.
	Operator *string `field:"required" json:"operator" yaml:"operator"`
	// Experimental.
	Values *[]*string `field:"optional" json:"values" yaml:"values"`
}

// Experimental.
type TenantV2SpecLogAudit struct {
	// Experimental.
	DiskCapacityGb *float64 `field:"optional" json:"diskCapacityGb" yaml:"diskCapacityGb"`
}

// Experimental.
type TenantV2SpecLogDb struct {
	// Experimental.
	VolumeClaimTemplate *TenantV2SpecLogDbVolumeClaimTemplate `field:"required" json:"volumeClaimTemplate" yaml:"volumeClaimTemplate"`
	// Experimental.
	Affinity *TenantV2SpecLogDbAffinity `field:"optional" json:"affinity" yaml:"affinity"`
	// Experimental.
	Annotations *map[string]*string `field:"optional" json:"annotations" yaml:"annotations"`
	// Experimental.
	Image *string `field:"optional" json:"image" yaml:"image"`
	// Experimental.
	Initimage *string `field:"optional" json:"initimage" yaml:"initimage"`
	// Experimental.
	Labels *map[string]*string `field:"optional" json:"labels" yaml:"labels"`
	// Experimental.
	NodeSelector *map[string]*string `field:"optional" json:"nodeSelector" yaml:"nodeSelector"`
	// Experimental.
	Resources *TenantV2SpecLogDbResources `field:"optional" json:"resources" yaml:"resources"`
	// Experimental.
	SecurityContext *TenantV2SpecLogDbSecurityContext `field:"optional" json:"securityContext" yaml:"securityContext"`
	// Experimental.
	ServiceAccountName *string `field:"optional" json:"serviceAccountName" yaml:"serviceAccountName"`
	// Experimental.
	Tolerations *[]*TenantV2SpecLogDbTolerations `field:"optional" json:"tolerations" yaml:"tolerations"`
	// Experimental.
	TopologySpreadConstraints *[]*TenantV2SpecLogDbTopologySpreadConstraints `field:"optional" json:"topologySpreadConstraints" yaml:"topologySpreadConstraints"`
}

// Experimental.
type TenantV2SpecLogDbAffinity struct {
	// Experimental.
	NodeAffinity *TenantV2SpecLogDbAffinityNodeAffinity `field:"optional" json:"nodeAffinity" yaml:"nodeAffinity"`
	// Experimental.
	PodAffinity *TenantV2SpecLogDbAffinityPodAffinity `field:"optional" json:"podAffinity" yaml:"podAffinity"`
	// Experimental.
	PodAntiAffinity *TenantV2SpecLogDbAffinityPodAntiAffinity `field:"optional" json:"podAntiAffinity" yaml:"podAntiAffinity"`
}

// Experimental.
type TenantV2SpecLogDbAffinityNodeAffinity struct {
	// Experimental.
	PreferredDuringSchedulingIgnoredDuringExecution *[]*TenantV2SpecLogDbAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution `field:"optional" json:"preferredDuringSchedulingIgnoredDuringExecution" yaml:"preferredDuringSchedulingIgnoredDuringExecution"`
	// Experimental.
	RequiredDuringSchedulingIgnoredDuringExecution *TenantV2SpecLogDbAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution `field:"optional" json:"requiredDuringSchedulingIgnoredDuringExecution" yaml:"requiredDuringSchedulingIgnoredDuringExecution"`
}

// Experimental.
type TenantV2SpecLogDbAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution struct {
	// Experimental.
	Preference *TenantV2SpecLogDbAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference `field:"required" json:"preference" yaml:"preference"`
	// Experimental.
	Weight *float64 `field:"required" json:"weight" yaml:"weight"`
}

// Experimental.
type TenantV2SpecLogDbAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference struct {
	// Experimental.
	MatchExpressions *[]*TenantV2SpecLogDbAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions `field:"optional" json:"matchExpressions" yaml:"matchExpressions"`
	// Experimental.
	MatchFields *[]*TenantV2SpecLogDbAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields `field:"optional" json:"matchFields" yaml:"matchFields"`
}

// Experimental.
type TenantV2SpecLogDbAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions struct {
	// Experimental.
	Key *string `field:"required" json:"key" yaml:"key"`
	// Experimental.
	Operator *string `field:"required" json:"operator" yaml:"operator"`
	// Experimental.
	Values *[]*string `field:"optional" json:"values" yaml:"values"`
}

// Experimental.
type TenantV2SpecLogDbAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields struct {
	// Experimental.
	Key *string `field:"required" json:"key" yaml:"key"`
	// Experimental.
	Operator *string `field:"required" json:"operator" yaml:"operator"`
	// Experimental.
	Values *[]*string `field:"optional" json:"values" yaml:"values"`
}

// Experimental.
type TenantV2SpecLogDbAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution struct {
	// Experimental.
	NodeSelectorTerms *[]*TenantV2SpecLogDbAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms `field:"required" json:"nodeSelectorTerms" yaml:"nodeSelectorTerms"`
}

// Experimental.
type TenantV2SpecLogDbAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms struct {
	// Experimental.
	MatchExpressions *[]*TenantV2SpecLogDbAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions `field:"optional" json:"matchExpressions" yaml:"matchExpressions"`
	// Experimental.
	MatchFields *[]*TenantV2SpecLogDbAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields `field:"optional" json:"matchFields" yaml:"matchFields"`
}

// Experimental.
type TenantV2SpecLogDbAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions struct {
	// Experimental.
	Key *string `field:"required" json:"key" yaml:"key"`
	// Experimental.
	Operator *string `field:"required" json:"operator" yaml:"operator"`
	// Experimental.
	Values *[]*string `field:"optional" json:"values" yaml:"values"`
}

// Experimental.
type TenantV2SpecLogDbAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields struct {
	// Experimental.
	Key *string `field:"required" json:"key" yaml:"key"`
	// Experimental.
	Operator *string `field:"required" json:"operator" yaml:"operator"`
	// Experimental.
	Values *[]*string `field:"optional" json:"values" yaml:"values"`
}

// Experimental.
type TenantV2SpecLogDbAffinityPodAffinity struct {
	// Experimental.
	PreferredDuringSchedulingIgnoredDuringExecution *[]*TenantV2SpecLogDbAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution `field:"optional" json:"preferredDuringSchedulingIgnoredDuringExecution" yaml:"preferredDuringSchedulingIgnoredDuringExecution"`
	// Experimental.
	RequiredDuringSchedulingIgnoredDuringExecution *[]*TenantV2SpecLogDbAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution `field:"optional" json:"requiredDuringSchedulingIgnoredDuringExecution" yaml:"requiredDuringSchedulingIgnoredDuringExecution"`
}

// Experimental.
type TenantV2SpecLogDbAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution struct {
	// Experimental.
	PodAffinityTerm *TenantV2SpecLogDbAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm `field:"required" json:"podAffinityTerm" yaml:"podAffinityTerm"`
	// Experimental.
	Weight *float64 `field:"required" json:"weight" yaml:"weight"`
}

// Experimental.
type TenantV2SpecLogDbAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm struct {
	// Experimental.
	TopologyKey *string `field:"required" json:"topologyKey" yaml:"topologyKey"`
	// Experimental.
	LabelSelector *TenantV2SpecLogDbAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector `field:"optional" json:"labelSelector" yaml:"labelSelector"`
	// Experimental.
	Namespaces *[]*string `field:"optional" json:"namespaces" yaml:"namespaces"`
}

// Experimental.
type TenantV2SpecLogDbAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector struct {
	// Experimental.
	MatchExpressions *[]*TenantV2SpecLogDbAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions `field:"optional" json:"matchExpressions" yaml:"matchExpressions"`
	// Experimental.
	MatchLabels *map[string]*string `field:"optional" json:"matchLabels" yaml:"matchLabels"`
}

// Experimental.
type TenantV2SpecLogDbAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions struct {
	// Experimental.
	Key *string `field:"required" json:"key" yaml:"key"`
	// Experimental.
	Operator *string `field:"required" json:"operator" yaml:"operator"`
	// Experimental.
	Values *[]*string `field:"optional" json:"values" yaml:"values"`
}

// Experimental.
type TenantV2SpecLogDbAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution struct {
	// Experimental.
	TopologyKey *string `field:"required" json:"topologyKey" yaml:"topologyKey"`
	// Experimental.
	LabelSelector *TenantV2SpecLogDbAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector `field:"optional" json:"labelSelector" yaml:"labelSelector"`
	// Experimental.
	Namespaces *[]*string `field:"optional" json:"namespaces" yaml:"namespaces"`
}

// Experimental.
type TenantV2SpecLogDbAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector struct {
	// Experimental.
	MatchExpressions *[]*TenantV2SpecLogDbAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions `field:"optional" json:"matchExpressions" yaml:"matchExpressions"`
	// Experimental.
	MatchLabels *map[string]*string `field:"optional" json:"matchLabels" yaml:"matchLabels"`
}

// Experimental.
type TenantV2SpecLogDbAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions struct {
	// Experimental.
	Key *string `field:"required" json:"key" yaml:"key"`
	// Experimental.
	Operator *string `field:"required" json:"operator" yaml:"operator"`
	// Experimental.
	Values *[]*string `field:"optional" json:"values" yaml:"values"`
}

// Experimental.
type TenantV2SpecLogDbAffinityPodAntiAffinity struct {
	// Experimental.
	PreferredDuringSchedulingIgnoredDuringExecution *[]*TenantV2SpecLogDbAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution `field:"optional" json:"preferredDuringSchedulingIgnoredDuringExecution" yaml:"preferredDuringSchedulingIgnoredDuringExecution"`
	// Experimental.
	RequiredDuringSchedulingIgnoredDuringExecution *[]*TenantV2SpecLogDbAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution `field:"optional" json:"requiredDuringSchedulingIgnoredDuringExecution" yaml:"requiredDuringSchedulingIgnoredDuringExecution"`
}

// Experimental.
type TenantV2SpecLogDbAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution struct {
	// Experimental.
	PodAffinityTerm *TenantV2SpecLogDbAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm `field:"required" json:"podAffinityTerm" yaml:"podAffinityTerm"`
	// Experimental.
	Weight *float64 `field:"required" json:"weight" yaml:"weight"`
}

// Experimental.
type TenantV2SpecLogDbAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm struct {
	// Experimental.
	TopologyKey *string `field:"required" json:"topologyKey" yaml:"topologyKey"`
	// Experimental.
	LabelSelector *TenantV2SpecLogDbAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector `field:"optional" json:"labelSelector" yaml:"labelSelector"`
	// Experimental.
	Namespaces *[]*string `field:"optional" json:"namespaces" yaml:"namespaces"`
}

// Experimental.
type TenantV2SpecLogDbAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector struct {
	// Experimental.
	MatchExpressions *[]*TenantV2SpecLogDbAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions `field:"optional" json:"matchExpressions" yaml:"matchExpressions"`
	// Experimental.
	MatchLabels *map[string]*string `field:"optional" json:"matchLabels" yaml:"matchLabels"`
}

// Experimental.
type TenantV2SpecLogDbAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions struct {
	// Experimental.
	Key *string `field:"required" json:"key" yaml:"key"`
	// Experimental.
	Operator *string `field:"required" json:"operator" yaml:"operator"`
	// Experimental.
	Values *[]*string `field:"optional" json:"values" yaml:"values"`
}

// Experimental.
type TenantV2SpecLogDbAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution struct {
	// Experimental.
	TopologyKey *string `field:"required" json:"topologyKey" yaml:"topologyKey"`
	// Experimental.
	LabelSelector *TenantV2SpecLogDbAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector `field:"optional" json:"labelSelector" yaml:"labelSelector"`
	// Experimental.
	Namespaces *[]*string `field:"optional" json:"namespaces" yaml:"namespaces"`
}

// Experimental.
type TenantV2SpecLogDbAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector struct {
	// Experimental.
	MatchExpressions *[]*TenantV2SpecLogDbAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions `field:"optional" json:"matchExpressions" yaml:"matchExpressions"`
	// Experimental.
	MatchLabels *map[string]*string `field:"optional" json:"matchLabels" yaml:"matchLabels"`
}

// Experimental.
type TenantV2SpecLogDbAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions struct {
	// Experimental.
	Key *string `field:"required" json:"key" yaml:"key"`
	// Experimental.
	Operator *string `field:"required" json:"operator" yaml:"operator"`
	// Experimental.
	Values *[]*string `field:"optional" json:"values" yaml:"values"`
}

// Experimental.
type TenantV2SpecLogDbResources struct {
	// Experimental.
	Limits *map[string]TenantV2SpecLogDbResourcesLimits `field:"optional" json:"limits" yaml:"limits"`
	// Experimental.
	Requests *map[string]TenantV2SpecLogDbResourcesRequests `field:"optional" json:"requests" yaml:"requests"`
}

// Experimental.
type TenantV2SpecLogDbResourcesLimits interface {
	// Experimental.
	Value() interface{}
}

// The jsii proxy struct for TenantV2SpecLogDbResourcesLimits
type jsiiProxy_TenantV2SpecLogDbResourcesLimits struct {
	_ byte // padding
}

func (j *jsiiProxy_TenantV2SpecLogDbResourcesLimits) Value() interface{} {
	var returns interface{}
	_jsii_.Get(
		j,
		"value",
		&returns,
	)
	return returns
}


// Experimental.
func TenantV2SpecLogDbResourcesLimits_FromNumber(value *float64) TenantV2SpecLogDbResourcesLimits {
	_init_.Initialize()

	var returns TenantV2SpecLogDbResourcesLimits

	_jsii_.StaticInvoke(
		"cdk8s-metaflow.minio.TenantV2SpecLogDbResourcesLimits",
		"fromNumber",
		[]interface{}{value},
		&returns,
	)

	return returns
}

// Experimental.
func TenantV2SpecLogDbResourcesLimits_FromString(value *string) TenantV2SpecLogDbResourcesLimits {
	_init_.Initialize()

	var returns TenantV2SpecLogDbResourcesLimits

	_jsii_.StaticInvoke(
		"cdk8s-metaflow.minio.TenantV2SpecLogDbResourcesLimits",
		"fromString",
		[]interface{}{value},
		&returns,
	)

	return returns
}

// Experimental.
type TenantV2SpecLogDbResourcesRequests interface {
	// Experimental.
	Value() interface{}
}

// The jsii proxy struct for TenantV2SpecLogDbResourcesRequests
type jsiiProxy_TenantV2SpecLogDbResourcesRequests struct {
	_ byte // padding
}

func (j *jsiiProxy_TenantV2SpecLogDbResourcesRequests) Value() interface{} {
	var returns interface{}
	_jsii_.Get(
		j,
		"value",
		&returns,
	)
	return returns
}


// Experimental.
func TenantV2SpecLogDbResourcesRequests_FromNumber(value *float64) TenantV2SpecLogDbResourcesRequests {
	_init_.Initialize()

	var returns TenantV2SpecLogDbResourcesRequests

	_jsii_.StaticInvoke(
		"cdk8s-metaflow.minio.TenantV2SpecLogDbResourcesRequests",
		"fromNumber",
		[]interface{}{value},
		&returns,
	)

	return returns
}

// Experimental.
func TenantV2SpecLogDbResourcesRequests_FromString(value *string) TenantV2SpecLogDbResourcesRequests {
	_init_.Initialize()

	var returns TenantV2SpecLogDbResourcesRequests

	_jsii_.StaticInvoke(
		"cdk8s-metaflow.minio.TenantV2SpecLogDbResourcesRequests",
		"fromString",
		[]interface{}{value},
		&returns,
	)

	return returns
}

// Experimental.
type TenantV2SpecLogDbSecurityContext struct {
	// Experimental.
	FsGroup *float64 `field:"optional" json:"fsGroup" yaml:"fsGroup"`
	// Experimental.
	FsGroupChangePolicy *string `field:"optional" json:"fsGroupChangePolicy" yaml:"fsGroupChangePolicy"`
	// Experimental.
	RunAsGroup *float64 `field:"optional" json:"runAsGroup" yaml:"runAsGroup"`
	// Experimental.
	RunAsNonRoot *bool `field:"optional" json:"runAsNonRoot" yaml:"runAsNonRoot"`
	// Experimental.
	RunAsUser *float64 `field:"optional" json:"runAsUser" yaml:"runAsUser"`
	// Experimental.
	SeccompProfile *TenantV2SpecLogDbSecurityContextSeccompProfile `field:"optional" json:"seccompProfile" yaml:"seccompProfile"`
	// Experimental.
	SeLinuxOptions *TenantV2SpecLogDbSecurityContextSeLinuxOptions `field:"optional" json:"seLinuxOptions" yaml:"seLinuxOptions"`
	// Experimental.
	SupplementalGroups *[]*float64 `field:"optional" json:"supplementalGroups" yaml:"supplementalGroups"`
	// Experimental.
	Sysctls *[]*TenantV2SpecLogDbSecurityContextSysctls `field:"optional" json:"sysctls" yaml:"sysctls"`
	// Experimental.
	WindowsOptions *TenantV2SpecLogDbSecurityContextWindowsOptions `field:"optional" json:"windowsOptions" yaml:"windowsOptions"`
}

// Experimental.
type TenantV2SpecLogDbSecurityContextSeLinuxOptions struct {
	// Experimental.
	Level *string `field:"optional" json:"level" yaml:"level"`
	// Experimental.
	Role *string `field:"optional" json:"role" yaml:"role"`
	// Experimental.
	Type *string `field:"optional" json:"type" yaml:"type"`
	// Experimental.
	User *string `field:"optional" json:"user" yaml:"user"`
}

// Experimental.
type TenantV2SpecLogDbSecurityContextSeccompProfile struct {
	// Experimental.
	Type *string `field:"required" json:"type" yaml:"type"`
	// Experimental.
	LocalhostProfile *string `field:"optional" json:"localhostProfile" yaml:"localhostProfile"`
}

// Experimental.
type TenantV2SpecLogDbSecurityContextSysctls struct {
	// Experimental.
	Name *string `field:"required" json:"name" yaml:"name"`
	// Experimental.
	Value *string `field:"required" json:"value" yaml:"value"`
}

// Experimental.
type TenantV2SpecLogDbSecurityContextWindowsOptions struct {
	// Experimental.
	GmsaCredentialSpec *string `field:"optional" json:"gmsaCredentialSpec" yaml:"gmsaCredentialSpec"`
	// Experimental.
	GmsaCredentialSpecName *string `field:"optional" json:"gmsaCredentialSpecName" yaml:"gmsaCredentialSpecName"`
	// Experimental.
	RunAsUserName *string `field:"optional" json:"runAsUserName" yaml:"runAsUserName"`
}

// Experimental.
type TenantV2SpecLogDbTolerations struct {
	// Experimental.
	Effect *string `field:"optional" json:"effect" yaml:"effect"`
	// Experimental.
	Key *string `field:"optional" json:"key" yaml:"key"`
	// Experimental.
	Operator *string `field:"optional" json:"operator" yaml:"operator"`
	// Experimental.
	TolerationSeconds *float64 `field:"optional" json:"tolerationSeconds" yaml:"tolerationSeconds"`
	// Experimental.
	Value *string `field:"optional" json:"value" yaml:"value"`
}

// Experimental.
type TenantV2SpecLogDbTopologySpreadConstraints struct {
	// Experimental.
	MaxSkew *float64 `field:"required" json:"maxSkew" yaml:"maxSkew"`
	// Experimental.
	TopologyKey *string `field:"required" json:"topologyKey" yaml:"topologyKey"`
	// Experimental.
	WhenUnsatisfiable *string `field:"required" json:"whenUnsatisfiable" yaml:"whenUnsatisfiable"`
	// Experimental.
	LabelSelector *TenantV2SpecLogDbTopologySpreadConstraintsLabelSelector `field:"optional" json:"labelSelector" yaml:"labelSelector"`
}

// Experimental.
type TenantV2SpecLogDbTopologySpreadConstraintsLabelSelector struct {
	// Experimental.
	MatchExpressions *[]*TenantV2SpecLogDbTopologySpreadConstraintsLabelSelectorMatchExpressions `field:"optional" json:"matchExpressions" yaml:"matchExpressions"`
	// Experimental.
	MatchLabels *map[string]*string `field:"optional" json:"matchLabels" yaml:"matchLabels"`
}

// Experimental.
type TenantV2SpecLogDbTopologySpreadConstraintsLabelSelectorMatchExpressions struct {
	// Experimental.
	Key *string `field:"required" json:"key" yaml:"key"`
	// Experimental.
	Operator *string `field:"required" json:"operator" yaml:"operator"`
	// Experimental.
	Values *[]*string `field:"optional" json:"values" yaml:"values"`
}

// Experimental.
type TenantV2SpecLogDbVolumeClaimTemplate struct {
	// Experimental.
	ApiVersion *string `field:"optional" json:"apiVersion" yaml:"apiVersion"`
	// Experimental.
	Kind *string `field:"optional" json:"kind" yaml:"kind"`
	// Experimental.
	Metadata *TenantV2SpecLogDbVolumeClaimTemplateMetadata `field:"optional" json:"metadata" yaml:"metadata"`
	// Experimental.
	Spec *TenantV2SpecLogDbVolumeClaimTemplateSpec `field:"optional" json:"spec" yaml:"spec"`
	// Experimental.
	Status *TenantV2SpecLogDbVolumeClaimTemplateStatus `field:"optional" json:"status" yaml:"status"`
}

// Experimental.
type TenantV2SpecLogDbVolumeClaimTemplateMetadata struct {
	// Experimental.
	Annotations *map[string]*string `field:"optional" json:"annotations" yaml:"annotations"`
	// Experimental.
	Finalizers *[]*string `field:"optional" json:"finalizers" yaml:"finalizers"`
	// Experimental.
	Labels *map[string]*string `field:"optional" json:"labels" yaml:"labels"`
	// Experimental.
	Name *string `field:"optional" json:"name" yaml:"name"`
	// Experimental.
	Namespace *string `field:"optional" json:"namespace" yaml:"namespace"`
}

// Experimental.
type TenantV2SpecLogDbVolumeClaimTemplateSpec struct {
	// Experimental.
	AccessModes *[]*string `field:"optional" json:"accessModes" yaml:"accessModes"`
	// Experimental.
	DataSource *TenantV2SpecLogDbVolumeClaimTemplateSpecDataSource `field:"optional" json:"dataSource" yaml:"dataSource"`
	// Experimental.
	Resources *TenantV2SpecLogDbVolumeClaimTemplateSpecResources `field:"optional" json:"resources" yaml:"resources"`
	// Experimental.
	Selector *TenantV2SpecLogDbVolumeClaimTemplateSpecSelector `field:"optional" json:"selector" yaml:"selector"`
	// Experimental.
	StorageClassName *string `field:"optional" json:"storageClassName" yaml:"storageClassName"`
	// Experimental.
	VolumeMode *string `field:"optional" json:"volumeMode" yaml:"volumeMode"`
	// Experimental.
	VolumeName *string `field:"optional" json:"volumeName" yaml:"volumeName"`
}

// Experimental.
type TenantV2SpecLogDbVolumeClaimTemplateSpecDataSource struct {
	// Experimental.
	Kind *string `field:"required" json:"kind" yaml:"kind"`
	// Experimental.
	Name *string `field:"required" json:"name" yaml:"name"`
	// Experimental.
	ApiGroup *string `field:"optional" json:"apiGroup" yaml:"apiGroup"`
}

// Experimental.
type TenantV2SpecLogDbVolumeClaimTemplateSpecResources struct {
	// Experimental.
	Limits *map[string]TenantV2SpecLogDbVolumeClaimTemplateSpecResourcesLimits `field:"optional" json:"limits" yaml:"limits"`
	// Experimental.
	Requests *map[string]TenantV2SpecLogDbVolumeClaimTemplateSpecResourcesRequests `field:"optional" json:"requests" yaml:"requests"`
}

// Experimental.
type TenantV2SpecLogDbVolumeClaimTemplateSpecResourcesLimits interface {
	// Experimental.
	Value() interface{}
}

// The jsii proxy struct for TenantV2SpecLogDbVolumeClaimTemplateSpecResourcesLimits
type jsiiProxy_TenantV2SpecLogDbVolumeClaimTemplateSpecResourcesLimits struct {
	_ byte // padding
}

func (j *jsiiProxy_TenantV2SpecLogDbVolumeClaimTemplateSpecResourcesLimits) Value() interface{} {
	var returns interface{}
	_jsii_.Get(
		j,
		"value",
		&returns,
	)
	return returns
}


// Experimental.
func TenantV2SpecLogDbVolumeClaimTemplateSpecResourcesLimits_FromNumber(value *float64) TenantV2SpecLogDbVolumeClaimTemplateSpecResourcesLimits {
	_init_.Initialize()

	var returns TenantV2SpecLogDbVolumeClaimTemplateSpecResourcesLimits

	_jsii_.StaticInvoke(
		"cdk8s-metaflow.minio.TenantV2SpecLogDbVolumeClaimTemplateSpecResourcesLimits",
		"fromNumber",
		[]interface{}{value},
		&returns,
	)

	return returns
}

// Experimental.
func TenantV2SpecLogDbVolumeClaimTemplateSpecResourcesLimits_FromString(value *string) TenantV2SpecLogDbVolumeClaimTemplateSpecResourcesLimits {
	_init_.Initialize()

	var returns TenantV2SpecLogDbVolumeClaimTemplateSpecResourcesLimits

	_jsii_.StaticInvoke(
		"cdk8s-metaflow.minio.TenantV2SpecLogDbVolumeClaimTemplateSpecResourcesLimits",
		"fromString",
		[]interface{}{value},
		&returns,
	)

	return returns
}

// Experimental.
type TenantV2SpecLogDbVolumeClaimTemplateSpecResourcesRequests interface {
	// Experimental.
	Value() interface{}
}

// The jsii proxy struct for TenantV2SpecLogDbVolumeClaimTemplateSpecResourcesRequests
type jsiiProxy_TenantV2SpecLogDbVolumeClaimTemplateSpecResourcesRequests struct {
	_ byte // padding
}

func (j *jsiiProxy_TenantV2SpecLogDbVolumeClaimTemplateSpecResourcesRequests) Value() interface{} {
	var returns interface{}
	_jsii_.Get(
		j,
		"value",
		&returns,
	)
	return returns
}


// Experimental.
func TenantV2SpecLogDbVolumeClaimTemplateSpecResourcesRequests_FromNumber(value *float64) TenantV2SpecLogDbVolumeClaimTemplateSpecResourcesRequests {
	_init_.Initialize()

	var returns TenantV2SpecLogDbVolumeClaimTemplateSpecResourcesRequests

	_jsii_.StaticInvoke(
		"cdk8s-metaflow.minio.TenantV2SpecLogDbVolumeClaimTemplateSpecResourcesRequests",
		"fromNumber",
		[]interface{}{value},
		&returns,
	)

	return returns
}

// Experimental.
func TenantV2SpecLogDbVolumeClaimTemplateSpecResourcesRequests_FromString(value *string) TenantV2SpecLogDbVolumeClaimTemplateSpecResourcesRequests {
	_init_.Initialize()

	var returns TenantV2SpecLogDbVolumeClaimTemplateSpecResourcesRequests

	_jsii_.StaticInvoke(
		"cdk8s-metaflow.minio.TenantV2SpecLogDbVolumeClaimTemplateSpecResourcesRequests",
		"fromString",
		[]interface{}{value},
		&returns,
	)

	return returns
}

// Experimental.
type TenantV2SpecLogDbVolumeClaimTemplateSpecSelector struct {
	// Experimental.
	MatchExpressions *[]*TenantV2SpecLogDbVolumeClaimTemplateSpecSelectorMatchExpressions `field:"optional" json:"matchExpressions" yaml:"matchExpressions"`
	// Experimental.
	MatchLabels *map[string]*string `field:"optional" json:"matchLabels" yaml:"matchLabels"`
}

// Experimental.
type TenantV2SpecLogDbVolumeClaimTemplateSpecSelectorMatchExpressions struct {
	// Experimental.
	Key *string `field:"required" json:"key" yaml:"key"`
	// Experimental.
	Operator *string `field:"required" json:"operator" yaml:"operator"`
	// Experimental.
	Values *[]*string `field:"optional" json:"values" yaml:"values"`
}

// Experimental.
type TenantV2SpecLogDbVolumeClaimTemplateStatus struct {
	// Experimental.
	AccessModes *[]*string `field:"optional" json:"accessModes" yaml:"accessModes"`
	// Experimental.
	Capacity *map[string]TenantV2SpecLogDbVolumeClaimTemplateStatusCapacity `field:"optional" json:"capacity" yaml:"capacity"`
	// Experimental.
	Conditions *[]*TenantV2SpecLogDbVolumeClaimTemplateStatusConditions `field:"optional" json:"conditions" yaml:"conditions"`
	// Experimental.
	Phase *string `field:"optional" json:"phase" yaml:"phase"`
}

// Experimental.
type TenantV2SpecLogDbVolumeClaimTemplateStatusCapacity interface {
	// Experimental.
	Value() interface{}
}

// The jsii proxy struct for TenantV2SpecLogDbVolumeClaimTemplateStatusCapacity
type jsiiProxy_TenantV2SpecLogDbVolumeClaimTemplateStatusCapacity struct {
	_ byte // padding
}

func (j *jsiiProxy_TenantV2SpecLogDbVolumeClaimTemplateStatusCapacity) Value() interface{} {
	var returns interface{}
	_jsii_.Get(
		j,
		"value",
		&returns,
	)
	return returns
}


// Experimental.
func TenantV2SpecLogDbVolumeClaimTemplateStatusCapacity_FromNumber(value *float64) TenantV2SpecLogDbVolumeClaimTemplateStatusCapacity {
	_init_.Initialize()

	var returns TenantV2SpecLogDbVolumeClaimTemplateStatusCapacity

	_jsii_.StaticInvoke(
		"cdk8s-metaflow.minio.TenantV2SpecLogDbVolumeClaimTemplateStatusCapacity",
		"fromNumber",
		[]interface{}{value},
		&returns,
	)

	return returns
}

// Experimental.
func TenantV2SpecLogDbVolumeClaimTemplateStatusCapacity_FromString(value *string) TenantV2SpecLogDbVolumeClaimTemplateStatusCapacity {
	_init_.Initialize()

	var returns TenantV2SpecLogDbVolumeClaimTemplateStatusCapacity

	_jsii_.StaticInvoke(
		"cdk8s-metaflow.minio.TenantV2SpecLogDbVolumeClaimTemplateStatusCapacity",
		"fromString",
		[]interface{}{value},
		&returns,
	)

	return returns
}

// Experimental.
type TenantV2SpecLogDbVolumeClaimTemplateStatusConditions struct {
	// Experimental.
	Status *string `field:"required" json:"status" yaml:"status"`
	// Experimental.
	Type *string `field:"required" json:"type" yaml:"type"`
	// Experimental.
	LastProbeTime *time.Time `field:"optional" json:"lastProbeTime" yaml:"lastProbeTime"`
	// Experimental.
	LastTransitionTime *time.Time `field:"optional" json:"lastTransitionTime" yaml:"lastTransitionTime"`
	// Experimental.
	Message *string `field:"optional" json:"message" yaml:"message"`
	// Experimental.
	Reason *string `field:"optional" json:"reason" yaml:"reason"`
}

// Experimental.
type TenantV2SpecLogResources struct {
	// Experimental.
	Limits *map[string]TenantV2SpecLogResourcesLimits `field:"optional" json:"limits" yaml:"limits"`
	// Experimental.
	Requests *map[string]TenantV2SpecLogResourcesRequests `field:"optional" json:"requests" yaml:"requests"`
}

// Experimental.
type TenantV2SpecLogResourcesLimits interface {
	// Experimental.
	Value() interface{}
}

// The jsii proxy struct for TenantV2SpecLogResourcesLimits
type jsiiProxy_TenantV2SpecLogResourcesLimits struct {
	_ byte // padding
}

func (j *jsiiProxy_TenantV2SpecLogResourcesLimits) Value() interface{} {
	var returns interface{}
	_jsii_.Get(
		j,
		"value",
		&returns,
	)
	return returns
}


// Experimental.
func TenantV2SpecLogResourcesLimits_FromNumber(value *float64) TenantV2SpecLogResourcesLimits {
	_init_.Initialize()

	var returns TenantV2SpecLogResourcesLimits

	_jsii_.StaticInvoke(
		"cdk8s-metaflow.minio.TenantV2SpecLogResourcesLimits",
		"fromNumber",
		[]interface{}{value},
		&returns,
	)

	return returns
}

// Experimental.
func TenantV2SpecLogResourcesLimits_FromString(value *string) TenantV2SpecLogResourcesLimits {
	_init_.Initialize()

	var returns TenantV2SpecLogResourcesLimits

	_jsii_.StaticInvoke(
		"cdk8s-metaflow.minio.TenantV2SpecLogResourcesLimits",
		"fromString",
		[]interface{}{value},
		&returns,
	)

	return returns
}

// Experimental.
type TenantV2SpecLogResourcesRequests interface {
	// Experimental.
	Value() interface{}
}

// The jsii proxy struct for TenantV2SpecLogResourcesRequests
type jsiiProxy_TenantV2SpecLogResourcesRequests struct {
	_ byte // padding
}

func (j *jsiiProxy_TenantV2SpecLogResourcesRequests) Value() interface{} {
	var returns interface{}
	_jsii_.Get(
		j,
		"value",
		&returns,
	)
	return returns
}


// Experimental.
func TenantV2SpecLogResourcesRequests_FromNumber(value *float64) TenantV2SpecLogResourcesRequests {
	_init_.Initialize()

	var returns TenantV2SpecLogResourcesRequests

	_jsii_.StaticInvoke(
		"cdk8s-metaflow.minio.TenantV2SpecLogResourcesRequests",
		"fromNumber",
		[]interface{}{value},
		&returns,
	)

	return returns
}

// Experimental.
func TenantV2SpecLogResourcesRequests_FromString(value *string) TenantV2SpecLogResourcesRequests {
	_init_.Initialize()

	var returns TenantV2SpecLogResourcesRequests

	_jsii_.StaticInvoke(
		"cdk8s-metaflow.minio.TenantV2SpecLogResourcesRequests",
		"fromString",
		[]interface{}{value},
		&returns,
	)

	return returns
}

// Experimental.
type TenantV2SpecLogSecurityContext struct {
	// Experimental.
	FsGroup *float64 `field:"optional" json:"fsGroup" yaml:"fsGroup"`
	// Experimental.
	FsGroupChangePolicy *string `field:"optional" json:"fsGroupChangePolicy" yaml:"fsGroupChangePolicy"`
	// Experimental.
	RunAsGroup *float64 `field:"optional" json:"runAsGroup" yaml:"runAsGroup"`
	// Experimental.
	RunAsNonRoot *bool `field:"optional" json:"runAsNonRoot" yaml:"runAsNonRoot"`
	// Experimental.
	RunAsUser *float64 `field:"optional" json:"runAsUser" yaml:"runAsUser"`
	// Experimental.
	SeccompProfile *TenantV2SpecLogSecurityContextSeccompProfile `field:"optional" json:"seccompProfile" yaml:"seccompProfile"`
	// Experimental.
	SeLinuxOptions *TenantV2SpecLogSecurityContextSeLinuxOptions `field:"optional" json:"seLinuxOptions" yaml:"seLinuxOptions"`
	// Experimental.
	SupplementalGroups *[]*float64 `field:"optional" json:"supplementalGroups" yaml:"supplementalGroups"`
	// Experimental.
	Sysctls *[]*TenantV2SpecLogSecurityContextSysctls `field:"optional" json:"sysctls" yaml:"sysctls"`
	// Experimental.
	WindowsOptions *TenantV2SpecLogSecurityContextWindowsOptions `field:"optional" json:"windowsOptions" yaml:"windowsOptions"`
}

// Experimental.
type TenantV2SpecLogSecurityContextSeLinuxOptions struct {
	// Experimental.
	Level *string `field:"optional" json:"level" yaml:"level"`
	// Experimental.
	Role *string `field:"optional" json:"role" yaml:"role"`
	// Experimental.
	Type *string `field:"optional" json:"type" yaml:"type"`
	// Experimental.
	User *string `field:"optional" json:"user" yaml:"user"`
}

// Experimental.
type TenantV2SpecLogSecurityContextSeccompProfile struct {
	// Experimental.
	Type *string `field:"required" json:"type" yaml:"type"`
	// Experimental.
	LocalhostProfile *string `field:"optional" json:"localhostProfile" yaml:"localhostProfile"`
}

// Experimental.
type TenantV2SpecLogSecurityContextSysctls struct {
	// Experimental.
	Name *string `field:"required" json:"name" yaml:"name"`
	// Experimental.
	Value *string `field:"required" json:"value" yaml:"value"`
}

// Experimental.
type TenantV2SpecLogSecurityContextWindowsOptions struct {
	// Experimental.
	GmsaCredentialSpec *string `field:"optional" json:"gmsaCredentialSpec" yaml:"gmsaCredentialSpec"`
	// Experimental.
	GmsaCredentialSpecName *string `field:"optional" json:"gmsaCredentialSpecName" yaml:"gmsaCredentialSpecName"`
	// Experimental.
	RunAsUserName *string `field:"optional" json:"runAsUserName" yaml:"runAsUserName"`
}

// Experimental.
type TenantV2SpecLogTolerations struct {
	// Experimental.
	Effect *string `field:"optional" json:"effect" yaml:"effect"`
	// Experimental.
	Key *string `field:"optional" json:"key" yaml:"key"`
	// Experimental.
	Operator *string `field:"optional" json:"operator" yaml:"operator"`
	// Experimental.
	TolerationSeconds *float64 `field:"optional" json:"tolerationSeconds" yaml:"tolerationSeconds"`
	// Experimental.
	Value *string `field:"optional" json:"value" yaml:"value"`
}

// Experimental.
type TenantV2SpecLogTopologySpreadConstraints struct {
	// Experimental.
	MaxSkew *float64 `field:"required" json:"maxSkew" yaml:"maxSkew"`
	// Experimental.
	TopologyKey *string `field:"required" json:"topologyKey" yaml:"topologyKey"`
	// Experimental.
	WhenUnsatisfiable *string `field:"required" json:"whenUnsatisfiable" yaml:"whenUnsatisfiable"`
	// Experimental.
	LabelSelector *TenantV2SpecLogTopologySpreadConstraintsLabelSelector `field:"optional" json:"labelSelector" yaml:"labelSelector"`
}

// Experimental.
type TenantV2SpecLogTopologySpreadConstraintsLabelSelector struct {
	// Experimental.
	MatchExpressions *[]*TenantV2SpecLogTopologySpreadConstraintsLabelSelectorMatchExpressions `field:"optional" json:"matchExpressions" yaml:"matchExpressions"`
	// Experimental.
	MatchLabels *map[string]*string `field:"optional" json:"matchLabels" yaml:"matchLabels"`
}

// Experimental.
type TenantV2SpecLogTopologySpreadConstraintsLabelSelectorMatchExpressions struct {
	// Experimental.
	Key *string `field:"required" json:"key" yaml:"key"`
	// Experimental.
	Operator *string `field:"required" json:"operator" yaml:"operator"`
	// Experimental.
	Values *[]*string `field:"optional" json:"values" yaml:"values"`
}

// Experimental.
type TenantV2SpecLogging struct {
	// Experimental.
	Anonymous *bool `field:"optional" json:"anonymous" yaml:"anonymous"`
	// Experimental.
	Json *bool `field:"optional" json:"json" yaml:"json"`
	// Experimental.
	Quiet *bool `field:"optional" json:"quiet" yaml:"quiet"`
}

// Experimental.
type TenantV2SpecPools struct {
	// Experimental.
	Servers *float64 `field:"required" json:"servers" yaml:"servers"`
	// Experimental.
	VolumeClaimTemplate *TenantV2SpecPoolsVolumeClaimTemplate `field:"required" json:"volumeClaimTemplate" yaml:"volumeClaimTemplate"`
	// Experimental.
	VolumesPerServer *float64 `field:"required" json:"volumesPerServer" yaml:"volumesPerServer"`
	// Experimental.
	Affinity *TenantV2SpecPoolsAffinity `field:"optional" json:"affinity" yaml:"affinity"`
	// Experimental.
	Annotations *map[string]*string `field:"optional" json:"annotations" yaml:"annotations"`
	// Experimental.
	Labels *map[string]*string `field:"optional" json:"labels" yaml:"labels"`
	// Experimental.
	Name *string `field:"optional" json:"name" yaml:"name"`
	// Experimental.
	NodeSelector *map[string]*string `field:"optional" json:"nodeSelector" yaml:"nodeSelector"`
	// Experimental.
	Resources *TenantV2SpecPoolsResources `field:"optional" json:"resources" yaml:"resources"`
	// Experimental.
	SecurityContext *TenantV2SpecPoolsSecurityContext `field:"optional" json:"securityContext" yaml:"securityContext"`
	// Experimental.
	Tolerations *[]*TenantV2SpecPoolsTolerations `field:"optional" json:"tolerations" yaml:"tolerations"`
	// Experimental.
	TopologySpreadConstraints *[]*TenantV2SpecPoolsTopologySpreadConstraints `field:"optional" json:"topologySpreadConstraints" yaml:"topologySpreadConstraints"`
}

// Experimental.
type TenantV2SpecPoolsAffinity struct {
	// Experimental.
	NodeAffinity *TenantV2SpecPoolsAffinityNodeAffinity `field:"optional" json:"nodeAffinity" yaml:"nodeAffinity"`
	// Experimental.
	PodAffinity *TenantV2SpecPoolsAffinityPodAffinity `field:"optional" json:"podAffinity" yaml:"podAffinity"`
	// Experimental.
	PodAntiAffinity *TenantV2SpecPoolsAffinityPodAntiAffinity `field:"optional" json:"podAntiAffinity" yaml:"podAntiAffinity"`
}

// Experimental.
type TenantV2SpecPoolsAffinityNodeAffinity struct {
	// Experimental.
	PreferredDuringSchedulingIgnoredDuringExecution *[]*TenantV2SpecPoolsAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution `field:"optional" json:"preferredDuringSchedulingIgnoredDuringExecution" yaml:"preferredDuringSchedulingIgnoredDuringExecution"`
	// Experimental.
	RequiredDuringSchedulingIgnoredDuringExecution *TenantV2SpecPoolsAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution `field:"optional" json:"requiredDuringSchedulingIgnoredDuringExecution" yaml:"requiredDuringSchedulingIgnoredDuringExecution"`
}

// Experimental.
type TenantV2SpecPoolsAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution struct {
	// Experimental.
	Preference *TenantV2SpecPoolsAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference `field:"required" json:"preference" yaml:"preference"`
	// Experimental.
	Weight *float64 `field:"required" json:"weight" yaml:"weight"`
}

// Experimental.
type TenantV2SpecPoolsAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference struct {
	// Experimental.
	MatchExpressions *[]*TenantV2SpecPoolsAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions `field:"optional" json:"matchExpressions" yaml:"matchExpressions"`
	// Experimental.
	MatchFields *[]*TenantV2SpecPoolsAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields `field:"optional" json:"matchFields" yaml:"matchFields"`
}

// Experimental.
type TenantV2SpecPoolsAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions struct {
	// Experimental.
	Key *string `field:"required" json:"key" yaml:"key"`
	// Experimental.
	Operator *string `field:"required" json:"operator" yaml:"operator"`
	// Experimental.
	Values *[]*string `field:"optional" json:"values" yaml:"values"`
}

// Experimental.
type TenantV2SpecPoolsAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields struct {
	// Experimental.
	Key *string `field:"required" json:"key" yaml:"key"`
	// Experimental.
	Operator *string `field:"required" json:"operator" yaml:"operator"`
	// Experimental.
	Values *[]*string `field:"optional" json:"values" yaml:"values"`
}

// Experimental.
type TenantV2SpecPoolsAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution struct {
	// Experimental.
	NodeSelectorTerms *[]*TenantV2SpecPoolsAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms `field:"required" json:"nodeSelectorTerms" yaml:"nodeSelectorTerms"`
}

// Experimental.
type TenantV2SpecPoolsAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms struct {
	// Experimental.
	MatchExpressions *[]*TenantV2SpecPoolsAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions `field:"optional" json:"matchExpressions" yaml:"matchExpressions"`
	// Experimental.
	MatchFields *[]*TenantV2SpecPoolsAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields `field:"optional" json:"matchFields" yaml:"matchFields"`
}

// Experimental.
type TenantV2SpecPoolsAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions struct {
	// Experimental.
	Key *string `field:"required" json:"key" yaml:"key"`
	// Experimental.
	Operator *string `field:"required" json:"operator" yaml:"operator"`
	// Experimental.
	Values *[]*string `field:"optional" json:"values" yaml:"values"`
}

// Experimental.
type TenantV2SpecPoolsAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields struct {
	// Experimental.
	Key *string `field:"required" json:"key" yaml:"key"`
	// Experimental.
	Operator *string `field:"required" json:"operator" yaml:"operator"`
	// Experimental.
	Values *[]*string `field:"optional" json:"values" yaml:"values"`
}

// Experimental.
type TenantV2SpecPoolsAffinityPodAffinity struct {
	// Experimental.
	PreferredDuringSchedulingIgnoredDuringExecution *[]*TenantV2SpecPoolsAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution `field:"optional" json:"preferredDuringSchedulingIgnoredDuringExecution" yaml:"preferredDuringSchedulingIgnoredDuringExecution"`
	// Experimental.
	RequiredDuringSchedulingIgnoredDuringExecution *[]*TenantV2SpecPoolsAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution `field:"optional" json:"requiredDuringSchedulingIgnoredDuringExecution" yaml:"requiredDuringSchedulingIgnoredDuringExecution"`
}

// Experimental.
type TenantV2SpecPoolsAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution struct {
	// Experimental.
	PodAffinityTerm *TenantV2SpecPoolsAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm `field:"required" json:"podAffinityTerm" yaml:"podAffinityTerm"`
	// Experimental.
	Weight *float64 `field:"required" json:"weight" yaml:"weight"`
}

// Experimental.
type TenantV2SpecPoolsAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm struct {
	// Experimental.
	TopologyKey *string `field:"required" json:"topologyKey" yaml:"topologyKey"`
	// Experimental.
	LabelSelector *TenantV2SpecPoolsAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector `field:"optional" json:"labelSelector" yaml:"labelSelector"`
	// Experimental.
	Namespaces *[]*string `field:"optional" json:"namespaces" yaml:"namespaces"`
}

// Experimental.
type TenantV2SpecPoolsAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector struct {
	// Experimental.
	MatchExpressions *[]*TenantV2SpecPoolsAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions `field:"optional" json:"matchExpressions" yaml:"matchExpressions"`
	// Experimental.
	MatchLabels *map[string]*string `field:"optional" json:"matchLabels" yaml:"matchLabels"`
}

// Experimental.
type TenantV2SpecPoolsAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions struct {
	// Experimental.
	Key *string `field:"required" json:"key" yaml:"key"`
	// Experimental.
	Operator *string `field:"required" json:"operator" yaml:"operator"`
	// Experimental.
	Values *[]*string `field:"optional" json:"values" yaml:"values"`
}

// Experimental.
type TenantV2SpecPoolsAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution struct {
	// Experimental.
	TopologyKey *string `field:"required" json:"topologyKey" yaml:"topologyKey"`
	// Experimental.
	LabelSelector *TenantV2SpecPoolsAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector `field:"optional" json:"labelSelector" yaml:"labelSelector"`
	// Experimental.
	Namespaces *[]*string `field:"optional" json:"namespaces" yaml:"namespaces"`
}

// Experimental.
type TenantV2SpecPoolsAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector struct {
	// Experimental.
	MatchExpressions *[]*TenantV2SpecPoolsAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions `field:"optional" json:"matchExpressions" yaml:"matchExpressions"`
	// Experimental.
	MatchLabels *map[string]*string `field:"optional" json:"matchLabels" yaml:"matchLabels"`
}

// Experimental.
type TenantV2SpecPoolsAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions struct {
	// Experimental.
	Key *string `field:"required" json:"key" yaml:"key"`
	// Experimental.
	Operator *string `field:"required" json:"operator" yaml:"operator"`
	// Experimental.
	Values *[]*string `field:"optional" json:"values" yaml:"values"`
}

// Experimental.
type TenantV2SpecPoolsAffinityPodAntiAffinity struct {
	// Experimental.
	PreferredDuringSchedulingIgnoredDuringExecution *[]*TenantV2SpecPoolsAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution `field:"optional" json:"preferredDuringSchedulingIgnoredDuringExecution" yaml:"preferredDuringSchedulingIgnoredDuringExecution"`
	// Experimental.
	RequiredDuringSchedulingIgnoredDuringExecution *[]*TenantV2SpecPoolsAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution `field:"optional" json:"requiredDuringSchedulingIgnoredDuringExecution" yaml:"requiredDuringSchedulingIgnoredDuringExecution"`
}

// Experimental.
type TenantV2SpecPoolsAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution struct {
	// Experimental.
	PodAffinityTerm *TenantV2SpecPoolsAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm `field:"required" json:"podAffinityTerm" yaml:"podAffinityTerm"`
	// Experimental.
	Weight *float64 `field:"required" json:"weight" yaml:"weight"`
}

// Experimental.
type TenantV2SpecPoolsAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm struct {
	// Experimental.
	TopologyKey *string `field:"required" json:"topologyKey" yaml:"topologyKey"`
	// Experimental.
	LabelSelector *TenantV2SpecPoolsAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector `field:"optional" json:"labelSelector" yaml:"labelSelector"`
	// Experimental.
	Namespaces *[]*string `field:"optional" json:"namespaces" yaml:"namespaces"`
}

// Experimental.
type TenantV2SpecPoolsAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector struct {
	// Experimental.
	MatchExpressions *[]*TenantV2SpecPoolsAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions `field:"optional" json:"matchExpressions" yaml:"matchExpressions"`
	// Experimental.
	MatchLabels *map[string]*string `field:"optional" json:"matchLabels" yaml:"matchLabels"`
}

// Experimental.
type TenantV2SpecPoolsAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions struct {
	// Experimental.
	Key *string `field:"required" json:"key" yaml:"key"`
	// Experimental.
	Operator *string `field:"required" json:"operator" yaml:"operator"`
	// Experimental.
	Values *[]*string `field:"optional" json:"values" yaml:"values"`
}

// Experimental.
type TenantV2SpecPoolsAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution struct {
	// Experimental.
	TopologyKey *string `field:"required" json:"topologyKey" yaml:"topologyKey"`
	// Experimental.
	LabelSelector *TenantV2SpecPoolsAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector `field:"optional" json:"labelSelector" yaml:"labelSelector"`
	// Experimental.
	Namespaces *[]*string `field:"optional" json:"namespaces" yaml:"namespaces"`
}

// Experimental.
type TenantV2SpecPoolsAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector struct {
	// Experimental.
	MatchExpressions *[]*TenantV2SpecPoolsAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions `field:"optional" json:"matchExpressions" yaml:"matchExpressions"`
	// Experimental.
	MatchLabels *map[string]*string `field:"optional" json:"matchLabels" yaml:"matchLabels"`
}

// Experimental.
type TenantV2SpecPoolsAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions struct {
	// Experimental.
	Key *string `field:"required" json:"key" yaml:"key"`
	// Experimental.
	Operator *string `field:"required" json:"operator" yaml:"operator"`
	// Experimental.
	Values *[]*string `field:"optional" json:"values" yaml:"values"`
}

// Experimental.
type TenantV2SpecPoolsResources struct {
	// Experimental.
	Limits *map[string]TenantV2SpecPoolsResourcesLimits `field:"optional" json:"limits" yaml:"limits"`
	// Experimental.
	Requests *map[string]TenantV2SpecPoolsResourcesRequests `field:"optional" json:"requests" yaml:"requests"`
}

// Experimental.
type TenantV2SpecPoolsResourcesLimits interface {
	// Experimental.
	Value() interface{}
}

// The jsii proxy struct for TenantV2SpecPoolsResourcesLimits
type jsiiProxy_TenantV2SpecPoolsResourcesLimits struct {
	_ byte // padding
}

func (j *jsiiProxy_TenantV2SpecPoolsResourcesLimits) Value() interface{} {
	var returns interface{}
	_jsii_.Get(
		j,
		"value",
		&returns,
	)
	return returns
}


// Experimental.
func TenantV2SpecPoolsResourcesLimits_FromNumber(value *float64) TenantV2SpecPoolsResourcesLimits {
	_init_.Initialize()

	var returns TenantV2SpecPoolsResourcesLimits

	_jsii_.StaticInvoke(
		"cdk8s-metaflow.minio.TenantV2SpecPoolsResourcesLimits",
		"fromNumber",
		[]interface{}{value},
		&returns,
	)

	return returns
}

// Experimental.
func TenantV2SpecPoolsResourcesLimits_FromString(value *string) TenantV2SpecPoolsResourcesLimits {
	_init_.Initialize()

	var returns TenantV2SpecPoolsResourcesLimits

	_jsii_.StaticInvoke(
		"cdk8s-metaflow.minio.TenantV2SpecPoolsResourcesLimits",
		"fromString",
		[]interface{}{value},
		&returns,
	)

	return returns
}

// Experimental.
type TenantV2SpecPoolsResourcesRequests interface {
	// Experimental.
	Value() interface{}
}

// The jsii proxy struct for TenantV2SpecPoolsResourcesRequests
type jsiiProxy_TenantV2SpecPoolsResourcesRequests struct {
	_ byte // padding
}

func (j *jsiiProxy_TenantV2SpecPoolsResourcesRequests) Value() interface{} {
	var returns interface{}
	_jsii_.Get(
		j,
		"value",
		&returns,
	)
	return returns
}


// Experimental.
func TenantV2SpecPoolsResourcesRequests_FromNumber(value *float64) TenantV2SpecPoolsResourcesRequests {
	_init_.Initialize()

	var returns TenantV2SpecPoolsResourcesRequests

	_jsii_.StaticInvoke(
		"cdk8s-metaflow.minio.TenantV2SpecPoolsResourcesRequests",
		"fromNumber",
		[]interface{}{value},
		&returns,
	)

	return returns
}

// Experimental.
func TenantV2SpecPoolsResourcesRequests_FromString(value *string) TenantV2SpecPoolsResourcesRequests {
	_init_.Initialize()

	var returns TenantV2SpecPoolsResourcesRequests

	_jsii_.StaticInvoke(
		"cdk8s-metaflow.minio.TenantV2SpecPoolsResourcesRequests",
		"fromString",
		[]interface{}{value},
		&returns,
	)

	return returns
}

// Experimental.
type TenantV2SpecPoolsSecurityContext struct {
	// Experimental.
	FsGroup *float64 `field:"optional" json:"fsGroup" yaml:"fsGroup"`
	// Experimental.
	FsGroupChangePolicy *string `field:"optional" json:"fsGroupChangePolicy" yaml:"fsGroupChangePolicy"`
	// Experimental.
	RunAsGroup *float64 `field:"optional" json:"runAsGroup" yaml:"runAsGroup"`
	// Experimental.
	RunAsNonRoot *bool `field:"optional" json:"runAsNonRoot" yaml:"runAsNonRoot"`
	// Experimental.
	RunAsUser *float64 `field:"optional" json:"runAsUser" yaml:"runAsUser"`
	// Experimental.
	SeccompProfile *TenantV2SpecPoolsSecurityContextSeccompProfile `field:"optional" json:"seccompProfile" yaml:"seccompProfile"`
	// Experimental.
	SeLinuxOptions *TenantV2SpecPoolsSecurityContextSeLinuxOptions `field:"optional" json:"seLinuxOptions" yaml:"seLinuxOptions"`
	// Experimental.
	SupplementalGroups *[]*float64 `field:"optional" json:"supplementalGroups" yaml:"supplementalGroups"`
	// Experimental.
	Sysctls *[]*TenantV2SpecPoolsSecurityContextSysctls `field:"optional" json:"sysctls" yaml:"sysctls"`
	// Experimental.
	WindowsOptions *TenantV2SpecPoolsSecurityContextWindowsOptions `field:"optional" json:"windowsOptions" yaml:"windowsOptions"`
}

// Experimental.
type TenantV2SpecPoolsSecurityContextSeLinuxOptions struct {
	// Experimental.
	Level *string `field:"optional" json:"level" yaml:"level"`
	// Experimental.
	Role *string `field:"optional" json:"role" yaml:"role"`
	// Experimental.
	Type *string `field:"optional" json:"type" yaml:"type"`
	// Experimental.
	User *string `field:"optional" json:"user" yaml:"user"`
}

// Experimental.
type TenantV2SpecPoolsSecurityContextSeccompProfile struct {
	// Experimental.
	Type *string `field:"required" json:"type" yaml:"type"`
	// Experimental.
	LocalhostProfile *string `field:"optional" json:"localhostProfile" yaml:"localhostProfile"`
}

// Experimental.
type TenantV2SpecPoolsSecurityContextSysctls struct {
	// Experimental.
	Name *string `field:"required" json:"name" yaml:"name"`
	// Experimental.
	Value *string `field:"required" json:"value" yaml:"value"`
}

// Experimental.
type TenantV2SpecPoolsSecurityContextWindowsOptions struct {
	// Experimental.
	GmsaCredentialSpec *string `field:"optional" json:"gmsaCredentialSpec" yaml:"gmsaCredentialSpec"`
	// Experimental.
	GmsaCredentialSpecName *string `field:"optional" json:"gmsaCredentialSpecName" yaml:"gmsaCredentialSpecName"`
	// Experimental.
	RunAsUserName *string `field:"optional" json:"runAsUserName" yaml:"runAsUserName"`
}

// Experimental.
type TenantV2SpecPoolsTolerations struct {
	// Experimental.
	Effect *string `field:"optional" json:"effect" yaml:"effect"`
	// Experimental.
	Key *string `field:"optional" json:"key" yaml:"key"`
	// Experimental.
	Operator *string `field:"optional" json:"operator" yaml:"operator"`
	// Experimental.
	TolerationSeconds *float64 `field:"optional" json:"tolerationSeconds" yaml:"tolerationSeconds"`
	// Experimental.
	Value *string `field:"optional" json:"value" yaml:"value"`
}

// Experimental.
type TenantV2SpecPoolsTopologySpreadConstraints struct {
	// Experimental.
	MaxSkew *float64 `field:"required" json:"maxSkew" yaml:"maxSkew"`
	// Experimental.
	TopologyKey *string `field:"required" json:"topologyKey" yaml:"topologyKey"`
	// Experimental.
	WhenUnsatisfiable *string `field:"required" json:"whenUnsatisfiable" yaml:"whenUnsatisfiable"`
	// Experimental.
	LabelSelector *TenantV2SpecPoolsTopologySpreadConstraintsLabelSelector `field:"optional" json:"labelSelector" yaml:"labelSelector"`
}

// Experimental.
type TenantV2SpecPoolsTopologySpreadConstraintsLabelSelector struct {
	// Experimental.
	MatchExpressions *[]*TenantV2SpecPoolsTopologySpreadConstraintsLabelSelectorMatchExpressions `field:"optional" json:"matchExpressions" yaml:"matchExpressions"`
	// Experimental.
	MatchLabels *map[string]*string `field:"optional" json:"matchLabels" yaml:"matchLabels"`
}

// Experimental.
type TenantV2SpecPoolsTopologySpreadConstraintsLabelSelectorMatchExpressions struct {
	// Experimental.
	Key *string `field:"required" json:"key" yaml:"key"`
	// Experimental.
	Operator *string `field:"required" json:"operator" yaml:"operator"`
	// Experimental.
	Values *[]*string `field:"optional" json:"values" yaml:"values"`
}

// Experimental.
type TenantV2SpecPoolsVolumeClaimTemplate struct {
	// Experimental.
	ApiVersion *string `field:"optional" json:"apiVersion" yaml:"apiVersion"`
	// Experimental.
	Kind *string `field:"optional" json:"kind" yaml:"kind"`
	// Experimental.
	Metadata *TenantV2SpecPoolsVolumeClaimTemplateMetadata `field:"optional" json:"metadata" yaml:"metadata"`
	// Experimental.
	Spec *TenantV2SpecPoolsVolumeClaimTemplateSpec `field:"optional" json:"spec" yaml:"spec"`
	// Experimental.
	Status *TenantV2SpecPoolsVolumeClaimTemplateStatus `field:"optional" json:"status" yaml:"status"`
}

// Experimental.
type TenantV2SpecPoolsVolumeClaimTemplateMetadata struct {
	// Experimental.
	Annotations *map[string]*string `field:"optional" json:"annotations" yaml:"annotations"`
	// Experimental.
	Finalizers *[]*string `field:"optional" json:"finalizers" yaml:"finalizers"`
	// Experimental.
	Labels *map[string]*string `field:"optional" json:"labels" yaml:"labels"`
	// Experimental.
	Name *string `field:"optional" json:"name" yaml:"name"`
	// Experimental.
	Namespace *string `field:"optional" json:"namespace" yaml:"namespace"`
}

// Experimental.
type TenantV2SpecPoolsVolumeClaimTemplateSpec struct {
	// Experimental.
	AccessModes *[]*string `field:"optional" json:"accessModes" yaml:"accessModes"`
	// Experimental.
	DataSource *TenantV2SpecPoolsVolumeClaimTemplateSpecDataSource `field:"optional" json:"dataSource" yaml:"dataSource"`
	// Experimental.
	Resources *TenantV2SpecPoolsVolumeClaimTemplateSpecResources `field:"optional" json:"resources" yaml:"resources"`
	// Experimental.
	Selector *TenantV2SpecPoolsVolumeClaimTemplateSpecSelector `field:"optional" json:"selector" yaml:"selector"`
	// Experimental.
	StorageClassName *string `field:"optional" json:"storageClassName" yaml:"storageClassName"`
	// Experimental.
	VolumeMode *string `field:"optional" json:"volumeMode" yaml:"volumeMode"`
	// Experimental.
	VolumeName *string `field:"optional" json:"volumeName" yaml:"volumeName"`
}

// Experimental.
type TenantV2SpecPoolsVolumeClaimTemplateSpecDataSource struct {
	// Experimental.
	Kind *string `field:"required" json:"kind" yaml:"kind"`
	// Experimental.
	Name *string `field:"required" json:"name" yaml:"name"`
	// Experimental.
	ApiGroup *string `field:"optional" json:"apiGroup" yaml:"apiGroup"`
}

// Experimental.
type TenantV2SpecPoolsVolumeClaimTemplateSpecResources struct {
	// Experimental.
	Limits *map[string]TenantV2SpecPoolsVolumeClaimTemplateSpecResourcesLimits `field:"optional" json:"limits" yaml:"limits"`
	// Experimental.
	Requests *map[string]TenantV2SpecPoolsVolumeClaimTemplateSpecResourcesRequests `field:"optional" json:"requests" yaml:"requests"`
}

// Experimental.
type TenantV2SpecPoolsVolumeClaimTemplateSpecResourcesLimits interface {
	// Experimental.
	Value() interface{}
}

// The jsii proxy struct for TenantV2SpecPoolsVolumeClaimTemplateSpecResourcesLimits
type jsiiProxy_TenantV2SpecPoolsVolumeClaimTemplateSpecResourcesLimits struct {
	_ byte // padding
}

func (j *jsiiProxy_TenantV2SpecPoolsVolumeClaimTemplateSpecResourcesLimits) Value() interface{} {
	var returns interface{}
	_jsii_.Get(
		j,
		"value",
		&returns,
	)
	return returns
}


// Experimental.
func TenantV2SpecPoolsVolumeClaimTemplateSpecResourcesLimits_FromNumber(value *float64) TenantV2SpecPoolsVolumeClaimTemplateSpecResourcesLimits {
	_init_.Initialize()

	var returns TenantV2SpecPoolsVolumeClaimTemplateSpecResourcesLimits

	_jsii_.StaticInvoke(
		"cdk8s-metaflow.minio.TenantV2SpecPoolsVolumeClaimTemplateSpecResourcesLimits",
		"fromNumber",
		[]interface{}{value},
		&returns,
	)

	return returns
}

// Experimental.
func TenantV2SpecPoolsVolumeClaimTemplateSpecResourcesLimits_FromString(value *string) TenantV2SpecPoolsVolumeClaimTemplateSpecResourcesLimits {
	_init_.Initialize()

	var returns TenantV2SpecPoolsVolumeClaimTemplateSpecResourcesLimits

	_jsii_.StaticInvoke(
		"cdk8s-metaflow.minio.TenantV2SpecPoolsVolumeClaimTemplateSpecResourcesLimits",
		"fromString",
		[]interface{}{value},
		&returns,
	)

	return returns
}

// Experimental.
type TenantV2SpecPoolsVolumeClaimTemplateSpecResourcesRequests interface {
	// Experimental.
	Value() interface{}
}

// The jsii proxy struct for TenantV2SpecPoolsVolumeClaimTemplateSpecResourcesRequests
type jsiiProxy_TenantV2SpecPoolsVolumeClaimTemplateSpecResourcesRequests struct {
	_ byte // padding
}

func (j *jsiiProxy_TenantV2SpecPoolsVolumeClaimTemplateSpecResourcesRequests) Value() interface{} {
	var returns interface{}
	_jsii_.Get(
		j,
		"value",
		&returns,
	)
	return returns
}


// Experimental.
func TenantV2SpecPoolsVolumeClaimTemplateSpecResourcesRequests_FromNumber(value *float64) TenantV2SpecPoolsVolumeClaimTemplateSpecResourcesRequests {
	_init_.Initialize()

	var returns TenantV2SpecPoolsVolumeClaimTemplateSpecResourcesRequests

	_jsii_.StaticInvoke(
		"cdk8s-metaflow.minio.TenantV2SpecPoolsVolumeClaimTemplateSpecResourcesRequests",
		"fromNumber",
		[]interface{}{value},
		&returns,
	)

	return returns
}

// Experimental.
func TenantV2SpecPoolsVolumeClaimTemplateSpecResourcesRequests_FromString(value *string) TenantV2SpecPoolsVolumeClaimTemplateSpecResourcesRequests {
	_init_.Initialize()

	var returns TenantV2SpecPoolsVolumeClaimTemplateSpecResourcesRequests

	_jsii_.StaticInvoke(
		"cdk8s-metaflow.minio.TenantV2SpecPoolsVolumeClaimTemplateSpecResourcesRequests",
		"fromString",
		[]interface{}{value},
		&returns,
	)

	return returns
}

// Experimental.
type TenantV2SpecPoolsVolumeClaimTemplateSpecSelector struct {
	// Experimental.
	MatchExpressions *[]*TenantV2SpecPoolsVolumeClaimTemplateSpecSelectorMatchExpressions `field:"optional" json:"matchExpressions" yaml:"matchExpressions"`
	// Experimental.
	MatchLabels *map[string]*string `field:"optional" json:"matchLabels" yaml:"matchLabels"`
}

// Experimental.
type TenantV2SpecPoolsVolumeClaimTemplateSpecSelectorMatchExpressions struct {
	// Experimental.
	Key *string `field:"required" json:"key" yaml:"key"`
	// Experimental.
	Operator *string `field:"required" json:"operator" yaml:"operator"`
	// Experimental.
	Values *[]*string `field:"optional" json:"values" yaml:"values"`
}

// Experimental.
type TenantV2SpecPoolsVolumeClaimTemplateStatus struct {
	// Experimental.
	AccessModes *[]*string `field:"optional" json:"accessModes" yaml:"accessModes"`
	// Experimental.
	Capacity *map[string]TenantV2SpecPoolsVolumeClaimTemplateStatusCapacity `field:"optional" json:"capacity" yaml:"capacity"`
	// Experimental.
	Conditions *[]*TenantV2SpecPoolsVolumeClaimTemplateStatusConditions `field:"optional" json:"conditions" yaml:"conditions"`
	// Experimental.
	Phase *string `field:"optional" json:"phase" yaml:"phase"`
}

// Experimental.
type TenantV2SpecPoolsVolumeClaimTemplateStatusCapacity interface {
	// Experimental.
	Value() interface{}
}

// The jsii proxy struct for TenantV2SpecPoolsVolumeClaimTemplateStatusCapacity
type jsiiProxy_TenantV2SpecPoolsVolumeClaimTemplateStatusCapacity struct {
	_ byte // padding
}

func (j *jsiiProxy_TenantV2SpecPoolsVolumeClaimTemplateStatusCapacity) Value() interface{} {
	var returns interface{}
	_jsii_.Get(
		j,
		"value",
		&returns,
	)
	return returns
}


// Experimental.
func TenantV2SpecPoolsVolumeClaimTemplateStatusCapacity_FromNumber(value *float64) TenantV2SpecPoolsVolumeClaimTemplateStatusCapacity {
	_init_.Initialize()

	var returns TenantV2SpecPoolsVolumeClaimTemplateStatusCapacity

	_jsii_.StaticInvoke(
		"cdk8s-metaflow.minio.TenantV2SpecPoolsVolumeClaimTemplateStatusCapacity",
		"fromNumber",
		[]interface{}{value},
		&returns,
	)

	return returns
}

// Experimental.
func TenantV2SpecPoolsVolumeClaimTemplateStatusCapacity_FromString(value *string) TenantV2SpecPoolsVolumeClaimTemplateStatusCapacity {
	_init_.Initialize()

	var returns TenantV2SpecPoolsVolumeClaimTemplateStatusCapacity

	_jsii_.StaticInvoke(
		"cdk8s-metaflow.minio.TenantV2SpecPoolsVolumeClaimTemplateStatusCapacity",
		"fromString",
		[]interface{}{value},
		&returns,
	)

	return returns
}

// Experimental.
type TenantV2SpecPoolsVolumeClaimTemplateStatusConditions struct {
	// Experimental.
	Status *string `field:"required" json:"status" yaml:"status"`
	// Experimental.
	Type *string `field:"required" json:"type" yaml:"type"`
	// Experimental.
	LastProbeTime *time.Time `field:"optional" json:"lastProbeTime" yaml:"lastProbeTime"`
	// Experimental.
	LastTransitionTime *time.Time `field:"optional" json:"lastTransitionTime" yaml:"lastTransitionTime"`
	// Experimental.
	Message *string `field:"optional" json:"message" yaml:"message"`
	// Experimental.
	Reason *string `field:"optional" json:"reason" yaml:"reason"`
}

// Experimental.
type TenantV2SpecPrometheus struct {
	// Experimental.
	Affinity *TenantV2SpecPrometheusAffinity `field:"optional" json:"affinity" yaml:"affinity"`
	// Experimental.
	Annotations *map[string]*string `field:"optional" json:"annotations" yaml:"annotations"`
	// Experimental.
	DiskCapacityGb *float64 `field:"optional" json:"diskCapacityGb" yaml:"diskCapacityGb"`
	// Experimental.
	Image *string `field:"optional" json:"image" yaml:"image"`
	// Experimental.
	Initimage *string `field:"optional" json:"initimage" yaml:"initimage"`
	// Experimental.
	Labels *map[string]*string `field:"optional" json:"labels" yaml:"labels"`
	// Experimental.
	NodeSelector *map[string]*string `field:"optional" json:"nodeSelector" yaml:"nodeSelector"`
	// Experimental.
	Resources *TenantV2SpecPrometheusResources `field:"optional" json:"resources" yaml:"resources"`
	// Experimental.
	SecurityContext *TenantV2SpecPrometheusSecurityContext `field:"optional" json:"securityContext" yaml:"securityContext"`
	// Experimental.
	ServiceAccountName *string `field:"optional" json:"serviceAccountName" yaml:"serviceAccountName"`
	// Experimental.
	Sidecarimage *string `field:"optional" json:"sidecarimage" yaml:"sidecarimage"`
	// Experimental.
	StorageClassName *string `field:"optional" json:"storageClassName" yaml:"storageClassName"`
	// Experimental.
	TopologySpreadConstraints *[]*TenantV2SpecPrometheusTopologySpreadConstraints `field:"optional" json:"topologySpreadConstraints" yaml:"topologySpreadConstraints"`
}

// Experimental.
type TenantV2SpecPrometheusAffinity struct {
	// Experimental.
	NodeAffinity *TenantV2SpecPrometheusAffinityNodeAffinity `field:"optional" json:"nodeAffinity" yaml:"nodeAffinity"`
	// Experimental.
	PodAffinity *TenantV2SpecPrometheusAffinityPodAffinity `field:"optional" json:"podAffinity" yaml:"podAffinity"`
	// Experimental.
	PodAntiAffinity *TenantV2SpecPrometheusAffinityPodAntiAffinity `field:"optional" json:"podAntiAffinity" yaml:"podAntiAffinity"`
}

// Experimental.
type TenantV2SpecPrometheusAffinityNodeAffinity struct {
	// Experimental.
	PreferredDuringSchedulingIgnoredDuringExecution *[]*TenantV2SpecPrometheusAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution `field:"optional" json:"preferredDuringSchedulingIgnoredDuringExecution" yaml:"preferredDuringSchedulingIgnoredDuringExecution"`
	// Experimental.
	RequiredDuringSchedulingIgnoredDuringExecution *TenantV2SpecPrometheusAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution `field:"optional" json:"requiredDuringSchedulingIgnoredDuringExecution" yaml:"requiredDuringSchedulingIgnoredDuringExecution"`
}

// Experimental.
type TenantV2SpecPrometheusAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution struct {
	// Experimental.
	Preference *TenantV2SpecPrometheusAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference `field:"required" json:"preference" yaml:"preference"`
	// Experimental.
	Weight *float64 `field:"required" json:"weight" yaml:"weight"`
}

// Experimental.
type TenantV2SpecPrometheusAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference struct {
	// Experimental.
	MatchExpressions *[]*TenantV2SpecPrometheusAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions `field:"optional" json:"matchExpressions" yaml:"matchExpressions"`
	// Experimental.
	MatchFields *[]*TenantV2SpecPrometheusAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields `field:"optional" json:"matchFields" yaml:"matchFields"`
}

// Experimental.
type TenantV2SpecPrometheusAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions struct {
	// Experimental.
	Key *string `field:"required" json:"key" yaml:"key"`
	// Experimental.
	Operator *string `field:"required" json:"operator" yaml:"operator"`
	// Experimental.
	Values *[]*string `field:"optional" json:"values" yaml:"values"`
}

// Experimental.
type TenantV2SpecPrometheusAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields struct {
	// Experimental.
	Key *string `field:"required" json:"key" yaml:"key"`
	// Experimental.
	Operator *string `field:"required" json:"operator" yaml:"operator"`
	// Experimental.
	Values *[]*string `field:"optional" json:"values" yaml:"values"`
}

// Experimental.
type TenantV2SpecPrometheusAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution struct {
	// Experimental.
	NodeSelectorTerms *[]*TenantV2SpecPrometheusAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms `field:"required" json:"nodeSelectorTerms" yaml:"nodeSelectorTerms"`
}

// Experimental.
type TenantV2SpecPrometheusAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms struct {
	// Experimental.
	MatchExpressions *[]*TenantV2SpecPrometheusAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions `field:"optional" json:"matchExpressions" yaml:"matchExpressions"`
	// Experimental.
	MatchFields *[]*TenantV2SpecPrometheusAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields `field:"optional" json:"matchFields" yaml:"matchFields"`
}

// Experimental.
type TenantV2SpecPrometheusAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions struct {
	// Experimental.
	Key *string `field:"required" json:"key" yaml:"key"`
	// Experimental.
	Operator *string `field:"required" json:"operator" yaml:"operator"`
	// Experimental.
	Values *[]*string `field:"optional" json:"values" yaml:"values"`
}

// Experimental.
type TenantV2SpecPrometheusAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields struct {
	// Experimental.
	Key *string `field:"required" json:"key" yaml:"key"`
	// Experimental.
	Operator *string `field:"required" json:"operator" yaml:"operator"`
	// Experimental.
	Values *[]*string `field:"optional" json:"values" yaml:"values"`
}

// Experimental.
type TenantV2SpecPrometheusAffinityPodAffinity struct {
	// Experimental.
	PreferredDuringSchedulingIgnoredDuringExecution *[]*TenantV2SpecPrometheusAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution `field:"optional" json:"preferredDuringSchedulingIgnoredDuringExecution" yaml:"preferredDuringSchedulingIgnoredDuringExecution"`
	// Experimental.
	RequiredDuringSchedulingIgnoredDuringExecution *[]*TenantV2SpecPrometheusAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution `field:"optional" json:"requiredDuringSchedulingIgnoredDuringExecution" yaml:"requiredDuringSchedulingIgnoredDuringExecution"`
}

// Experimental.
type TenantV2SpecPrometheusAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution struct {
	// Experimental.
	PodAffinityTerm *TenantV2SpecPrometheusAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm `field:"required" json:"podAffinityTerm" yaml:"podAffinityTerm"`
	// Experimental.
	Weight *float64 `field:"required" json:"weight" yaml:"weight"`
}

// Experimental.
type TenantV2SpecPrometheusAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm struct {
	// Experimental.
	TopologyKey *string `field:"required" json:"topologyKey" yaml:"topologyKey"`
	// Experimental.
	LabelSelector *TenantV2SpecPrometheusAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector `field:"optional" json:"labelSelector" yaml:"labelSelector"`
	// Experimental.
	Namespaces *[]*string `field:"optional" json:"namespaces" yaml:"namespaces"`
}

// Experimental.
type TenantV2SpecPrometheusAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector struct {
	// Experimental.
	MatchExpressions *[]*TenantV2SpecPrometheusAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions `field:"optional" json:"matchExpressions" yaml:"matchExpressions"`
	// Experimental.
	MatchLabels *map[string]*string `field:"optional" json:"matchLabels" yaml:"matchLabels"`
}

// Experimental.
type TenantV2SpecPrometheusAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions struct {
	// Experimental.
	Key *string `field:"required" json:"key" yaml:"key"`
	// Experimental.
	Operator *string `field:"required" json:"operator" yaml:"operator"`
	// Experimental.
	Values *[]*string `field:"optional" json:"values" yaml:"values"`
}

// Experimental.
type TenantV2SpecPrometheusAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution struct {
	// Experimental.
	TopologyKey *string `field:"required" json:"topologyKey" yaml:"topologyKey"`
	// Experimental.
	LabelSelector *TenantV2SpecPrometheusAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector `field:"optional" json:"labelSelector" yaml:"labelSelector"`
	// Experimental.
	Namespaces *[]*string `field:"optional" json:"namespaces" yaml:"namespaces"`
}

// Experimental.
type TenantV2SpecPrometheusAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector struct {
	// Experimental.
	MatchExpressions *[]*TenantV2SpecPrometheusAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions `field:"optional" json:"matchExpressions" yaml:"matchExpressions"`
	// Experimental.
	MatchLabels *map[string]*string `field:"optional" json:"matchLabels" yaml:"matchLabels"`
}

// Experimental.
type TenantV2SpecPrometheusAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions struct {
	// Experimental.
	Key *string `field:"required" json:"key" yaml:"key"`
	// Experimental.
	Operator *string `field:"required" json:"operator" yaml:"operator"`
	// Experimental.
	Values *[]*string `field:"optional" json:"values" yaml:"values"`
}

// Experimental.
type TenantV2SpecPrometheusAffinityPodAntiAffinity struct {
	// Experimental.
	PreferredDuringSchedulingIgnoredDuringExecution *[]*TenantV2SpecPrometheusAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution `field:"optional" json:"preferredDuringSchedulingIgnoredDuringExecution" yaml:"preferredDuringSchedulingIgnoredDuringExecution"`
	// Experimental.
	RequiredDuringSchedulingIgnoredDuringExecution *[]*TenantV2SpecPrometheusAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution `field:"optional" json:"requiredDuringSchedulingIgnoredDuringExecution" yaml:"requiredDuringSchedulingIgnoredDuringExecution"`
}

// Experimental.
type TenantV2SpecPrometheusAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution struct {
	// Experimental.
	PodAffinityTerm *TenantV2SpecPrometheusAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm `field:"required" json:"podAffinityTerm" yaml:"podAffinityTerm"`
	// Experimental.
	Weight *float64 `field:"required" json:"weight" yaml:"weight"`
}

// Experimental.
type TenantV2SpecPrometheusAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm struct {
	// Experimental.
	TopologyKey *string `field:"required" json:"topologyKey" yaml:"topologyKey"`
	// Experimental.
	LabelSelector *TenantV2SpecPrometheusAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector `field:"optional" json:"labelSelector" yaml:"labelSelector"`
	// Experimental.
	Namespaces *[]*string `field:"optional" json:"namespaces" yaml:"namespaces"`
}

// Experimental.
type TenantV2SpecPrometheusAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector struct {
	// Experimental.
	MatchExpressions *[]*TenantV2SpecPrometheusAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions `field:"optional" json:"matchExpressions" yaml:"matchExpressions"`
	// Experimental.
	MatchLabels *map[string]*string `field:"optional" json:"matchLabels" yaml:"matchLabels"`
}

// Experimental.
type TenantV2SpecPrometheusAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions struct {
	// Experimental.
	Key *string `field:"required" json:"key" yaml:"key"`
	// Experimental.
	Operator *string `field:"required" json:"operator" yaml:"operator"`
	// Experimental.
	Values *[]*string `field:"optional" json:"values" yaml:"values"`
}

// Experimental.
type TenantV2SpecPrometheusAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution struct {
	// Experimental.
	TopologyKey *string `field:"required" json:"topologyKey" yaml:"topologyKey"`
	// Experimental.
	LabelSelector *TenantV2SpecPrometheusAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector `field:"optional" json:"labelSelector" yaml:"labelSelector"`
	// Experimental.
	Namespaces *[]*string `field:"optional" json:"namespaces" yaml:"namespaces"`
}

// Experimental.
type TenantV2SpecPrometheusAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector struct {
	// Experimental.
	MatchExpressions *[]*TenantV2SpecPrometheusAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions `field:"optional" json:"matchExpressions" yaml:"matchExpressions"`
	// Experimental.
	MatchLabels *map[string]*string `field:"optional" json:"matchLabels" yaml:"matchLabels"`
}

// Experimental.
type TenantV2SpecPrometheusAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions struct {
	// Experimental.
	Key *string `field:"required" json:"key" yaml:"key"`
	// Experimental.
	Operator *string `field:"required" json:"operator" yaml:"operator"`
	// Experimental.
	Values *[]*string `field:"optional" json:"values" yaml:"values"`
}

// Experimental.
type TenantV2SpecPrometheusResources struct {
	// Experimental.
	Limits *map[string]TenantV2SpecPrometheusResourcesLimits `field:"optional" json:"limits" yaml:"limits"`
	// Experimental.
	Requests *map[string]TenantV2SpecPrometheusResourcesRequests `field:"optional" json:"requests" yaml:"requests"`
}

// Experimental.
type TenantV2SpecPrometheusResourcesLimits interface {
	// Experimental.
	Value() interface{}
}

// The jsii proxy struct for TenantV2SpecPrometheusResourcesLimits
type jsiiProxy_TenantV2SpecPrometheusResourcesLimits struct {
	_ byte // padding
}

func (j *jsiiProxy_TenantV2SpecPrometheusResourcesLimits) Value() interface{} {
	var returns interface{}
	_jsii_.Get(
		j,
		"value",
		&returns,
	)
	return returns
}


// Experimental.
func TenantV2SpecPrometheusResourcesLimits_FromNumber(value *float64) TenantV2SpecPrometheusResourcesLimits {
	_init_.Initialize()

	var returns TenantV2SpecPrometheusResourcesLimits

	_jsii_.StaticInvoke(
		"cdk8s-metaflow.minio.TenantV2SpecPrometheusResourcesLimits",
		"fromNumber",
		[]interface{}{value},
		&returns,
	)

	return returns
}

// Experimental.
func TenantV2SpecPrometheusResourcesLimits_FromString(value *string) TenantV2SpecPrometheusResourcesLimits {
	_init_.Initialize()

	var returns TenantV2SpecPrometheusResourcesLimits

	_jsii_.StaticInvoke(
		"cdk8s-metaflow.minio.TenantV2SpecPrometheusResourcesLimits",
		"fromString",
		[]interface{}{value},
		&returns,
	)

	return returns
}

// Experimental.
type TenantV2SpecPrometheusResourcesRequests interface {
	// Experimental.
	Value() interface{}
}

// The jsii proxy struct for TenantV2SpecPrometheusResourcesRequests
type jsiiProxy_TenantV2SpecPrometheusResourcesRequests struct {
	_ byte // padding
}

func (j *jsiiProxy_TenantV2SpecPrometheusResourcesRequests) Value() interface{} {
	var returns interface{}
	_jsii_.Get(
		j,
		"value",
		&returns,
	)
	return returns
}


// Experimental.
func TenantV2SpecPrometheusResourcesRequests_FromNumber(value *float64) TenantV2SpecPrometheusResourcesRequests {
	_init_.Initialize()

	var returns TenantV2SpecPrometheusResourcesRequests

	_jsii_.StaticInvoke(
		"cdk8s-metaflow.minio.TenantV2SpecPrometheusResourcesRequests",
		"fromNumber",
		[]interface{}{value},
		&returns,
	)

	return returns
}

// Experimental.
func TenantV2SpecPrometheusResourcesRequests_FromString(value *string) TenantV2SpecPrometheusResourcesRequests {
	_init_.Initialize()

	var returns TenantV2SpecPrometheusResourcesRequests

	_jsii_.StaticInvoke(
		"cdk8s-metaflow.minio.TenantV2SpecPrometheusResourcesRequests",
		"fromString",
		[]interface{}{value},
		&returns,
	)

	return returns
}

// Experimental.
type TenantV2SpecPrometheusSecurityContext struct {
	// Experimental.
	FsGroup *float64 `field:"optional" json:"fsGroup" yaml:"fsGroup"`
	// Experimental.
	FsGroupChangePolicy *string `field:"optional" json:"fsGroupChangePolicy" yaml:"fsGroupChangePolicy"`
	// Experimental.
	RunAsGroup *float64 `field:"optional" json:"runAsGroup" yaml:"runAsGroup"`
	// Experimental.
	RunAsNonRoot *bool `field:"optional" json:"runAsNonRoot" yaml:"runAsNonRoot"`
	// Experimental.
	RunAsUser *float64 `field:"optional" json:"runAsUser" yaml:"runAsUser"`
	// Experimental.
	SeccompProfile *TenantV2SpecPrometheusSecurityContextSeccompProfile `field:"optional" json:"seccompProfile" yaml:"seccompProfile"`
	// Experimental.
	SeLinuxOptions *TenantV2SpecPrometheusSecurityContextSeLinuxOptions `field:"optional" json:"seLinuxOptions" yaml:"seLinuxOptions"`
	// Experimental.
	SupplementalGroups *[]*float64 `field:"optional" json:"supplementalGroups" yaml:"supplementalGroups"`
	// Experimental.
	Sysctls *[]*TenantV2SpecPrometheusSecurityContextSysctls `field:"optional" json:"sysctls" yaml:"sysctls"`
	// Experimental.
	WindowsOptions *TenantV2SpecPrometheusSecurityContextWindowsOptions `field:"optional" json:"windowsOptions" yaml:"windowsOptions"`
}

// Experimental.
type TenantV2SpecPrometheusSecurityContextSeLinuxOptions struct {
	// Experimental.
	Level *string `field:"optional" json:"level" yaml:"level"`
	// Experimental.
	Role *string `field:"optional" json:"role" yaml:"role"`
	// Experimental.
	Type *string `field:"optional" json:"type" yaml:"type"`
	// Experimental.
	User *string `field:"optional" json:"user" yaml:"user"`
}

// Experimental.
type TenantV2SpecPrometheusSecurityContextSeccompProfile struct {
	// Experimental.
	Type *string `field:"required" json:"type" yaml:"type"`
	// Experimental.
	LocalhostProfile *string `field:"optional" json:"localhostProfile" yaml:"localhostProfile"`
}

// Experimental.
type TenantV2SpecPrometheusSecurityContextSysctls struct {
	// Experimental.
	Name *string `field:"required" json:"name" yaml:"name"`
	// Experimental.
	Value *string `field:"required" json:"value" yaml:"value"`
}

// Experimental.
type TenantV2SpecPrometheusSecurityContextWindowsOptions struct {
	// Experimental.
	GmsaCredentialSpec *string `field:"optional" json:"gmsaCredentialSpec" yaml:"gmsaCredentialSpec"`
	// Experimental.
	GmsaCredentialSpecName *string `field:"optional" json:"gmsaCredentialSpecName" yaml:"gmsaCredentialSpecName"`
	// Experimental.
	RunAsUserName *string `field:"optional" json:"runAsUserName" yaml:"runAsUserName"`
}

// Experimental.
type TenantV2SpecPrometheusTopologySpreadConstraints struct {
	// Experimental.
	MaxSkew *float64 `field:"required" json:"maxSkew" yaml:"maxSkew"`
	// Experimental.
	TopologyKey *string `field:"required" json:"topologyKey" yaml:"topologyKey"`
	// Experimental.
	WhenUnsatisfiable *string `field:"required" json:"whenUnsatisfiable" yaml:"whenUnsatisfiable"`
	// Experimental.
	LabelSelector *TenantV2SpecPrometheusTopologySpreadConstraintsLabelSelector `field:"optional" json:"labelSelector" yaml:"labelSelector"`
}

// Experimental.
type TenantV2SpecPrometheusTopologySpreadConstraintsLabelSelector struct {
	// Experimental.
	MatchExpressions *[]*TenantV2SpecPrometheusTopologySpreadConstraintsLabelSelectorMatchExpressions `field:"optional" json:"matchExpressions" yaml:"matchExpressions"`
	// Experimental.
	MatchLabels *map[string]*string `field:"optional" json:"matchLabels" yaml:"matchLabels"`
}

// Experimental.
type TenantV2SpecPrometheusTopologySpreadConstraintsLabelSelectorMatchExpressions struct {
	// Experimental.
	Key *string `field:"required" json:"key" yaml:"key"`
	// Experimental.
	Operator *string `field:"required" json:"operator" yaml:"operator"`
	// Experimental.
	Values *[]*string `field:"optional" json:"values" yaml:"values"`
}

// Experimental.
type TenantV2SpecReadiness struct {
	// Experimental.
	Exec *TenantV2SpecReadinessExec `field:"optional" json:"exec" yaml:"exec"`
	// Experimental.
	FailureThreshold *float64 `field:"optional" json:"failureThreshold" yaml:"failureThreshold"`
	// Experimental.
	HttpGet *TenantV2SpecReadinessHttpGet `field:"optional" json:"httpGet" yaml:"httpGet"`
	// Experimental.
	InitialDelaySeconds *float64 `field:"optional" json:"initialDelaySeconds" yaml:"initialDelaySeconds"`
	// Experimental.
	PeriodSeconds *float64 `field:"optional" json:"periodSeconds" yaml:"periodSeconds"`
	// Experimental.
	SuccessThreshold *float64 `field:"optional" json:"successThreshold" yaml:"successThreshold"`
	// Experimental.
	TcpSocket *TenantV2SpecReadinessTcpSocket `field:"optional" json:"tcpSocket" yaml:"tcpSocket"`
	// Experimental.
	TimeoutSeconds *float64 `field:"optional" json:"timeoutSeconds" yaml:"timeoutSeconds"`
}

// Experimental.
type TenantV2SpecReadinessExec struct {
	// Experimental.
	Command *[]*string `field:"optional" json:"command" yaml:"command"`
}

// Experimental.
type TenantV2SpecReadinessHttpGet struct {
	// Experimental.
	Port TenantV2SpecReadinessHttpGetPort `field:"required" json:"port" yaml:"port"`
	// Experimental.
	Host *string `field:"optional" json:"host" yaml:"host"`
	// Experimental.
	HttpHeaders *[]*TenantV2SpecReadinessHttpGetHttpHeaders `field:"optional" json:"httpHeaders" yaml:"httpHeaders"`
	// Experimental.
	Path *string `field:"optional" json:"path" yaml:"path"`
	// Experimental.
	Scheme *string `field:"optional" json:"scheme" yaml:"scheme"`
}

// Experimental.
type TenantV2SpecReadinessHttpGetHttpHeaders struct {
	// Experimental.
	Name *string `field:"required" json:"name" yaml:"name"`
	// Experimental.
	Value *string `field:"required" json:"value" yaml:"value"`
}

// Experimental.
type TenantV2SpecReadinessHttpGetPort interface {
	// Experimental.
	Value() interface{}
}

// The jsii proxy struct for TenantV2SpecReadinessHttpGetPort
type jsiiProxy_TenantV2SpecReadinessHttpGetPort struct {
	_ byte // padding
}

func (j *jsiiProxy_TenantV2SpecReadinessHttpGetPort) Value() interface{} {
	var returns interface{}
	_jsii_.Get(
		j,
		"value",
		&returns,
	)
	return returns
}


// Experimental.
func TenantV2SpecReadinessHttpGetPort_FromNumber(value *float64) TenantV2SpecReadinessHttpGetPort {
	_init_.Initialize()

	var returns TenantV2SpecReadinessHttpGetPort

	_jsii_.StaticInvoke(
		"cdk8s-metaflow.minio.TenantV2SpecReadinessHttpGetPort",
		"fromNumber",
		[]interface{}{value},
		&returns,
	)

	return returns
}

// Experimental.
func TenantV2SpecReadinessHttpGetPort_FromString(value *string) TenantV2SpecReadinessHttpGetPort {
	_init_.Initialize()

	var returns TenantV2SpecReadinessHttpGetPort

	_jsii_.StaticInvoke(
		"cdk8s-metaflow.minio.TenantV2SpecReadinessHttpGetPort",
		"fromString",
		[]interface{}{value},
		&returns,
	)

	return returns
}

// Experimental.
type TenantV2SpecReadinessTcpSocket struct {
	// Experimental.
	Port TenantV2SpecReadinessTcpSocketPort `field:"required" json:"port" yaml:"port"`
	// Experimental.
	Host *string `field:"optional" json:"host" yaml:"host"`
}

// Experimental.
type TenantV2SpecReadinessTcpSocketPort interface {
	// Experimental.
	Value() interface{}
}

// The jsii proxy struct for TenantV2SpecReadinessTcpSocketPort
type jsiiProxy_TenantV2SpecReadinessTcpSocketPort struct {
	_ byte // padding
}

func (j *jsiiProxy_TenantV2SpecReadinessTcpSocketPort) Value() interface{} {
	var returns interface{}
	_jsii_.Get(
		j,
		"value",
		&returns,
	)
	return returns
}


// Experimental.
func TenantV2SpecReadinessTcpSocketPort_FromNumber(value *float64) TenantV2SpecReadinessTcpSocketPort {
	_init_.Initialize()

	var returns TenantV2SpecReadinessTcpSocketPort

	_jsii_.StaticInvoke(
		"cdk8s-metaflow.minio.TenantV2SpecReadinessTcpSocketPort",
		"fromNumber",
		[]interface{}{value},
		&returns,
	)

	return returns
}

// Experimental.
func TenantV2SpecReadinessTcpSocketPort_FromString(value *string) TenantV2SpecReadinessTcpSocketPort {
	_init_.Initialize()

	var returns TenantV2SpecReadinessTcpSocketPort

	_jsii_.StaticInvoke(
		"cdk8s-metaflow.minio.TenantV2SpecReadinessTcpSocketPort",
		"fromString",
		[]interface{}{value},
		&returns,
	)

	return returns
}

// Experimental.
type TenantV2SpecS3 struct {
	// Experimental.
	BucketDns *bool `field:"optional" json:"bucketDns" yaml:"bucketDns"`
}

// Experimental.
type TenantV2SpecServiceMetadata struct {
	// Experimental.
	ConsoleServiceAnnotations *map[string]*string `field:"optional" json:"consoleServiceAnnotations" yaml:"consoleServiceAnnotations"`
	// Experimental.
	ConsoleServiceLabels *map[string]*string `field:"optional" json:"consoleServiceLabels" yaml:"consoleServiceLabels"`
	// Experimental.
	MinioServiceAnnotations *map[string]*string `field:"optional" json:"minioServiceAnnotations" yaml:"minioServiceAnnotations"`
	// Experimental.
	MinioServiceLabels *map[string]*string `field:"optional" json:"minioServiceLabels" yaml:"minioServiceLabels"`
}

// Experimental.
type TenantV2SpecSideCars struct {
	// Experimental.
	Containers *[]*TenantV2SpecSideCarsContainers `field:"required" json:"containers" yaml:"containers"`
	// Experimental.
	VolumeClaimTemplates *[]*TenantV2SpecSideCarsVolumeClaimTemplates `field:"optional" json:"volumeClaimTemplates" yaml:"volumeClaimTemplates"`
	// Experimental.
	Volumes *[]*TenantV2SpecSideCarsVolumes `field:"optional" json:"volumes" yaml:"volumes"`
}

// Experimental.
type TenantV2SpecSideCarsContainers struct {
	// Experimental.
	Name *string `field:"required" json:"name" yaml:"name"`
	// Experimental.
	Args *[]*string `field:"optional" json:"args" yaml:"args"`
	// Experimental.
	Command *[]*string `field:"optional" json:"command" yaml:"command"`
	// Experimental.
	Env *[]*TenantV2SpecSideCarsContainersEnv `field:"optional" json:"env" yaml:"env"`
	// Experimental.
	EnvFrom *[]*TenantV2SpecSideCarsContainersEnvFrom `field:"optional" json:"envFrom" yaml:"envFrom"`
	// Experimental.
	Image *string `field:"optional" json:"image" yaml:"image"`
	// Experimental.
	ImagePullPolicy *string `field:"optional" json:"imagePullPolicy" yaml:"imagePullPolicy"`
	// Experimental.
	Lifecycle *TenantV2SpecSideCarsContainersLifecycle `field:"optional" json:"lifecycle" yaml:"lifecycle"`
	// Experimental.
	LivenessProbe *TenantV2SpecSideCarsContainersLivenessProbe `field:"optional" json:"livenessProbe" yaml:"livenessProbe"`
	// Experimental.
	Ports *[]*TenantV2SpecSideCarsContainersPorts `field:"optional" json:"ports" yaml:"ports"`
	// Experimental.
	ReadinessProbe *TenantV2SpecSideCarsContainersReadinessProbe `field:"optional" json:"readinessProbe" yaml:"readinessProbe"`
	// Experimental.
	Resources *TenantV2SpecSideCarsContainersResources `field:"optional" json:"resources" yaml:"resources"`
	// Experimental.
	SecurityContext *TenantV2SpecSideCarsContainersSecurityContext `field:"optional" json:"securityContext" yaml:"securityContext"`
	// Experimental.
	StartupProbe *TenantV2SpecSideCarsContainersStartupProbe `field:"optional" json:"startupProbe" yaml:"startupProbe"`
	// Experimental.
	Stdin *bool `field:"optional" json:"stdin" yaml:"stdin"`
	// Experimental.
	StdinOnce *bool `field:"optional" json:"stdinOnce" yaml:"stdinOnce"`
	// Experimental.
	TerminationMessagePath *string `field:"optional" json:"terminationMessagePath" yaml:"terminationMessagePath"`
	// Experimental.
	TerminationMessagePolicy *string `field:"optional" json:"terminationMessagePolicy" yaml:"terminationMessagePolicy"`
	// Experimental.
	Tty *bool `field:"optional" json:"tty" yaml:"tty"`
	// Experimental.
	VolumeDevices *[]*TenantV2SpecSideCarsContainersVolumeDevices `field:"optional" json:"volumeDevices" yaml:"volumeDevices"`
	// Experimental.
	VolumeMounts *[]*TenantV2SpecSideCarsContainersVolumeMounts `field:"optional" json:"volumeMounts" yaml:"volumeMounts"`
	// Experimental.
	WorkingDir *string `field:"optional" json:"workingDir" yaml:"workingDir"`
}

// Experimental.
type TenantV2SpecSideCarsContainersEnv struct {
	// Experimental.
	Name *string `field:"required" json:"name" yaml:"name"`
	// Experimental.
	Value *string `field:"optional" json:"value" yaml:"value"`
	// Experimental.
	ValueFrom *TenantV2SpecSideCarsContainersEnvValueFrom `field:"optional" json:"valueFrom" yaml:"valueFrom"`
}

// Experimental.
type TenantV2SpecSideCarsContainersEnvFrom struct {
	// Experimental.
	ConfigMapRef *TenantV2SpecSideCarsContainersEnvFromConfigMapRef `field:"optional" json:"configMapRef" yaml:"configMapRef"`
	// Experimental.
	Prefix *string `field:"optional" json:"prefix" yaml:"prefix"`
	// Experimental.
	SecretRef *TenantV2SpecSideCarsContainersEnvFromSecretRef `field:"optional" json:"secretRef" yaml:"secretRef"`
}

// Experimental.
type TenantV2SpecSideCarsContainersEnvFromConfigMapRef struct {
	// Experimental.
	Name *string `field:"optional" json:"name" yaml:"name"`
	// Experimental.
	Optional *bool `field:"optional" json:"optional" yaml:"optional"`
}

// Experimental.
type TenantV2SpecSideCarsContainersEnvFromSecretRef struct {
	// Experimental.
	Name *string `field:"optional" json:"name" yaml:"name"`
	// Experimental.
	Optional *bool `field:"optional" json:"optional" yaml:"optional"`
}

// Experimental.
type TenantV2SpecSideCarsContainersEnvValueFrom struct {
	// Experimental.
	ConfigMapKeyRef *TenantV2SpecSideCarsContainersEnvValueFromConfigMapKeyRef `field:"optional" json:"configMapKeyRef" yaml:"configMapKeyRef"`
	// Experimental.
	FieldRef *TenantV2SpecSideCarsContainersEnvValueFromFieldRef `field:"optional" json:"fieldRef" yaml:"fieldRef"`
	// Experimental.
	ResourceFieldRef *TenantV2SpecSideCarsContainersEnvValueFromResourceFieldRef `field:"optional" json:"resourceFieldRef" yaml:"resourceFieldRef"`
	// Experimental.
	SecretKeyRef *TenantV2SpecSideCarsContainersEnvValueFromSecretKeyRef `field:"optional" json:"secretKeyRef" yaml:"secretKeyRef"`
}

// Experimental.
type TenantV2SpecSideCarsContainersEnvValueFromConfigMapKeyRef struct {
	// Experimental.
	Key *string `field:"required" json:"key" yaml:"key"`
	// Experimental.
	Name *string `field:"optional" json:"name" yaml:"name"`
	// Experimental.
	Optional *bool `field:"optional" json:"optional" yaml:"optional"`
}

// Experimental.
type TenantV2SpecSideCarsContainersEnvValueFromFieldRef struct {
	// Experimental.
	FieldPath *string `field:"required" json:"fieldPath" yaml:"fieldPath"`
	// Experimental.
	ApiVersion *string `field:"optional" json:"apiVersion" yaml:"apiVersion"`
}

// Experimental.
type TenantV2SpecSideCarsContainersEnvValueFromResourceFieldRef struct {
	// Experimental.
	Resource *string `field:"required" json:"resource" yaml:"resource"`
	// Experimental.
	ContainerName *string `field:"optional" json:"containerName" yaml:"containerName"`
	// Experimental.
	Divisor TenantV2SpecSideCarsContainersEnvValueFromResourceFieldRefDivisor `field:"optional" json:"divisor" yaml:"divisor"`
}

// Experimental.
type TenantV2SpecSideCarsContainersEnvValueFromResourceFieldRefDivisor interface {
	// Experimental.
	Value() interface{}
}

// The jsii proxy struct for TenantV2SpecSideCarsContainersEnvValueFromResourceFieldRefDivisor
type jsiiProxy_TenantV2SpecSideCarsContainersEnvValueFromResourceFieldRefDivisor struct {
	_ byte // padding
}

func (j *jsiiProxy_TenantV2SpecSideCarsContainersEnvValueFromResourceFieldRefDivisor) Value() interface{} {
	var returns interface{}
	_jsii_.Get(
		j,
		"value",
		&returns,
	)
	return returns
}


// Experimental.
func TenantV2SpecSideCarsContainersEnvValueFromResourceFieldRefDivisor_FromNumber(value *float64) TenantV2SpecSideCarsContainersEnvValueFromResourceFieldRefDivisor {
	_init_.Initialize()

	var returns TenantV2SpecSideCarsContainersEnvValueFromResourceFieldRefDivisor

	_jsii_.StaticInvoke(
		"cdk8s-metaflow.minio.TenantV2SpecSideCarsContainersEnvValueFromResourceFieldRefDivisor",
		"fromNumber",
		[]interface{}{value},
		&returns,
	)

	return returns
}

// Experimental.
func TenantV2SpecSideCarsContainersEnvValueFromResourceFieldRefDivisor_FromString(value *string) TenantV2SpecSideCarsContainersEnvValueFromResourceFieldRefDivisor {
	_init_.Initialize()

	var returns TenantV2SpecSideCarsContainersEnvValueFromResourceFieldRefDivisor

	_jsii_.StaticInvoke(
		"cdk8s-metaflow.minio.TenantV2SpecSideCarsContainersEnvValueFromResourceFieldRefDivisor",
		"fromString",
		[]interface{}{value},
		&returns,
	)

	return returns
}

// Experimental.
type TenantV2SpecSideCarsContainersEnvValueFromSecretKeyRef struct {
	// Experimental.
	Key *string `field:"required" json:"key" yaml:"key"`
	// Experimental.
	Name *string `field:"optional" json:"name" yaml:"name"`
	// Experimental.
	Optional *bool `field:"optional" json:"optional" yaml:"optional"`
}

// Experimental.
type TenantV2SpecSideCarsContainersLifecycle struct {
	// Experimental.
	PostStart *TenantV2SpecSideCarsContainersLifecyclePostStart `field:"optional" json:"postStart" yaml:"postStart"`
	// Experimental.
	PreStop *TenantV2SpecSideCarsContainersLifecyclePreStop `field:"optional" json:"preStop" yaml:"preStop"`
}

// Experimental.
type TenantV2SpecSideCarsContainersLifecyclePostStart struct {
	// Experimental.
	Exec *TenantV2SpecSideCarsContainersLifecyclePostStartExec `field:"optional" json:"exec" yaml:"exec"`
	// Experimental.
	HttpGet *TenantV2SpecSideCarsContainersLifecyclePostStartHttpGet `field:"optional" json:"httpGet" yaml:"httpGet"`
	// Experimental.
	TcpSocket *TenantV2SpecSideCarsContainersLifecyclePostStartTcpSocket `field:"optional" json:"tcpSocket" yaml:"tcpSocket"`
}

// Experimental.
type TenantV2SpecSideCarsContainersLifecyclePostStartExec struct {
	// Experimental.
	Command *[]*string `field:"optional" json:"command" yaml:"command"`
}

// Experimental.
type TenantV2SpecSideCarsContainersLifecyclePostStartHttpGet struct {
	// Experimental.
	Port TenantV2SpecSideCarsContainersLifecyclePostStartHttpGetPort `field:"required" json:"port" yaml:"port"`
	// Experimental.
	Host *string `field:"optional" json:"host" yaml:"host"`
	// Experimental.
	HttpHeaders *[]*TenantV2SpecSideCarsContainersLifecyclePostStartHttpGetHttpHeaders `field:"optional" json:"httpHeaders" yaml:"httpHeaders"`
	// Experimental.
	Path *string `field:"optional" json:"path" yaml:"path"`
	// Experimental.
	Scheme *string `field:"optional" json:"scheme" yaml:"scheme"`
}

// Experimental.
type TenantV2SpecSideCarsContainersLifecyclePostStartHttpGetHttpHeaders struct {
	// Experimental.
	Name *string `field:"required" json:"name" yaml:"name"`
	// Experimental.
	Value *string `field:"required" json:"value" yaml:"value"`
}

// Experimental.
type TenantV2SpecSideCarsContainersLifecyclePostStartHttpGetPort interface {
	// Experimental.
	Value() interface{}
}

// The jsii proxy struct for TenantV2SpecSideCarsContainersLifecyclePostStartHttpGetPort
type jsiiProxy_TenantV2SpecSideCarsContainersLifecyclePostStartHttpGetPort struct {
	_ byte // padding
}

func (j *jsiiProxy_TenantV2SpecSideCarsContainersLifecyclePostStartHttpGetPort) Value() interface{} {
	var returns interface{}
	_jsii_.Get(
		j,
		"value",
		&returns,
	)
	return returns
}


// Experimental.
func TenantV2SpecSideCarsContainersLifecyclePostStartHttpGetPort_FromNumber(value *float64) TenantV2SpecSideCarsContainersLifecyclePostStartHttpGetPort {
	_init_.Initialize()

	var returns TenantV2SpecSideCarsContainersLifecyclePostStartHttpGetPort

	_jsii_.StaticInvoke(
		"cdk8s-metaflow.minio.TenantV2SpecSideCarsContainersLifecyclePostStartHttpGetPort",
		"fromNumber",
		[]interface{}{value},
		&returns,
	)

	return returns
}

// Experimental.
func TenantV2SpecSideCarsContainersLifecyclePostStartHttpGetPort_FromString(value *string) TenantV2SpecSideCarsContainersLifecyclePostStartHttpGetPort {
	_init_.Initialize()

	var returns TenantV2SpecSideCarsContainersLifecyclePostStartHttpGetPort

	_jsii_.StaticInvoke(
		"cdk8s-metaflow.minio.TenantV2SpecSideCarsContainersLifecyclePostStartHttpGetPort",
		"fromString",
		[]interface{}{value},
		&returns,
	)

	return returns
}

// Experimental.
type TenantV2SpecSideCarsContainersLifecyclePostStartTcpSocket struct {
	// Experimental.
	Port TenantV2SpecSideCarsContainersLifecyclePostStartTcpSocketPort `field:"required" json:"port" yaml:"port"`
	// Experimental.
	Host *string `field:"optional" json:"host" yaml:"host"`
}

// Experimental.
type TenantV2SpecSideCarsContainersLifecyclePostStartTcpSocketPort interface {
	// Experimental.
	Value() interface{}
}

// The jsii proxy struct for TenantV2SpecSideCarsContainersLifecyclePostStartTcpSocketPort
type jsiiProxy_TenantV2SpecSideCarsContainersLifecyclePostStartTcpSocketPort struct {
	_ byte // padding
}

func (j *jsiiProxy_TenantV2SpecSideCarsContainersLifecyclePostStartTcpSocketPort) Value() interface{} {
	var returns interface{}
	_jsii_.Get(
		j,
		"value",
		&returns,
	)
	return returns
}


// Experimental.
func TenantV2SpecSideCarsContainersLifecyclePostStartTcpSocketPort_FromNumber(value *float64) TenantV2SpecSideCarsContainersLifecyclePostStartTcpSocketPort {
	_init_.Initialize()

	var returns TenantV2SpecSideCarsContainersLifecyclePostStartTcpSocketPort

	_jsii_.StaticInvoke(
		"cdk8s-metaflow.minio.TenantV2SpecSideCarsContainersLifecyclePostStartTcpSocketPort",
		"fromNumber",
		[]interface{}{value},
		&returns,
	)

	return returns
}

// Experimental.
func TenantV2SpecSideCarsContainersLifecyclePostStartTcpSocketPort_FromString(value *string) TenantV2SpecSideCarsContainersLifecyclePostStartTcpSocketPort {
	_init_.Initialize()

	var returns TenantV2SpecSideCarsContainersLifecyclePostStartTcpSocketPort

	_jsii_.StaticInvoke(
		"cdk8s-metaflow.minio.TenantV2SpecSideCarsContainersLifecyclePostStartTcpSocketPort",
		"fromString",
		[]interface{}{value},
		&returns,
	)

	return returns
}

// Experimental.
type TenantV2SpecSideCarsContainersLifecyclePreStop struct {
	// Experimental.
	Exec *TenantV2SpecSideCarsContainersLifecyclePreStopExec `field:"optional" json:"exec" yaml:"exec"`
	// Experimental.
	HttpGet *TenantV2SpecSideCarsContainersLifecyclePreStopHttpGet `field:"optional" json:"httpGet" yaml:"httpGet"`
	// Experimental.
	TcpSocket *TenantV2SpecSideCarsContainersLifecyclePreStopTcpSocket `field:"optional" json:"tcpSocket" yaml:"tcpSocket"`
}

// Experimental.
type TenantV2SpecSideCarsContainersLifecyclePreStopExec struct {
	// Experimental.
	Command *[]*string `field:"optional" json:"command" yaml:"command"`
}

// Experimental.
type TenantV2SpecSideCarsContainersLifecyclePreStopHttpGet struct {
	// Experimental.
	Port TenantV2SpecSideCarsContainersLifecyclePreStopHttpGetPort `field:"required" json:"port" yaml:"port"`
	// Experimental.
	Host *string `field:"optional" json:"host" yaml:"host"`
	// Experimental.
	HttpHeaders *[]*TenantV2SpecSideCarsContainersLifecyclePreStopHttpGetHttpHeaders `field:"optional" json:"httpHeaders" yaml:"httpHeaders"`
	// Experimental.
	Path *string `field:"optional" json:"path" yaml:"path"`
	// Experimental.
	Scheme *string `field:"optional" json:"scheme" yaml:"scheme"`
}

// Experimental.
type TenantV2SpecSideCarsContainersLifecyclePreStopHttpGetHttpHeaders struct {
	// Experimental.
	Name *string `field:"required" json:"name" yaml:"name"`
	// Experimental.
	Value *string `field:"required" json:"value" yaml:"value"`
}

// Experimental.
type TenantV2SpecSideCarsContainersLifecyclePreStopHttpGetPort interface {
	// Experimental.
	Value() interface{}
}

// The jsii proxy struct for TenantV2SpecSideCarsContainersLifecyclePreStopHttpGetPort
type jsiiProxy_TenantV2SpecSideCarsContainersLifecyclePreStopHttpGetPort struct {
	_ byte // padding
}

func (j *jsiiProxy_TenantV2SpecSideCarsContainersLifecyclePreStopHttpGetPort) Value() interface{} {
	var returns interface{}
	_jsii_.Get(
		j,
		"value",
		&returns,
	)
	return returns
}


// Experimental.
func TenantV2SpecSideCarsContainersLifecyclePreStopHttpGetPort_FromNumber(value *float64) TenantV2SpecSideCarsContainersLifecyclePreStopHttpGetPort {
	_init_.Initialize()

	var returns TenantV2SpecSideCarsContainersLifecyclePreStopHttpGetPort

	_jsii_.StaticInvoke(
		"cdk8s-metaflow.minio.TenantV2SpecSideCarsContainersLifecyclePreStopHttpGetPort",
		"fromNumber",
		[]interface{}{value},
		&returns,
	)

	return returns
}

// Experimental.
func TenantV2SpecSideCarsContainersLifecyclePreStopHttpGetPort_FromString(value *string) TenantV2SpecSideCarsContainersLifecyclePreStopHttpGetPort {
	_init_.Initialize()

	var returns TenantV2SpecSideCarsContainersLifecyclePreStopHttpGetPort

	_jsii_.StaticInvoke(
		"cdk8s-metaflow.minio.TenantV2SpecSideCarsContainersLifecyclePreStopHttpGetPort",
		"fromString",
		[]interface{}{value},
		&returns,
	)

	return returns
}

// Experimental.
type TenantV2SpecSideCarsContainersLifecyclePreStopTcpSocket struct {
	// Experimental.
	Port TenantV2SpecSideCarsContainersLifecyclePreStopTcpSocketPort `field:"required" json:"port" yaml:"port"`
	// Experimental.
	Host *string `field:"optional" json:"host" yaml:"host"`
}

// Experimental.
type TenantV2SpecSideCarsContainersLifecyclePreStopTcpSocketPort interface {
	// Experimental.
	Value() interface{}
}

// The jsii proxy struct for TenantV2SpecSideCarsContainersLifecyclePreStopTcpSocketPort
type jsiiProxy_TenantV2SpecSideCarsContainersLifecyclePreStopTcpSocketPort struct {
	_ byte // padding
}

func (j *jsiiProxy_TenantV2SpecSideCarsContainersLifecyclePreStopTcpSocketPort) Value() interface{} {
	var returns interface{}
	_jsii_.Get(
		j,
		"value",
		&returns,
	)
	return returns
}


// Experimental.
func TenantV2SpecSideCarsContainersLifecyclePreStopTcpSocketPort_FromNumber(value *float64) TenantV2SpecSideCarsContainersLifecyclePreStopTcpSocketPort {
	_init_.Initialize()

	var returns TenantV2SpecSideCarsContainersLifecyclePreStopTcpSocketPort

	_jsii_.StaticInvoke(
		"cdk8s-metaflow.minio.TenantV2SpecSideCarsContainersLifecyclePreStopTcpSocketPort",
		"fromNumber",
		[]interface{}{value},
		&returns,
	)

	return returns
}

// Experimental.
func TenantV2SpecSideCarsContainersLifecyclePreStopTcpSocketPort_FromString(value *string) TenantV2SpecSideCarsContainersLifecyclePreStopTcpSocketPort {
	_init_.Initialize()

	var returns TenantV2SpecSideCarsContainersLifecyclePreStopTcpSocketPort

	_jsii_.StaticInvoke(
		"cdk8s-metaflow.minio.TenantV2SpecSideCarsContainersLifecyclePreStopTcpSocketPort",
		"fromString",
		[]interface{}{value},
		&returns,
	)

	return returns
}

// Experimental.
type TenantV2SpecSideCarsContainersLivenessProbe struct {
	// Experimental.
	Exec *TenantV2SpecSideCarsContainersLivenessProbeExec `field:"optional" json:"exec" yaml:"exec"`
	// Experimental.
	FailureThreshold *float64 `field:"optional" json:"failureThreshold" yaml:"failureThreshold"`
	// Experimental.
	HttpGet *TenantV2SpecSideCarsContainersLivenessProbeHttpGet `field:"optional" json:"httpGet" yaml:"httpGet"`
	// Experimental.
	InitialDelaySeconds *float64 `field:"optional" json:"initialDelaySeconds" yaml:"initialDelaySeconds"`
	// Experimental.
	PeriodSeconds *float64 `field:"optional" json:"periodSeconds" yaml:"periodSeconds"`
	// Experimental.
	SuccessThreshold *float64 `field:"optional" json:"successThreshold" yaml:"successThreshold"`
	// Experimental.
	TcpSocket *TenantV2SpecSideCarsContainersLivenessProbeTcpSocket `field:"optional" json:"tcpSocket" yaml:"tcpSocket"`
	// Experimental.
	TimeoutSeconds *float64 `field:"optional" json:"timeoutSeconds" yaml:"timeoutSeconds"`
}

// Experimental.
type TenantV2SpecSideCarsContainersLivenessProbeExec struct {
	// Experimental.
	Command *[]*string `field:"optional" json:"command" yaml:"command"`
}

// Experimental.
type TenantV2SpecSideCarsContainersLivenessProbeHttpGet struct {
	// Experimental.
	Port TenantV2SpecSideCarsContainersLivenessProbeHttpGetPort `field:"required" json:"port" yaml:"port"`
	// Experimental.
	Host *string `field:"optional" json:"host" yaml:"host"`
	// Experimental.
	HttpHeaders *[]*TenantV2SpecSideCarsContainersLivenessProbeHttpGetHttpHeaders `field:"optional" json:"httpHeaders" yaml:"httpHeaders"`
	// Experimental.
	Path *string `field:"optional" json:"path" yaml:"path"`
	// Experimental.
	Scheme *string `field:"optional" json:"scheme" yaml:"scheme"`
}

// Experimental.
type TenantV2SpecSideCarsContainersLivenessProbeHttpGetHttpHeaders struct {
	// Experimental.
	Name *string `field:"required" json:"name" yaml:"name"`
	// Experimental.
	Value *string `field:"required" json:"value" yaml:"value"`
}

// Experimental.
type TenantV2SpecSideCarsContainersLivenessProbeHttpGetPort interface {
	// Experimental.
	Value() interface{}
}

// The jsii proxy struct for TenantV2SpecSideCarsContainersLivenessProbeHttpGetPort
type jsiiProxy_TenantV2SpecSideCarsContainersLivenessProbeHttpGetPort struct {
	_ byte // padding
}

func (j *jsiiProxy_TenantV2SpecSideCarsContainersLivenessProbeHttpGetPort) Value() interface{} {
	var returns interface{}
	_jsii_.Get(
		j,
		"value",
		&returns,
	)
	return returns
}


// Experimental.
func TenantV2SpecSideCarsContainersLivenessProbeHttpGetPort_FromNumber(value *float64) TenantV2SpecSideCarsContainersLivenessProbeHttpGetPort {
	_init_.Initialize()

	var returns TenantV2SpecSideCarsContainersLivenessProbeHttpGetPort

	_jsii_.StaticInvoke(
		"cdk8s-metaflow.minio.TenantV2SpecSideCarsContainersLivenessProbeHttpGetPort",
		"fromNumber",
		[]interface{}{value},
		&returns,
	)

	return returns
}

// Experimental.
func TenantV2SpecSideCarsContainersLivenessProbeHttpGetPort_FromString(value *string) TenantV2SpecSideCarsContainersLivenessProbeHttpGetPort {
	_init_.Initialize()

	var returns TenantV2SpecSideCarsContainersLivenessProbeHttpGetPort

	_jsii_.StaticInvoke(
		"cdk8s-metaflow.minio.TenantV2SpecSideCarsContainersLivenessProbeHttpGetPort",
		"fromString",
		[]interface{}{value},
		&returns,
	)

	return returns
}

// Experimental.
type TenantV2SpecSideCarsContainersLivenessProbeTcpSocket struct {
	// Experimental.
	Port TenantV2SpecSideCarsContainersLivenessProbeTcpSocketPort `field:"required" json:"port" yaml:"port"`
	// Experimental.
	Host *string `field:"optional" json:"host" yaml:"host"`
}

// Experimental.
type TenantV2SpecSideCarsContainersLivenessProbeTcpSocketPort interface {
	// Experimental.
	Value() interface{}
}

// The jsii proxy struct for TenantV2SpecSideCarsContainersLivenessProbeTcpSocketPort
type jsiiProxy_TenantV2SpecSideCarsContainersLivenessProbeTcpSocketPort struct {
	_ byte // padding
}

func (j *jsiiProxy_TenantV2SpecSideCarsContainersLivenessProbeTcpSocketPort) Value() interface{} {
	var returns interface{}
	_jsii_.Get(
		j,
		"value",
		&returns,
	)
	return returns
}


// Experimental.
func TenantV2SpecSideCarsContainersLivenessProbeTcpSocketPort_FromNumber(value *float64) TenantV2SpecSideCarsContainersLivenessProbeTcpSocketPort {
	_init_.Initialize()

	var returns TenantV2SpecSideCarsContainersLivenessProbeTcpSocketPort

	_jsii_.StaticInvoke(
		"cdk8s-metaflow.minio.TenantV2SpecSideCarsContainersLivenessProbeTcpSocketPort",
		"fromNumber",
		[]interface{}{value},
		&returns,
	)

	return returns
}

// Experimental.
func TenantV2SpecSideCarsContainersLivenessProbeTcpSocketPort_FromString(value *string) TenantV2SpecSideCarsContainersLivenessProbeTcpSocketPort {
	_init_.Initialize()

	var returns TenantV2SpecSideCarsContainersLivenessProbeTcpSocketPort

	_jsii_.StaticInvoke(
		"cdk8s-metaflow.minio.TenantV2SpecSideCarsContainersLivenessProbeTcpSocketPort",
		"fromString",
		[]interface{}{value},
		&returns,
	)

	return returns
}

// Experimental.
type TenantV2SpecSideCarsContainersPorts struct {
	// Experimental.
	ContainerPort *float64 `field:"required" json:"containerPort" yaml:"containerPort"`
	// Experimental.
	HostIp *string `field:"optional" json:"hostIp" yaml:"hostIp"`
	// Experimental.
	HostPort *float64 `field:"optional" json:"hostPort" yaml:"hostPort"`
	// Experimental.
	Name *string `field:"optional" json:"name" yaml:"name"`
	// Experimental.
	Protocol *string `field:"optional" json:"protocol" yaml:"protocol"`
}

// Experimental.
type TenantV2SpecSideCarsContainersReadinessProbe struct {
	// Experimental.
	Exec *TenantV2SpecSideCarsContainersReadinessProbeExec `field:"optional" json:"exec" yaml:"exec"`
	// Experimental.
	FailureThreshold *float64 `field:"optional" json:"failureThreshold" yaml:"failureThreshold"`
	// Experimental.
	HttpGet *TenantV2SpecSideCarsContainersReadinessProbeHttpGet `field:"optional" json:"httpGet" yaml:"httpGet"`
	// Experimental.
	InitialDelaySeconds *float64 `field:"optional" json:"initialDelaySeconds" yaml:"initialDelaySeconds"`
	// Experimental.
	PeriodSeconds *float64 `field:"optional" json:"periodSeconds" yaml:"periodSeconds"`
	// Experimental.
	SuccessThreshold *float64 `field:"optional" json:"successThreshold" yaml:"successThreshold"`
	// Experimental.
	TcpSocket *TenantV2SpecSideCarsContainersReadinessProbeTcpSocket `field:"optional" json:"tcpSocket" yaml:"tcpSocket"`
	// Experimental.
	TimeoutSeconds *float64 `field:"optional" json:"timeoutSeconds" yaml:"timeoutSeconds"`
}

// Experimental.
type TenantV2SpecSideCarsContainersReadinessProbeExec struct {
	// Experimental.
	Command *[]*string `field:"optional" json:"command" yaml:"command"`
}

// Experimental.
type TenantV2SpecSideCarsContainersReadinessProbeHttpGet struct {
	// Experimental.
	Port TenantV2SpecSideCarsContainersReadinessProbeHttpGetPort `field:"required" json:"port" yaml:"port"`
	// Experimental.
	Host *string `field:"optional" json:"host" yaml:"host"`
	// Experimental.
	HttpHeaders *[]*TenantV2SpecSideCarsContainersReadinessProbeHttpGetHttpHeaders `field:"optional" json:"httpHeaders" yaml:"httpHeaders"`
	// Experimental.
	Path *string `field:"optional" json:"path" yaml:"path"`
	// Experimental.
	Scheme *string `field:"optional" json:"scheme" yaml:"scheme"`
}

// Experimental.
type TenantV2SpecSideCarsContainersReadinessProbeHttpGetHttpHeaders struct {
	// Experimental.
	Name *string `field:"required" json:"name" yaml:"name"`
	// Experimental.
	Value *string `field:"required" json:"value" yaml:"value"`
}

// Experimental.
type TenantV2SpecSideCarsContainersReadinessProbeHttpGetPort interface {
	// Experimental.
	Value() interface{}
}

// The jsii proxy struct for TenantV2SpecSideCarsContainersReadinessProbeHttpGetPort
type jsiiProxy_TenantV2SpecSideCarsContainersReadinessProbeHttpGetPort struct {
	_ byte // padding
}

func (j *jsiiProxy_TenantV2SpecSideCarsContainersReadinessProbeHttpGetPort) Value() interface{} {
	var returns interface{}
	_jsii_.Get(
		j,
		"value",
		&returns,
	)
	return returns
}


// Experimental.
func TenantV2SpecSideCarsContainersReadinessProbeHttpGetPort_FromNumber(value *float64) TenantV2SpecSideCarsContainersReadinessProbeHttpGetPort {
	_init_.Initialize()

	var returns TenantV2SpecSideCarsContainersReadinessProbeHttpGetPort

	_jsii_.StaticInvoke(
		"cdk8s-metaflow.minio.TenantV2SpecSideCarsContainersReadinessProbeHttpGetPort",
		"fromNumber",
		[]interface{}{value},
		&returns,
	)

	return returns
}

// Experimental.
func TenantV2SpecSideCarsContainersReadinessProbeHttpGetPort_FromString(value *string) TenantV2SpecSideCarsContainersReadinessProbeHttpGetPort {
	_init_.Initialize()

	var returns TenantV2SpecSideCarsContainersReadinessProbeHttpGetPort

	_jsii_.StaticInvoke(
		"cdk8s-metaflow.minio.TenantV2SpecSideCarsContainersReadinessProbeHttpGetPort",
		"fromString",
		[]interface{}{value},
		&returns,
	)

	return returns
}

// Experimental.
type TenantV2SpecSideCarsContainersReadinessProbeTcpSocket struct {
	// Experimental.
	Port TenantV2SpecSideCarsContainersReadinessProbeTcpSocketPort `field:"required" json:"port" yaml:"port"`
	// Experimental.
	Host *string `field:"optional" json:"host" yaml:"host"`
}

// Experimental.
type TenantV2SpecSideCarsContainersReadinessProbeTcpSocketPort interface {
	// Experimental.
	Value() interface{}
}

// The jsii proxy struct for TenantV2SpecSideCarsContainersReadinessProbeTcpSocketPort
type jsiiProxy_TenantV2SpecSideCarsContainersReadinessProbeTcpSocketPort struct {
	_ byte // padding
}

func (j *jsiiProxy_TenantV2SpecSideCarsContainersReadinessProbeTcpSocketPort) Value() interface{} {
	var returns interface{}
	_jsii_.Get(
		j,
		"value",
		&returns,
	)
	return returns
}


// Experimental.
func TenantV2SpecSideCarsContainersReadinessProbeTcpSocketPort_FromNumber(value *float64) TenantV2SpecSideCarsContainersReadinessProbeTcpSocketPort {
	_init_.Initialize()

	var returns TenantV2SpecSideCarsContainersReadinessProbeTcpSocketPort

	_jsii_.StaticInvoke(
		"cdk8s-metaflow.minio.TenantV2SpecSideCarsContainersReadinessProbeTcpSocketPort",
		"fromNumber",
		[]interface{}{value},
		&returns,
	)

	return returns
}

// Experimental.
func TenantV2SpecSideCarsContainersReadinessProbeTcpSocketPort_FromString(value *string) TenantV2SpecSideCarsContainersReadinessProbeTcpSocketPort {
	_init_.Initialize()

	var returns TenantV2SpecSideCarsContainersReadinessProbeTcpSocketPort

	_jsii_.StaticInvoke(
		"cdk8s-metaflow.minio.TenantV2SpecSideCarsContainersReadinessProbeTcpSocketPort",
		"fromString",
		[]interface{}{value},
		&returns,
	)

	return returns
}

// Experimental.
type TenantV2SpecSideCarsContainersResources struct {
	// Experimental.
	Limits *map[string]TenantV2SpecSideCarsContainersResourcesLimits `field:"optional" json:"limits" yaml:"limits"`
	// Experimental.
	Requests *map[string]TenantV2SpecSideCarsContainersResourcesRequests `field:"optional" json:"requests" yaml:"requests"`
}

// Experimental.
type TenantV2SpecSideCarsContainersResourcesLimits interface {
	// Experimental.
	Value() interface{}
}

// The jsii proxy struct for TenantV2SpecSideCarsContainersResourcesLimits
type jsiiProxy_TenantV2SpecSideCarsContainersResourcesLimits struct {
	_ byte // padding
}

func (j *jsiiProxy_TenantV2SpecSideCarsContainersResourcesLimits) Value() interface{} {
	var returns interface{}
	_jsii_.Get(
		j,
		"value",
		&returns,
	)
	return returns
}


// Experimental.
func TenantV2SpecSideCarsContainersResourcesLimits_FromNumber(value *float64) TenantV2SpecSideCarsContainersResourcesLimits {
	_init_.Initialize()

	var returns TenantV2SpecSideCarsContainersResourcesLimits

	_jsii_.StaticInvoke(
		"cdk8s-metaflow.minio.TenantV2SpecSideCarsContainersResourcesLimits",
		"fromNumber",
		[]interface{}{value},
		&returns,
	)

	return returns
}

// Experimental.
func TenantV2SpecSideCarsContainersResourcesLimits_FromString(value *string) TenantV2SpecSideCarsContainersResourcesLimits {
	_init_.Initialize()

	var returns TenantV2SpecSideCarsContainersResourcesLimits

	_jsii_.StaticInvoke(
		"cdk8s-metaflow.minio.TenantV2SpecSideCarsContainersResourcesLimits",
		"fromString",
		[]interface{}{value},
		&returns,
	)

	return returns
}

// Experimental.
type TenantV2SpecSideCarsContainersResourcesRequests interface {
	// Experimental.
	Value() interface{}
}

// The jsii proxy struct for TenantV2SpecSideCarsContainersResourcesRequests
type jsiiProxy_TenantV2SpecSideCarsContainersResourcesRequests struct {
	_ byte // padding
}

func (j *jsiiProxy_TenantV2SpecSideCarsContainersResourcesRequests) Value() interface{} {
	var returns interface{}
	_jsii_.Get(
		j,
		"value",
		&returns,
	)
	return returns
}


// Experimental.
func TenantV2SpecSideCarsContainersResourcesRequests_FromNumber(value *float64) TenantV2SpecSideCarsContainersResourcesRequests {
	_init_.Initialize()

	var returns TenantV2SpecSideCarsContainersResourcesRequests

	_jsii_.StaticInvoke(
		"cdk8s-metaflow.minio.TenantV2SpecSideCarsContainersResourcesRequests",
		"fromNumber",
		[]interface{}{value},
		&returns,
	)

	return returns
}

// Experimental.
func TenantV2SpecSideCarsContainersResourcesRequests_FromString(value *string) TenantV2SpecSideCarsContainersResourcesRequests {
	_init_.Initialize()

	var returns TenantV2SpecSideCarsContainersResourcesRequests

	_jsii_.StaticInvoke(
		"cdk8s-metaflow.minio.TenantV2SpecSideCarsContainersResourcesRequests",
		"fromString",
		[]interface{}{value},
		&returns,
	)

	return returns
}

// Experimental.
type TenantV2SpecSideCarsContainersSecurityContext struct {
	// Experimental.
	AllowPrivilegeEscalation *bool `field:"optional" json:"allowPrivilegeEscalation" yaml:"allowPrivilegeEscalation"`
	// Experimental.
	Capabilities *TenantV2SpecSideCarsContainersSecurityContextCapabilities `field:"optional" json:"capabilities" yaml:"capabilities"`
	// Experimental.
	Privileged *bool `field:"optional" json:"privileged" yaml:"privileged"`
	// Experimental.
	ProcMount *string `field:"optional" json:"procMount" yaml:"procMount"`
	// Experimental.
	ReadOnlyRootFilesystem *bool `field:"optional" json:"readOnlyRootFilesystem" yaml:"readOnlyRootFilesystem"`
	// Experimental.
	RunAsGroup *float64 `field:"optional" json:"runAsGroup" yaml:"runAsGroup"`
	// Experimental.
	RunAsNonRoot *bool `field:"optional" json:"runAsNonRoot" yaml:"runAsNonRoot"`
	// Experimental.
	RunAsUser *float64 `field:"optional" json:"runAsUser" yaml:"runAsUser"`
	// Experimental.
	SeccompProfile *TenantV2SpecSideCarsContainersSecurityContextSeccompProfile `field:"optional" json:"seccompProfile" yaml:"seccompProfile"`
	// Experimental.
	SeLinuxOptions *TenantV2SpecSideCarsContainersSecurityContextSeLinuxOptions `field:"optional" json:"seLinuxOptions" yaml:"seLinuxOptions"`
	// Experimental.
	WindowsOptions *TenantV2SpecSideCarsContainersSecurityContextWindowsOptions `field:"optional" json:"windowsOptions" yaml:"windowsOptions"`
}

// Experimental.
type TenantV2SpecSideCarsContainersSecurityContextCapabilities struct {
	// Experimental.
	Add *[]*string `field:"optional" json:"add" yaml:"add"`
	// Experimental.
	Drop *[]*string `field:"optional" json:"drop" yaml:"drop"`
}

// Experimental.
type TenantV2SpecSideCarsContainersSecurityContextSeLinuxOptions struct {
	// Experimental.
	Level *string `field:"optional" json:"level" yaml:"level"`
	// Experimental.
	Role *string `field:"optional" json:"role" yaml:"role"`
	// Experimental.
	Type *string `field:"optional" json:"type" yaml:"type"`
	// Experimental.
	User *string `field:"optional" json:"user" yaml:"user"`
}

// Experimental.
type TenantV2SpecSideCarsContainersSecurityContextSeccompProfile struct {
	// Experimental.
	Type *string `field:"required" json:"type" yaml:"type"`
	// Experimental.
	LocalhostProfile *string `field:"optional" json:"localhostProfile" yaml:"localhostProfile"`
}

// Experimental.
type TenantV2SpecSideCarsContainersSecurityContextWindowsOptions struct {
	// Experimental.
	GmsaCredentialSpec *string `field:"optional" json:"gmsaCredentialSpec" yaml:"gmsaCredentialSpec"`
	// Experimental.
	GmsaCredentialSpecName *string `field:"optional" json:"gmsaCredentialSpecName" yaml:"gmsaCredentialSpecName"`
	// Experimental.
	RunAsUserName *string `field:"optional" json:"runAsUserName" yaml:"runAsUserName"`
}

// Experimental.
type TenantV2SpecSideCarsContainersStartupProbe struct {
	// Experimental.
	Exec *TenantV2SpecSideCarsContainersStartupProbeExec `field:"optional" json:"exec" yaml:"exec"`
	// Experimental.
	FailureThreshold *float64 `field:"optional" json:"failureThreshold" yaml:"failureThreshold"`
	// Experimental.
	HttpGet *TenantV2SpecSideCarsContainersStartupProbeHttpGet `field:"optional" json:"httpGet" yaml:"httpGet"`
	// Experimental.
	InitialDelaySeconds *float64 `field:"optional" json:"initialDelaySeconds" yaml:"initialDelaySeconds"`
	// Experimental.
	PeriodSeconds *float64 `field:"optional" json:"periodSeconds" yaml:"periodSeconds"`
	// Experimental.
	SuccessThreshold *float64 `field:"optional" json:"successThreshold" yaml:"successThreshold"`
	// Experimental.
	TcpSocket *TenantV2SpecSideCarsContainersStartupProbeTcpSocket `field:"optional" json:"tcpSocket" yaml:"tcpSocket"`
	// Experimental.
	TimeoutSeconds *float64 `field:"optional" json:"timeoutSeconds" yaml:"timeoutSeconds"`
}

// Experimental.
type TenantV2SpecSideCarsContainersStartupProbeExec struct {
	// Experimental.
	Command *[]*string `field:"optional" json:"command" yaml:"command"`
}

// Experimental.
type TenantV2SpecSideCarsContainersStartupProbeHttpGet struct {
	// Experimental.
	Port TenantV2SpecSideCarsContainersStartupProbeHttpGetPort `field:"required" json:"port" yaml:"port"`
	// Experimental.
	Host *string `field:"optional" json:"host" yaml:"host"`
	// Experimental.
	HttpHeaders *[]*TenantV2SpecSideCarsContainersStartupProbeHttpGetHttpHeaders `field:"optional" json:"httpHeaders" yaml:"httpHeaders"`
	// Experimental.
	Path *string `field:"optional" json:"path" yaml:"path"`
	// Experimental.
	Scheme *string `field:"optional" json:"scheme" yaml:"scheme"`
}

// Experimental.
type TenantV2SpecSideCarsContainersStartupProbeHttpGetHttpHeaders struct {
	// Experimental.
	Name *string `field:"required" json:"name" yaml:"name"`
	// Experimental.
	Value *string `field:"required" json:"value" yaml:"value"`
}

// Experimental.
type TenantV2SpecSideCarsContainersStartupProbeHttpGetPort interface {
	// Experimental.
	Value() interface{}
}

// The jsii proxy struct for TenantV2SpecSideCarsContainersStartupProbeHttpGetPort
type jsiiProxy_TenantV2SpecSideCarsContainersStartupProbeHttpGetPort struct {
	_ byte // padding
}

func (j *jsiiProxy_TenantV2SpecSideCarsContainersStartupProbeHttpGetPort) Value() interface{} {
	var returns interface{}
	_jsii_.Get(
		j,
		"value",
		&returns,
	)
	return returns
}


// Experimental.
func TenantV2SpecSideCarsContainersStartupProbeHttpGetPort_FromNumber(value *float64) TenantV2SpecSideCarsContainersStartupProbeHttpGetPort {
	_init_.Initialize()

	var returns TenantV2SpecSideCarsContainersStartupProbeHttpGetPort

	_jsii_.StaticInvoke(
		"cdk8s-metaflow.minio.TenantV2SpecSideCarsContainersStartupProbeHttpGetPort",
		"fromNumber",
		[]interface{}{value},
		&returns,
	)

	return returns
}

// Experimental.
func TenantV2SpecSideCarsContainersStartupProbeHttpGetPort_FromString(value *string) TenantV2SpecSideCarsContainersStartupProbeHttpGetPort {
	_init_.Initialize()

	var returns TenantV2SpecSideCarsContainersStartupProbeHttpGetPort

	_jsii_.StaticInvoke(
		"cdk8s-metaflow.minio.TenantV2SpecSideCarsContainersStartupProbeHttpGetPort",
		"fromString",
		[]interface{}{value},
		&returns,
	)

	return returns
}

// Experimental.
type TenantV2SpecSideCarsContainersStartupProbeTcpSocket struct {
	// Experimental.
	Port TenantV2SpecSideCarsContainersStartupProbeTcpSocketPort `field:"required" json:"port" yaml:"port"`
	// Experimental.
	Host *string `field:"optional" json:"host" yaml:"host"`
}

// Experimental.
type TenantV2SpecSideCarsContainersStartupProbeTcpSocketPort interface {
	// Experimental.
	Value() interface{}
}

// The jsii proxy struct for TenantV2SpecSideCarsContainersStartupProbeTcpSocketPort
type jsiiProxy_TenantV2SpecSideCarsContainersStartupProbeTcpSocketPort struct {
	_ byte // padding
}

func (j *jsiiProxy_TenantV2SpecSideCarsContainersStartupProbeTcpSocketPort) Value() interface{} {
	var returns interface{}
	_jsii_.Get(
		j,
		"value",
		&returns,
	)
	return returns
}


// Experimental.
func TenantV2SpecSideCarsContainersStartupProbeTcpSocketPort_FromNumber(value *float64) TenantV2SpecSideCarsContainersStartupProbeTcpSocketPort {
	_init_.Initialize()

	var returns TenantV2SpecSideCarsContainersStartupProbeTcpSocketPort

	_jsii_.StaticInvoke(
		"cdk8s-metaflow.minio.TenantV2SpecSideCarsContainersStartupProbeTcpSocketPort",
		"fromNumber",
		[]interface{}{value},
		&returns,
	)

	return returns
}

// Experimental.
func TenantV2SpecSideCarsContainersStartupProbeTcpSocketPort_FromString(value *string) TenantV2SpecSideCarsContainersStartupProbeTcpSocketPort {
	_init_.Initialize()

	var returns TenantV2SpecSideCarsContainersStartupProbeTcpSocketPort

	_jsii_.StaticInvoke(
		"cdk8s-metaflow.minio.TenantV2SpecSideCarsContainersStartupProbeTcpSocketPort",
		"fromString",
		[]interface{}{value},
		&returns,
	)

	return returns
}

// Experimental.
type TenantV2SpecSideCarsContainersVolumeDevices struct {
	// Experimental.
	DevicePath *string `field:"required" json:"devicePath" yaml:"devicePath"`
	// Experimental.
	Name *string `field:"required" json:"name" yaml:"name"`
}

// Experimental.
type TenantV2SpecSideCarsContainersVolumeMounts struct {
	// Experimental.
	MountPath *string `field:"required" json:"mountPath" yaml:"mountPath"`
	// Experimental.
	Name *string `field:"required" json:"name" yaml:"name"`
	// Experimental.
	MountPropagation *string `field:"optional" json:"mountPropagation" yaml:"mountPropagation"`
	// Experimental.
	ReadOnly *bool `field:"optional" json:"readOnly" yaml:"readOnly"`
	// Experimental.
	SubPath *string `field:"optional" json:"subPath" yaml:"subPath"`
	// Experimental.
	SubPathExpr *string `field:"optional" json:"subPathExpr" yaml:"subPathExpr"`
}

// Experimental.
type TenantV2SpecSideCarsVolumeClaimTemplates struct {
	// Experimental.
	ApiVersion *string `field:"optional" json:"apiVersion" yaml:"apiVersion"`
	// Experimental.
	Kind *string `field:"optional" json:"kind" yaml:"kind"`
	// Experimental.
	Metadata *TenantV2SpecSideCarsVolumeClaimTemplatesMetadata `field:"optional" json:"metadata" yaml:"metadata"`
	// Experimental.
	Spec *TenantV2SpecSideCarsVolumeClaimTemplatesSpec `field:"optional" json:"spec" yaml:"spec"`
	// Experimental.
	Status *TenantV2SpecSideCarsVolumeClaimTemplatesStatus `field:"optional" json:"status" yaml:"status"`
}

// Experimental.
type TenantV2SpecSideCarsVolumeClaimTemplatesMetadata struct {
	// Experimental.
	Annotations *map[string]*string `field:"optional" json:"annotations" yaml:"annotations"`
	// Experimental.
	Finalizers *[]*string `field:"optional" json:"finalizers" yaml:"finalizers"`
	// Experimental.
	Labels *map[string]*string `field:"optional" json:"labels" yaml:"labels"`
	// Experimental.
	Name *string `field:"optional" json:"name" yaml:"name"`
	// Experimental.
	Namespace *string `field:"optional" json:"namespace" yaml:"namespace"`
}

// Experimental.
type TenantV2SpecSideCarsVolumeClaimTemplatesSpec struct {
	// Experimental.
	AccessModes *[]*string `field:"optional" json:"accessModes" yaml:"accessModes"`
	// Experimental.
	DataSource *TenantV2SpecSideCarsVolumeClaimTemplatesSpecDataSource `field:"optional" json:"dataSource" yaml:"dataSource"`
	// Experimental.
	Resources *TenantV2SpecSideCarsVolumeClaimTemplatesSpecResources `field:"optional" json:"resources" yaml:"resources"`
	// Experimental.
	Selector *TenantV2SpecSideCarsVolumeClaimTemplatesSpecSelector `field:"optional" json:"selector" yaml:"selector"`
	// Experimental.
	StorageClassName *string `field:"optional" json:"storageClassName" yaml:"storageClassName"`
	// Experimental.
	VolumeMode *string `field:"optional" json:"volumeMode" yaml:"volumeMode"`
	// Experimental.
	VolumeName *string `field:"optional" json:"volumeName" yaml:"volumeName"`
}

// Experimental.
type TenantV2SpecSideCarsVolumeClaimTemplatesSpecDataSource struct {
	// Experimental.
	Kind *string `field:"required" json:"kind" yaml:"kind"`
	// Experimental.
	Name *string `field:"required" json:"name" yaml:"name"`
	// Experimental.
	ApiGroup *string `field:"optional" json:"apiGroup" yaml:"apiGroup"`
}

// Experimental.
type TenantV2SpecSideCarsVolumeClaimTemplatesSpecResources struct {
	// Experimental.
	Limits *map[string]TenantV2SpecSideCarsVolumeClaimTemplatesSpecResourcesLimits `field:"optional" json:"limits" yaml:"limits"`
	// Experimental.
	Requests *map[string]TenantV2SpecSideCarsVolumeClaimTemplatesSpecResourcesRequests `field:"optional" json:"requests" yaml:"requests"`
}

// Experimental.
type TenantV2SpecSideCarsVolumeClaimTemplatesSpecResourcesLimits interface {
	// Experimental.
	Value() interface{}
}

// The jsii proxy struct for TenantV2SpecSideCarsVolumeClaimTemplatesSpecResourcesLimits
type jsiiProxy_TenantV2SpecSideCarsVolumeClaimTemplatesSpecResourcesLimits struct {
	_ byte // padding
}

func (j *jsiiProxy_TenantV2SpecSideCarsVolumeClaimTemplatesSpecResourcesLimits) Value() interface{} {
	var returns interface{}
	_jsii_.Get(
		j,
		"value",
		&returns,
	)
	return returns
}


// Experimental.
func TenantV2SpecSideCarsVolumeClaimTemplatesSpecResourcesLimits_FromNumber(value *float64) TenantV2SpecSideCarsVolumeClaimTemplatesSpecResourcesLimits {
	_init_.Initialize()

	var returns TenantV2SpecSideCarsVolumeClaimTemplatesSpecResourcesLimits

	_jsii_.StaticInvoke(
		"cdk8s-metaflow.minio.TenantV2SpecSideCarsVolumeClaimTemplatesSpecResourcesLimits",
		"fromNumber",
		[]interface{}{value},
		&returns,
	)

	return returns
}

// Experimental.
func TenantV2SpecSideCarsVolumeClaimTemplatesSpecResourcesLimits_FromString(value *string) TenantV2SpecSideCarsVolumeClaimTemplatesSpecResourcesLimits {
	_init_.Initialize()

	var returns TenantV2SpecSideCarsVolumeClaimTemplatesSpecResourcesLimits

	_jsii_.StaticInvoke(
		"cdk8s-metaflow.minio.TenantV2SpecSideCarsVolumeClaimTemplatesSpecResourcesLimits",
		"fromString",
		[]interface{}{value},
		&returns,
	)

	return returns
}

// Experimental.
type TenantV2SpecSideCarsVolumeClaimTemplatesSpecResourcesRequests interface {
	// Experimental.
	Value() interface{}
}

// The jsii proxy struct for TenantV2SpecSideCarsVolumeClaimTemplatesSpecResourcesRequests
type jsiiProxy_TenantV2SpecSideCarsVolumeClaimTemplatesSpecResourcesRequests struct {
	_ byte // padding
}

func (j *jsiiProxy_TenantV2SpecSideCarsVolumeClaimTemplatesSpecResourcesRequests) Value() interface{} {
	var returns interface{}
	_jsii_.Get(
		j,
		"value",
		&returns,
	)
	return returns
}


// Experimental.
func TenantV2SpecSideCarsVolumeClaimTemplatesSpecResourcesRequests_FromNumber(value *float64) TenantV2SpecSideCarsVolumeClaimTemplatesSpecResourcesRequests {
	_init_.Initialize()

	var returns TenantV2SpecSideCarsVolumeClaimTemplatesSpecResourcesRequests

	_jsii_.StaticInvoke(
		"cdk8s-metaflow.minio.TenantV2SpecSideCarsVolumeClaimTemplatesSpecResourcesRequests",
		"fromNumber",
		[]interface{}{value},
		&returns,
	)

	return returns
}

// Experimental.
func TenantV2SpecSideCarsVolumeClaimTemplatesSpecResourcesRequests_FromString(value *string) TenantV2SpecSideCarsVolumeClaimTemplatesSpecResourcesRequests {
	_init_.Initialize()

	var returns TenantV2SpecSideCarsVolumeClaimTemplatesSpecResourcesRequests

	_jsii_.StaticInvoke(
		"cdk8s-metaflow.minio.TenantV2SpecSideCarsVolumeClaimTemplatesSpecResourcesRequests",
		"fromString",
		[]interface{}{value},
		&returns,
	)

	return returns
}

// Experimental.
type TenantV2SpecSideCarsVolumeClaimTemplatesSpecSelector struct {
	// Experimental.
	MatchExpressions *[]*TenantV2SpecSideCarsVolumeClaimTemplatesSpecSelectorMatchExpressions `field:"optional" json:"matchExpressions" yaml:"matchExpressions"`
	// Experimental.
	MatchLabels *map[string]*string `field:"optional" json:"matchLabels" yaml:"matchLabels"`
}

// Experimental.
type TenantV2SpecSideCarsVolumeClaimTemplatesSpecSelectorMatchExpressions struct {
	// Experimental.
	Key *string `field:"required" json:"key" yaml:"key"`
	// Experimental.
	Operator *string `field:"required" json:"operator" yaml:"operator"`
	// Experimental.
	Values *[]*string `field:"optional" json:"values" yaml:"values"`
}

// Experimental.
type TenantV2SpecSideCarsVolumeClaimTemplatesStatus struct {
	// Experimental.
	AccessModes *[]*string `field:"optional" json:"accessModes" yaml:"accessModes"`
	// Experimental.
	Capacity *map[string]TenantV2SpecSideCarsVolumeClaimTemplatesStatusCapacity `field:"optional" json:"capacity" yaml:"capacity"`
	// Experimental.
	Conditions *[]*TenantV2SpecSideCarsVolumeClaimTemplatesStatusConditions `field:"optional" json:"conditions" yaml:"conditions"`
	// Experimental.
	Phase *string `field:"optional" json:"phase" yaml:"phase"`
}

// Experimental.
type TenantV2SpecSideCarsVolumeClaimTemplatesStatusCapacity interface {
	// Experimental.
	Value() interface{}
}

// The jsii proxy struct for TenantV2SpecSideCarsVolumeClaimTemplatesStatusCapacity
type jsiiProxy_TenantV2SpecSideCarsVolumeClaimTemplatesStatusCapacity struct {
	_ byte // padding
}

func (j *jsiiProxy_TenantV2SpecSideCarsVolumeClaimTemplatesStatusCapacity) Value() interface{} {
	var returns interface{}
	_jsii_.Get(
		j,
		"value",
		&returns,
	)
	return returns
}


// Experimental.
func TenantV2SpecSideCarsVolumeClaimTemplatesStatusCapacity_FromNumber(value *float64) TenantV2SpecSideCarsVolumeClaimTemplatesStatusCapacity {
	_init_.Initialize()

	var returns TenantV2SpecSideCarsVolumeClaimTemplatesStatusCapacity

	_jsii_.StaticInvoke(
		"cdk8s-metaflow.minio.TenantV2SpecSideCarsVolumeClaimTemplatesStatusCapacity",
		"fromNumber",
		[]interface{}{value},
		&returns,
	)

	return returns
}

// Experimental.
func TenantV2SpecSideCarsVolumeClaimTemplatesStatusCapacity_FromString(value *string) TenantV2SpecSideCarsVolumeClaimTemplatesStatusCapacity {
	_init_.Initialize()

	var returns TenantV2SpecSideCarsVolumeClaimTemplatesStatusCapacity

	_jsii_.StaticInvoke(
		"cdk8s-metaflow.minio.TenantV2SpecSideCarsVolumeClaimTemplatesStatusCapacity",
		"fromString",
		[]interface{}{value},
		&returns,
	)

	return returns
}

// Experimental.
type TenantV2SpecSideCarsVolumeClaimTemplatesStatusConditions struct {
	// Experimental.
	Status *string `field:"required" json:"status" yaml:"status"`
	// Experimental.
	Type *string `field:"required" json:"type" yaml:"type"`
	// Experimental.
	LastProbeTime *time.Time `field:"optional" json:"lastProbeTime" yaml:"lastProbeTime"`
	// Experimental.
	LastTransitionTime *time.Time `field:"optional" json:"lastTransitionTime" yaml:"lastTransitionTime"`
	// Experimental.
	Message *string `field:"optional" json:"message" yaml:"message"`
	// Experimental.
	Reason *string `field:"optional" json:"reason" yaml:"reason"`
}

// Experimental.
type TenantV2SpecSideCarsVolumes struct {
	// Experimental.
	Name *string `field:"required" json:"name" yaml:"name"`
	// Experimental.
	AwsElasticBlockStore *TenantV2SpecSideCarsVolumesAwsElasticBlockStore `field:"optional" json:"awsElasticBlockStore" yaml:"awsElasticBlockStore"`
	// Experimental.
	AzureDisk *TenantV2SpecSideCarsVolumesAzureDisk `field:"optional" json:"azureDisk" yaml:"azureDisk"`
	// Experimental.
	AzureFile *TenantV2SpecSideCarsVolumesAzureFile `field:"optional" json:"azureFile" yaml:"azureFile"`
	// Experimental.
	Cephfs *TenantV2SpecSideCarsVolumesCephfs `field:"optional" json:"cephfs" yaml:"cephfs"`
	// Experimental.
	Cinder *TenantV2SpecSideCarsVolumesCinder `field:"optional" json:"cinder" yaml:"cinder"`
	// Experimental.
	ConfigMap *TenantV2SpecSideCarsVolumesConfigMap `field:"optional" json:"configMap" yaml:"configMap"`
	// Experimental.
	Csi *TenantV2SpecSideCarsVolumesCsi `field:"optional" json:"csi" yaml:"csi"`
	// Experimental.
	DownwardApi *TenantV2SpecSideCarsVolumesDownwardApi `field:"optional" json:"downwardApi" yaml:"downwardApi"`
	// Experimental.
	EmptyDir *TenantV2SpecSideCarsVolumesEmptyDir `field:"optional" json:"emptyDir" yaml:"emptyDir"`
	// Experimental.
	Ephemeral *TenantV2SpecSideCarsVolumesEphemeral `field:"optional" json:"ephemeral" yaml:"ephemeral"`
	// Experimental.
	Fc *TenantV2SpecSideCarsVolumesFc `field:"optional" json:"fc" yaml:"fc"`
	// Experimental.
	FlexVolume *TenantV2SpecSideCarsVolumesFlexVolume `field:"optional" json:"flexVolume" yaml:"flexVolume"`
	// Experimental.
	Flocker *TenantV2SpecSideCarsVolumesFlocker `field:"optional" json:"flocker" yaml:"flocker"`
	// Experimental.
	GcePersistentDisk *TenantV2SpecSideCarsVolumesGcePersistentDisk `field:"optional" json:"gcePersistentDisk" yaml:"gcePersistentDisk"`
	// Experimental.
	GitRepo *TenantV2SpecSideCarsVolumesGitRepo `field:"optional" json:"gitRepo" yaml:"gitRepo"`
	// Experimental.
	Glusterfs *TenantV2SpecSideCarsVolumesGlusterfs `field:"optional" json:"glusterfs" yaml:"glusterfs"`
	// Experimental.
	HostPath *TenantV2SpecSideCarsVolumesHostPath `field:"optional" json:"hostPath" yaml:"hostPath"`
	// Experimental.
	Iscsi *TenantV2SpecSideCarsVolumesIscsi `field:"optional" json:"iscsi" yaml:"iscsi"`
	// Experimental.
	Nfs *TenantV2SpecSideCarsVolumesNfs `field:"optional" json:"nfs" yaml:"nfs"`
	// Experimental.
	PersistentVolumeClaim *TenantV2SpecSideCarsVolumesPersistentVolumeClaim `field:"optional" json:"persistentVolumeClaim" yaml:"persistentVolumeClaim"`
	// Experimental.
	PhotonPersistentDisk *TenantV2SpecSideCarsVolumesPhotonPersistentDisk `field:"optional" json:"photonPersistentDisk" yaml:"photonPersistentDisk"`
	// Experimental.
	PortworxVolume *TenantV2SpecSideCarsVolumesPortworxVolume `field:"optional" json:"portworxVolume" yaml:"portworxVolume"`
	// Experimental.
	Projected *TenantV2SpecSideCarsVolumesProjected `field:"optional" json:"projected" yaml:"projected"`
	// Experimental.
	Quobyte *TenantV2SpecSideCarsVolumesQuobyte `field:"optional" json:"quobyte" yaml:"quobyte"`
	// Experimental.
	Rbd *TenantV2SpecSideCarsVolumesRbd `field:"optional" json:"rbd" yaml:"rbd"`
	// Experimental.
	ScaleIo *TenantV2SpecSideCarsVolumesScaleIo `field:"optional" json:"scaleIo" yaml:"scaleIo"`
	// Experimental.
	Secret *TenantV2SpecSideCarsVolumesSecret `field:"optional" json:"secret" yaml:"secret"`
	// Experimental.
	Storageos *TenantV2SpecSideCarsVolumesStorageos `field:"optional" json:"storageos" yaml:"storageos"`
	// Experimental.
	VsphereVolume *TenantV2SpecSideCarsVolumesVsphereVolume `field:"optional" json:"vsphereVolume" yaml:"vsphereVolume"`
}

// Experimental.
type TenantV2SpecSideCarsVolumesAwsElasticBlockStore struct {
	// Experimental.
	VolumeId *string `field:"required" json:"volumeId" yaml:"volumeId"`
	// Experimental.
	FsType *string `field:"optional" json:"fsType" yaml:"fsType"`
	// Experimental.
	Partition *float64 `field:"optional" json:"partition" yaml:"partition"`
	// Experimental.
	ReadOnly *bool `field:"optional" json:"readOnly" yaml:"readOnly"`
}

// Experimental.
type TenantV2SpecSideCarsVolumesAzureDisk struct {
	// Experimental.
	DiskName *string `field:"required" json:"diskName" yaml:"diskName"`
	// Experimental.
	DiskUri *string `field:"required" json:"diskUri" yaml:"diskUri"`
	// Experimental.
	CachingMode *string `field:"optional" json:"cachingMode" yaml:"cachingMode"`
	// Experimental.
	FsType *string `field:"optional" json:"fsType" yaml:"fsType"`
	// Experimental.
	Kind *string `field:"optional" json:"kind" yaml:"kind"`
	// Experimental.
	ReadOnly *bool `field:"optional" json:"readOnly" yaml:"readOnly"`
}

// Experimental.
type TenantV2SpecSideCarsVolumesAzureFile struct {
	// Experimental.
	SecretName *string `field:"required" json:"secretName" yaml:"secretName"`
	// Experimental.
	ShareName *string `field:"required" json:"shareName" yaml:"shareName"`
	// Experimental.
	ReadOnly *bool `field:"optional" json:"readOnly" yaml:"readOnly"`
}

// Experimental.
type TenantV2SpecSideCarsVolumesCephfs struct {
	// Experimental.
	Monitors *[]*string `field:"required" json:"monitors" yaml:"monitors"`
	// Experimental.
	Path *string `field:"optional" json:"path" yaml:"path"`
	// Experimental.
	ReadOnly *bool `field:"optional" json:"readOnly" yaml:"readOnly"`
	// Experimental.
	SecretFile *string `field:"optional" json:"secretFile" yaml:"secretFile"`
	// Experimental.
	SecretRef *TenantV2SpecSideCarsVolumesCephfsSecretRef `field:"optional" json:"secretRef" yaml:"secretRef"`
	// Experimental.
	User *string `field:"optional" json:"user" yaml:"user"`
}

// Experimental.
type TenantV2SpecSideCarsVolumesCephfsSecretRef struct {
	// Experimental.
	Name *string `field:"optional" json:"name" yaml:"name"`
}

// Experimental.
type TenantV2SpecSideCarsVolumesCinder struct {
	// Experimental.
	VolumeId *string `field:"required" json:"volumeId" yaml:"volumeId"`
	// Experimental.
	FsType *string `field:"optional" json:"fsType" yaml:"fsType"`
	// Experimental.
	ReadOnly *bool `field:"optional" json:"readOnly" yaml:"readOnly"`
	// Experimental.
	SecretRef *TenantV2SpecSideCarsVolumesCinderSecretRef `field:"optional" json:"secretRef" yaml:"secretRef"`
}

// Experimental.
type TenantV2SpecSideCarsVolumesCinderSecretRef struct {
	// Experimental.
	Name *string `field:"optional" json:"name" yaml:"name"`
}

// Experimental.
type TenantV2SpecSideCarsVolumesConfigMap struct {
	// Experimental.
	DefaultMode *float64 `field:"optional" json:"defaultMode" yaml:"defaultMode"`
	// Experimental.
	Items *[]*TenantV2SpecSideCarsVolumesConfigMapItems `field:"optional" json:"items" yaml:"items"`
	// Experimental.
	Name *string `field:"optional" json:"name" yaml:"name"`
	// Experimental.
	Optional *bool `field:"optional" json:"optional" yaml:"optional"`
}

// Experimental.
type TenantV2SpecSideCarsVolumesConfigMapItems struct {
	// Experimental.
	Key *string `field:"required" json:"key" yaml:"key"`
	// Experimental.
	Path *string `field:"required" json:"path" yaml:"path"`
	// Experimental.
	Mode *float64 `field:"optional" json:"mode" yaml:"mode"`
}

// Experimental.
type TenantV2SpecSideCarsVolumesCsi struct {
	// Experimental.
	Driver *string `field:"required" json:"driver" yaml:"driver"`
	// Experimental.
	FsType *string `field:"optional" json:"fsType" yaml:"fsType"`
	// Experimental.
	NodePublishSecretRef *TenantV2SpecSideCarsVolumesCsiNodePublishSecretRef `field:"optional" json:"nodePublishSecretRef" yaml:"nodePublishSecretRef"`
	// Experimental.
	ReadOnly *bool `field:"optional" json:"readOnly" yaml:"readOnly"`
	// Experimental.
	VolumeAttributes *map[string]*string `field:"optional" json:"volumeAttributes" yaml:"volumeAttributes"`
}

// Experimental.
type TenantV2SpecSideCarsVolumesCsiNodePublishSecretRef struct {
	// Experimental.
	Name *string `field:"optional" json:"name" yaml:"name"`
}

// Experimental.
type TenantV2SpecSideCarsVolumesDownwardApi struct {
	// Experimental.
	DefaultMode *float64 `field:"optional" json:"defaultMode" yaml:"defaultMode"`
	// Experimental.
	Items *[]*TenantV2SpecSideCarsVolumesDownwardApiItems `field:"optional" json:"items" yaml:"items"`
}

// Experimental.
type TenantV2SpecSideCarsVolumesDownwardApiItems struct {
	// Experimental.
	Path *string `field:"required" json:"path" yaml:"path"`
	// Experimental.
	FieldRef *TenantV2SpecSideCarsVolumesDownwardApiItemsFieldRef `field:"optional" json:"fieldRef" yaml:"fieldRef"`
	// Experimental.
	Mode *float64 `field:"optional" json:"mode" yaml:"mode"`
	// Experimental.
	ResourceFieldRef *TenantV2SpecSideCarsVolumesDownwardApiItemsResourceFieldRef `field:"optional" json:"resourceFieldRef" yaml:"resourceFieldRef"`
}

// Experimental.
type TenantV2SpecSideCarsVolumesDownwardApiItemsFieldRef struct {
	// Experimental.
	FieldPath *string `field:"required" json:"fieldPath" yaml:"fieldPath"`
	// Experimental.
	ApiVersion *string `field:"optional" json:"apiVersion" yaml:"apiVersion"`
}

// Experimental.
type TenantV2SpecSideCarsVolumesDownwardApiItemsResourceFieldRef struct {
	// Experimental.
	Resource *string `field:"required" json:"resource" yaml:"resource"`
	// Experimental.
	ContainerName *string `field:"optional" json:"containerName" yaml:"containerName"`
	// Experimental.
	Divisor TenantV2SpecSideCarsVolumesDownwardApiItemsResourceFieldRefDivisor `field:"optional" json:"divisor" yaml:"divisor"`
}

// Experimental.
type TenantV2SpecSideCarsVolumesDownwardApiItemsResourceFieldRefDivisor interface {
	// Experimental.
	Value() interface{}
}

// The jsii proxy struct for TenantV2SpecSideCarsVolumesDownwardApiItemsResourceFieldRefDivisor
type jsiiProxy_TenantV2SpecSideCarsVolumesDownwardApiItemsResourceFieldRefDivisor struct {
	_ byte // padding
}

func (j *jsiiProxy_TenantV2SpecSideCarsVolumesDownwardApiItemsResourceFieldRefDivisor) Value() interface{} {
	var returns interface{}
	_jsii_.Get(
		j,
		"value",
		&returns,
	)
	return returns
}


// Experimental.
func TenantV2SpecSideCarsVolumesDownwardApiItemsResourceFieldRefDivisor_FromNumber(value *float64) TenantV2SpecSideCarsVolumesDownwardApiItemsResourceFieldRefDivisor {
	_init_.Initialize()

	var returns TenantV2SpecSideCarsVolumesDownwardApiItemsResourceFieldRefDivisor

	_jsii_.StaticInvoke(
		"cdk8s-metaflow.minio.TenantV2SpecSideCarsVolumesDownwardApiItemsResourceFieldRefDivisor",
		"fromNumber",
		[]interface{}{value},
		&returns,
	)

	return returns
}

// Experimental.
func TenantV2SpecSideCarsVolumesDownwardApiItemsResourceFieldRefDivisor_FromString(value *string) TenantV2SpecSideCarsVolumesDownwardApiItemsResourceFieldRefDivisor {
	_init_.Initialize()

	var returns TenantV2SpecSideCarsVolumesDownwardApiItemsResourceFieldRefDivisor

	_jsii_.StaticInvoke(
		"cdk8s-metaflow.minio.TenantV2SpecSideCarsVolumesDownwardApiItemsResourceFieldRefDivisor",
		"fromString",
		[]interface{}{value},
		&returns,
	)

	return returns
}

// Experimental.
type TenantV2SpecSideCarsVolumesEmptyDir struct {
	// Experimental.
	Medium *string `field:"optional" json:"medium" yaml:"medium"`
	// Experimental.
	SizeLimit TenantV2SpecSideCarsVolumesEmptyDirSizeLimit `field:"optional" json:"sizeLimit" yaml:"sizeLimit"`
}

// Experimental.
type TenantV2SpecSideCarsVolumesEmptyDirSizeLimit interface {
	// Experimental.
	Value() interface{}
}

// The jsii proxy struct for TenantV2SpecSideCarsVolumesEmptyDirSizeLimit
type jsiiProxy_TenantV2SpecSideCarsVolumesEmptyDirSizeLimit struct {
	_ byte // padding
}

func (j *jsiiProxy_TenantV2SpecSideCarsVolumesEmptyDirSizeLimit) Value() interface{} {
	var returns interface{}
	_jsii_.Get(
		j,
		"value",
		&returns,
	)
	return returns
}


// Experimental.
func TenantV2SpecSideCarsVolumesEmptyDirSizeLimit_FromNumber(value *float64) TenantV2SpecSideCarsVolumesEmptyDirSizeLimit {
	_init_.Initialize()

	var returns TenantV2SpecSideCarsVolumesEmptyDirSizeLimit

	_jsii_.StaticInvoke(
		"cdk8s-metaflow.minio.TenantV2SpecSideCarsVolumesEmptyDirSizeLimit",
		"fromNumber",
		[]interface{}{value},
		&returns,
	)

	return returns
}

// Experimental.
func TenantV2SpecSideCarsVolumesEmptyDirSizeLimit_FromString(value *string) TenantV2SpecSideCarsVolumesEmptyDirSizeLimit {
	_init_.Initialize()

	var returns TenantV2SpecSideCarsVolumesEmptyDirSizeLimit

	_jsii_.StaticInvoke(
		"cdk8s-metaflow.minio.TenantV2SpecSideCarsVolumesEmptyDirSizeLimit",
		"fromString",
		[]interface{}{value},
		&returns,
	)

	return returns
}

// Experimental.
type TenantV2SpecSideCarsVolumesEphemeral struct {
	// Experimental.
	ReadOnly *bool `field:"optional" json:"readOnly" yaml:"readOnly"`
	// Experimental.
	VolumeClaimTemplate *TenantV2SpecSideCarsVolumesEphemeralVolumeClaimTemplate `field:"optional" json:"volumeClaimTemplate" yaml:"volumeClaimTemplate"`
}

// Experimental.
type TenantV2SpecSideCarsVolumesEphemeralVolumeClaimTemplate struct {
	// Experimental.
	Spec *TenantV2SpecSideCarsVolumesEphemeralVolumeClaimTemplateSpec `field:"required" json:"spec" yaml:"spec"`
	// Experimental.
	Metadata *TenantV2SpecSideCarsVolumesEphemeralVolumeClaimTemplateMetadata `field:"optional" json:"metadata" yaml:"metadata"`
}

// Experimental.
type TenantV2SpecSideCarsVolumesEphemeralVolumeClaimTemplateMetadata struct {
	// Experimental.
	Annotations *map[string]*string `field:"optional" json:"annotations" yaml:"annotations"`
	// Experimental.
	Finalizers *[]*string `field:"optional" json:"finalizers" yaml:"finalizers"`
	// Experimental.
	Labels *map[string]*string `field:"optional" json:"labels" yaml:"labels"`
	// Experimental.
	Name *string `field:"optional" json:"name" yaml:"name"`
	// Experimental.
	Namespace *string `field:"optional" json:"namespace" yaml:"namespace"`
}

// Experimental.
type TenantV2SpecSideCarsVolumesEphemeralVolumeClaimTemplateSpec struct {
	// Experimental.
	AccessModes *[]*string `field:"optional" json:"accessModes" yaml:"accessModes"`
	// Experimental.
	DataSource *TenantV2SpecSideCarsVolumesEphemeralVolumeClaimTemplateSpecDataSource `field:"optional" json:"dataSource" yaml:"dataSource"`
	// Experimental.
	Resources *TenantV2SpecSideCarsVolumesEphemeralVolumeClaimTemplateSpecResources `field:"optional" json:"resources" yaml:"resources"`
	// Experimental.
	Selector *TenantV2SpecSideCarsVolumesEphemeralVolumeClaimTemplateSpecSelector `field:"optional" json:"selector" yaml:"selector"`
	// Experimental.
	StorageClassName *string `field:"optional" json:"storageClassName" yaml:"storageClassName"`
	// Experimental.
	VolumeMode *string `field:"optional" json:"volumeMode" yaml:"volumeMode"`
	// Experimental.
	VolumeName *string `field:"optional" json:"volumeName" yaml:"volumeName"`
}

// Experimental.
type TenantV2SpecSideCarsVolumesEphemeralVolumeClaimTemplateSpecDataSource struct {
	// Experimental.
	Kind *string `field:"required" json:"kind" yaml:"kind"`
	// Experimental.
	Name *string `field:"required" json:"name" yaml:"name"`
	// Experimental.
	ApiGroup *string `field:"optional" json:"apiGroup" yaml:"apiGroup"`
}

// Experimental.
type TenantV2SpecSideCarsVolumesEphemeralVolumeClaimTemplateSpecResources struct {
	// Experimental.
	Limits *map[string]TenantV2SpecSideCarsVolumesEphemeralVolumeClaimTemplateSpecResourcesLimits `field:"optional" json:"limits" yaml:"limits"`
	// Experimental.
	Requests *map[string]TenantV2SpecSideCarsVolumesEphemeralVolumeClaimTemplateSpecResourcesRequests `field:"optional" json:"requests" yaml:"requests"`
}

// Experimental.
type TenantV2SpecSideCarsVolumesEphemeralVolumeClaimTemplateSpecResourcesLimits interface {
	// Experimental.
	Value() interface{}
}

// The jsii proxy struct for TenantV2SpecSideCarsVolumesEphemeralVolumeClaimTemplateSpecResourcesLimits
type jsiiProxy_TenantV2SpecSideCarsVolumesEphemeralVolumeClaimTemplateSpecResourcesLimits struct {
	_ byte // padding
}

func (j *jsiiProxy_TenantV2SpecSideCarsVolumesEphemeralVolumeClaimTemplateSpecResourcesLimits) Value() interface{} {
	var returns interface{}
	_jsii_.Get(
		j,
		"value",
		&returns,
	)
	return returns
}


// Experimental.
func TenantV2SpecSideCarsVolumesEphemeralVolumeClaimTemplateSpecResourcesLimits_FromNumber(value *float64) TenantV2SpecSideCarsVolumesEphemeralVolumeClaimTemplateSpecResourcesLimits {
	_init_.Initialize()

	var returns TenantV2SpecSideCarsVolumesEphemeralVolumeClaimTemplateSpecResourcesLimits

	_jsii_.StaticInvoke(
		"cdk8s-metaflow.minio.TenantV2SpecSideCarsVolumesEphemeralVolumeClaimTemplateSpecResourcesLimits",
		"fromNumber",
		[]interface{}{value},
		&returns,
	)

	return returns
}

// Experimental.
func TenantV2SpecSideCarsVolumesEphemeralVolumeClaimTemplateSpecResourcesLimits_FromString(value *string) TenantV2SpecSideCarsVolumesEphemeralVolumeClaimTemplateSpecResourcesLimits {
	_init_.Initialize()

	var returns TenantV2SpecSideCarsVolumesEphemeralVolumeClaimTemplateSpecResourcesLimits

	_jsii_.StaticInvoke(
		"cdk8s-metaflow.minio.TenantV2SpecSideCarsVolumesEphemeralVolumeClaimTemplateSpecResourcesLimits",
		"fromString",
		[]interface{}{value},
		&returns,
	)

	return returns
}

// Experimental.
type TenantV2SpecSideCarsVolumesEphemeralVolumeClaimTemplateSpecResourcesRequests interface {
	// Experimental.
	Value() interface{}
}

// The jsii proxy struct for TenantV2SpecSideCarsVolumesEphemeralVolumeClaimTemplateSpecResourcesRequests
type jsiiProxy_TenantV2SpecSideCarsVolumesEphemeralVolumeClaimTemplateSpecResourcesRequests struct {
	_ byte // padding
}

func (j *jsiiProxy_TenantV2SpecSideCarsVolumesEphemeralVolumeClaimTemplateSpecResourcesRequests) Value() interface{} {
	var returns interface{}
	_jsii_.Get(
		j,
		"value",
		&returns,
	)
	return returns
}


// Experimental.
func TenantV2SpecSideCarsVolumesEphemeralVolumeClaimTemplateSpecResourcesRequests_FromNumber(value *float64) TenantV2SpecSideCarsVolumesEphemeralVolumeClaimTemplateSpecResourcesRequests {
	_init_.Initialize()

	var returns TenantV2SpecSideCarsVolumesEphemeralVolumeClaimTemplateSpecResourcesRequests

	_jsii_.StaticInvoke(
		"cdk8s-metaflow.minio.TenantV2SpecSideCarsVolumesEphemeralVolumeClaimTemplateSpecResourcesRequests",
		"fromNumber",
		[]interface{}{value},
		&returns,
	)

	return returns
}

// Experimental.
func TenantV2SpecSideCarsVolumesEphemeralVolumeClaimTemplateSpecResourcesRequests_FromString(value *string) TenantV2SpecSideCarsVolumesEphemeralVolumeClaimTemplateSpecResourcesRequests {
	_init_.Initialize()

	var returns TenantV2SpecSideCarsVolumesEphemeralVolumeClaimTemplateSpecResourcesRequests

	_jsii_.StaticInvoke(
		"cdk8s-metaflow.minio.TenantV2SpecSideCarsVolumesEphemeralVolumeClaimTemplateSpecResourcesRequests",
		"fromString",
		[]interface{}{value},
		&returns,
	)

	return returns
}

// Experimental.
type TenantV2SpecSideCarsVolumesEphemeralVolumeClaimTemplateSpecSelector struct {
	// Experimental.
	MatchExpressions *[]*TenantV2SpecSideCarsVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressions `field:"optional" json:"matchExpressions" yaml:"matchExpressions"`
	// Experimental.
	MatchLabels *map[string]*string `field:"optional" json:"matchLabels" yaml:"matchLabels"`
}

// Experimental.
type TenantV2SpecSideCarsVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressions struct {
	// Experimental.
	Key *string `field:"required" json:"key" yaml:"key"`
	// Experimental.
	Operator *string `field:"required" json:"operator" yaml:"operator"`
	// Experimental.
	Values *[]*string `field:"optional" json:"values" yaml:"values"`
}

// Experimental.
type TenantV2SpecSideCarsVolumesFc struct {
	// Experimental.
	FsType *string `field:"optional" json:"fsType" yaml:"fsType"`
	// Experimental.
	Lun *float64 `field:"optional" json:"lun" yaml:"lun"`
	// Experimental.
	ReadOnly *bool `field:"optional" json:"readOnly" yaml:"readOnly"`
	// Experimental.
	TargetWwNs *[]*string `field:"optional" json:"targetWwNs" yaml:"targetWwNs"`
	// Experimental.
	Wwids *[]*string `field:"optional" json:"wwids" yaml:"wwids"`
}

// Experimental.
type TenantV2SpecSideCarsVolumesFlexVolume struct {
	// Experimental.
	Driver *string `field:"required" json:"driver" yaml:"driver"`
	// Experimental.
	FsType *string `field:"optional" json:"fsType" yaml:"fsType"`
	// Experimental.
	Options *map[string]*string `field:"optional" json:"options" yaml:"options"`
	// Experimental.
	ReadOnly *bool `field:"optional" json:"readOnly" yaml:"readOnly"`
	// Experimental.
	SecretRef *TenantV2SpecSideCarsVolumesFlexVolumeSecretRef `field:"optional" json:"secretRef" yaml:"secretRef"`
}

// Experimental.
type TenantV2SpecSideCarsVolumesFlexVolumeSecretRef struct {
	// Experimental.
	Name *string `field:"optional" json:"name" yaml:"name"`
}

// Experimental.
type TenantV2SpecSideCarsVolumesFlocker struct {
	// Experimental.
	DatasetName *string `field:"optional" json:"datasetName" yaml:"datasetName"`
	// Experimental.
	DatasetUuid *string `field:"optional" json:"datasetUuid" yaml:"datasetUuid"`
}

// Experimental.
type TenantV2SpecSideCarsVolumesGcePersistentDisk struct {
	// Experimental.
	PdName *string `field:"required" json:"pdName" yaml:"pdName"`
	// Experimental.
	FsType *string `field:"optional" json:"fsType" yaml:"fsType"`
	// Experimental.
	Partition *float64 `field:"optional" json:"partition" yaml:"partition"`
	// Experimental.
	ReadOnly *bool `field:"optional" json:"readOnly" yaml:"readOnly"`
}

// Experimental.
type TenantV2SpecSideCarsVolumesGitRepo struct {
	// Experimental.
	Repository *string `field:"required" json:"repository" yaml:"repository"`
	// Experimental.
	Directory *string `field:"optional" json:"directory" yaml:"directory"`
	// Experimental.
	Revision *string `field:"optional" json:"revision" yaml:"revision"`
}

// Experimental.
type TenantV2SpecSideCarsVolumesGlusterfs struct {
	// Experimental.
	Endpoints *string `field:"required" json:"endpoints" yaml:"endpoints"`
	// Experimental.
	Path *string `field:"required" json:"path" yaml:"path"`
	// Experimental.
	ReadOnly *bool `field:"optional" json:"readOnly" yaml:"readOnly"`
}

// Experimental.
type TenantV2SpecSideCarsVolumesHostPath struct {
	// Experimental.
	Path *string `field:"required" json:"path" yaml:"path"`
	// Experimental.
	Type *string `field:"optional" json:"type" yaml:"type"`
}

// Experimental.
type TenantV2SpecSideCarsVolumesIscsi struct {
	// Experimental.
	Iqn *string `field:"required" json:"iqn" yaml:"iqn"`
	// Experimental.
	Lun *float64 `field:"required" json:"lun" yaml:"lun"`
	// Experimental.
	TargetPortal *string `field:"required" json:"targetPortal" yaml:"targetPortal"`
	// Experimental.
	ChapAuthDiscovery *bool `field:"optional" json:"chapAuthDiscovery" yaml:"chapAuthDiscovery"`
	// Experimental.
	ChapAuthSession *bool `field:"optional" json:"chapAuthSession" yaml:"chapAuthSession"`
	// Experimental.
	FsType *string `field:"optional" json:"fsType" yaml:"fsType"`
	// Experimental.
	InitiatorName *string `field:"optional" json:"initiatorName" yaml:"initiatorName"`
	// Experimental.
	IscsiInterface *string `field:"optional" json:"iscsiInterface" yaml:"iscsiInterface"`
	// Experimental.
	Portals *[]*string `field:"optional" json:"portals" yaml:"portals"`
	// Experimental.
	ReadOnly *bool `field:"optional" json:"readOnly" yaml:"readOnly"`
	// Experimental.
	SecretRef *TenantV2SpecSideCarsVolumesIscsiSecretRef `field:"optional" json:"secretRef" yaml:"secretRef"`
}

// Experimental.
type TenantV2SpecSideCarsVolumesIscsiSecretRef struct {
	// Experimental.
	Name *string `field:"optional" json:"name" yaml:"name"`
}

// Experimental.
type TenantV2SpecSideCarsVolumesNfs struct {
	// Experimental.
	Path *string `field:"required" json:"path" yaml:"path"`
	// Experimental.
	Server *string `field:"required" json:"server" yaml:"server"`
	// Experimental.
	ReadOnly *bool `field:"optional" json:"readOnly" yaml:"readOnly"`
}

// Experimental.
type TenantV2SpecSideCarsVolumesPersistentVolumeClaim struct {
	// Experimental.
	ClaimName *string `field:"required" json:"claimName" yaml:"claimName"`
	// Experimental.
	ReadOnly *bool `field:"optional" json:"readOnly" yaml:"readOnly"`
}

// Experimental.
type TenantV2SpecSideCarsVolumesPhotonPersistentDisk struct {
	// Experimental.
	PdId *string `field:"required" json:"pdId" yaml:"pdId"`
	// Experimental.
	FsType *string `field:"optional" json:"fsType" yaml:"fsType"`
}

// Experimental.
type TenantV2SpecSideCarsVolumesPortworxVolume struct {
	// Experimental.
	VolumeId *string `field:"required" json:"volumeId" yaml:"volumeId"`
	// Experimental.
	FsType *string `field:"optional" json:"fsType" yaml:"fsType"`
	// Experimental.
	ReadOnly *bool `field:"optional" json:"readOnly" yaml:"readOnly"`
}

// Experimental.
type TenantV2SpecSideCarsVolumesProjected struct {
	// Experimental.
	DefaultMode *float64 `field:"optional" json:"defaultMode" yaml:"defaultMode"`
	// Experimental.
	Sources *[]*TenantV2SpecSideCarsVolumesProjectedSources `field:"optional" json:"sources" yaml:"sources"`
}

// Experimental.
type TenantV2SpecSideCarsVolumesProjectedSources struct {
	// Experimental.
	ConfigMap *TenantV2SpecSideCarsVolumesProjectedSourcesConfigMap `field:"optional" json:"configMap" yaml:"configMap"`
	// Experimental.
	DownwardApi *TenantV2SpecSideCarsVolumesProjectedSourcesDownwardApi `field:"optional" json:"downwardApi" yaml:"downwardApi"`
	// Experimental.
	Secret *TenantV2SpecSideCarsVolumesProjectedSourcesSecret `field:"optional" json:"secret" yaml:"secret"`
	// Experimental.
	ServiceAccountToken *TenantV2SpecSideCarsVolumesProjectedSourcesServiceAccountToken `field:"optional" json:"serviceAccountToken" yaml:"serviceAccountToken"`
}

// Experimental.
type TenantV2SpecSideCarsVolumesProjectedSourcesConfigMap struct {
	// Experimental.
	Items *[]*TenantV2SpecSideCarsVolumesProjectedSourcesConfigMapItems `field:"optional" json:"items" yaml:"items"`
	// Experimental.
	Name *string `field:"optional" json:"name" yaml:"name"`
	// Experimental.
	Optional *bool `field:"optional" json:"optional" yaml:"optional"`
}

// Experimental.
type TenantV2SpecSideCarsVolumesProjectedSourcesConfigMapItems struct {
	// Experimental.
	Key *string `field:"required" json:"key" yaml:"key"`
	// Experimental.
	Path *string `field:"required" json:"path" yaml:"path"`
	// Experimental.
	Mode *float64 `field:"optional" json:"mode" yaml:"mode"`
}

// Experimental.
type TenantV2SpecSideCarsVolumesProjectedSourcesDownwardApi struct {
	// Experimental.
	Items *[]*TenantV2SpecSideCarsVolumesProjectedSourcesDownwardApiItems `field:"optional" json:"items" yaml:"items"`
}

// Experimental.
type TenantV2SpecSideCarsVolumesProjectedSourcesDownwardApiItems struct {
	// Experimental.
	Path *string `field:"required" json:"path" yaml:"path"`
	// Experimental.
	FieldRef *TenantV2SpecSideCarsVolumesProjectedSourcesDownwardApiItemsFieldRef `field:"optional" json:"fieldRef" yaml:"fieldRef"`
	// Experimental.
	Mode *float64 `field:"optional" json:"mode" yaml:"mode"`
	// Experimental.
	ResourceFieldRef *TenantV2SpecSideCarsVolumesProjectedSourcesDownwardApiItemsResourceFieldRef `field:"optional" json:"resourceFieldRef" yaml:"resourceFieldRef"`
}

// Experimental.
type TenantV2SpecSideCarsVolumesProjectedSourcesDownwardApiItemsFieldRef struct {
	// Experimental.
	FieldPath *string `field:"required" json:"fieldPath" yaml:"fieldPath"`
	// Experimental.
	ApiVersion *string `field:"optional" json:"apiVersion" yaml:"apiVersion"`
}

// Experimental.
type TenantV2SpecSideCarsVolumesProjectedSourcesDownwardApiItemsResourceFieldRef struct {
	// Experimental.
	Resource *string `field:"required" json:"resource" yaml:"resource"`
	// Experimental.
	ContainerName *string `field:"optional" json:"containerName" yaml:"containerName"`
	// Experimental.
	Divisor TenantV2SpecSideCarsVolumesProjectedSourcesDownwardApiItemsResourceFieldRefDivisor `field:"optional" json:"divisor" yaml:"divisor"`
}

// Experimental.
type TenantV2SpecSideCarsVolumesProjectedSourcesDownwardApiItemsResourceFieldRefDivisor interface {
	// Experimental.
	Value() interface{}
}

// The jsii proxy struct for TenantV2SpecSideCarsVolumesProjectedSourcesDownwardApiItemsResourceFieldRefDivisor
type jsiiProxy_TenantV2SpecSideCarsVolumesProjectedSourcesDownwardApiItemsResourceFieldRefDivisor struct {
	_ byte // padding
}

func (j *jsiiProxy_TenantV2SpecSideCarsVolumesProjectedSourcesDownwardApiItemsResourceFieldRefDivisor) Value() interface{} {
	var returns interface{}
	_jsii_.Get(
		j,
		"value",
		&returns,
	)
	return returns
}


// Experimental.
func TenantV2SpecSideCarsVolumesProjectedSourcesDownwardApiItemsResourceFieldRefDivisor_FromNumber(value *float64) TenantV2SpecSideCarsVolumesProjectedSourcesDownwardApiItemsResourceFieldRefDivisor {
	_init_.Initialize()

	var returns TenantV2SpecSideCarsVolumesProjectedSourcesDownwardApiItemsResourceFieldRefDivisor

	_jsii_.StaticInvoke(
		"cdk8s-metaflow.minio.TenantV2SpecSideCarsVolumesProjectedSourcesDownwardApiItemsResourceFieldRefDivisor",
		"fromNumber",
		[]interface{}{value},
		&returns,
	)

	return returns
}

// Experimental.
func TenantV2SpecSideCarsVolumesProjectedSourcesDownwardApiItemsResourceFieldRefDivisor_FromString(value *string) TenantV2SpecSideCarsVolumesProjectedSourcesDownwardApiItemsResourceFieldRefDivisor {
	_init_.Initialize()

	var returns TenantV2SpecSideCarsVolumesProjectedSourcesDownwardApiItemsResourceFieldRefDivisor

	_jsii_.StaticInvoke(
		"cdk8s-metaflow.minio.TenantV2SpecSideCarsVolumesProjectedSourcesDownwardApiItemsResourceFieldRefDivisor",
		"fromString",
		[]interface{}{value},
		&returns,
	)

	return returns
}

// Experimental.
type TenantV2SpecSideCarsVolumesProjectedSourcesSecret struct {
	// Experimental.
	Items *[]*TenantV2SpecSideCarsVolumesProjectedSourcesSecretItems `field:"optional" json:"items" yaml:"items"`
	// Experimental.
	Name *string `field:"optional" json:"name" yaml:"name"`
	// Experimental.
	Optional *bool `field:"optional" json:"optional" yaml:"optional"`
}

// Experimental.
type TenantV2SpecSideCarsVolumesProjectedSourcesSecretItems struct {
	// Experimental.
	Key *string `field:"required" json:"key" yaml:"key"`
	// Experimental.
	Path *string `field:"required" json:"path" yaml:"path"`
	// Experimental.
	Mode *float64 `field:"optional" json:"mode" yaml:"mode"`
}

// Experimental.
type TenantV2SpecSideCarsVolumesProjectedSourcesServiceAccountToken struct {
	// Experimental.
	Path *string `field:"required" json:"path" yaml:"path"`
	// Experimental.
	Audience *string `field:"optional" json:"audience" yaml:"audience"`
	// Experimental.
	ExpirationSeconds *float64 `field:"optional" json:"expirationSeconds" yaml:"expirationSeconds"`
}

// Experimental.
type TenantV2SpecSideCarsVolumesQuobyte struct {
	// Experimental.
	Registry *string `field:"required" json:"registry" yaml:"registry"`
	// Experimental.
	Volume *string `field:"required" json:"volume" yaml:"volume"`
	// Experimental.
	Group *string `field:"optional" json:"group" yaml:"group"`
	// Experimental.
	ReadOnly *bool `field:"optional" json:"readOnly" yaml:"readOnly"`
	// Experimental.
	Tenant *string `field:"optional" json:"tenant" yaml:"tenant"`
	// Experimental.
	User *string `field:"optional" json:"user" yaml:"user"`
}

// Experimental.
type TenantV2SpecSideCarsVolumesRbd struct {
	// Experimental.
	Image *string `field:"required" json:"image" yaml:"image"`
	// Experimental.
	Monitors *[]*string `field:"required" json:"monitors" yaml:"monitors"`
	// Experimental.
	FsType *string `field:"optional" json:"fsType" yaml:"fsType"`
	// Experimental.
	Keyring *string `field:"optional" json:"keyring" yaml:"keyring"`
	// Experimental.
	Pool *string `field:"optional" json:"pool" yaml:"pool"`
	// Experimental.
	ReadOnly *bool `field:"optional" json:"readOnly" yaml:"readOnly"`
	// Experimental.
	SecretRef *TenantV2SpecSideCarsVolumesRbdSecretRef `field:"optional" json:"secretRef" yaml:"secretRef"`
	// Experimental.
	User *string `field:"optional" json:"user" yaml:"user"`
}

// Experimental.
type TenantV2SpecSideCarsVolumesRbdSecretRef struct {
	// Experimental.
	Name *string `field:"optional" json:"name" yaml:"name"`
}

// Experimental.
type TenantV2SpecSideCarsVolumesScaleIo struct {
	// Experimental.
	Gateway *string `field:"required" json:"gateway" yaml:"gateway"`
	// Experimental.
	SecretRef *TenantV2SpecSideCarsVolumesScaleIoSecretRef `field:"required" json:"secretRef" yaml:"secretRef"`
	// Experimental.
	System *string `field:"required" json:"system" yaml:"system"`
	// Experimental.
	FsType *string `field:"optional" json:"fsType" yaml:"fsType"`
	// Experimental.
	ProtectionDomain *string `field:"optional" json:"protectionDomain" yaml:"protectionDomain"`
	// Experimental.
	ReadOnly *bool `field:"optional" json:"readOnly" yaml:"readOnly"`
	// Experimental.
	SslEnabled *bool `field:"optional" json:"sslEnabled" yaml:"sslEnabled"`
	// Experimental.
	StorageMode *string `field:"optional" json:"storageMode" yaml:"storageMode"`
	// Experimental.
	StoragePool *string `field:"optional" json:"storagePool" yaml:"storagePool"`
	// Experimental.
	VolumeName *string `field:"optional" json:"volumeName" yaml:"volumeName"`
}

// Experimental.
type TenantV2SpecSideCarsVolumesScaleIoSecretRef struct {
	// Experimental.
	Name *string `field:"optional" json:"name" yaml:"name"`
}

// Experimental.
type TenantV2SpecSideCarsVolumesSecret struct {
	// Experimental.
	DefaultMode *float64 `field:"optional" json:"defaultMode" yaml:"defaultMode"`
	// Experimental.
	Items *[]*TenantV2SpecSideCarsVolumesSecretItems `field:"optional" json:"items" yaml:"items"`
	// Experimental.
	Optional *bool `field:"optional" json:"optional" yaml:"optional"`
	// Experimental.
	SecretName *string `field:"optional" json:"secretName" yaml:"secretName"`
}

// Experimental.
type TenantV2SpecSideCarsVolumesSecretItems struct {
	// Experimental.
	Key *string `field:"required" json:"key" yaml:"key"`
	// Experimental.
	Path *string `field:"required" json:"path" yaml:"path"`
	// Experimental.
	Mode *float64 `field:"optional" json:"mode" yaml:"mode"`
}

// Experimental.
type TenantV2SpecSideCarsVolumesStorageos struct {
	// Experimental.
	FsType *string `field:"optional" json:"fsType" yaml:"fsType"`
	// Experimental.
	ReadOnly *bool `field:"optional" json:"readOnly" yaml:"readOnly"`
	// Experimental.
	SecretRef *TenantV2SpecSideCarsVolumesStorageosSecretRef `field:"optional" json:"secretRef" yaml:"secretRef"`
	// Experimental.
	VolumeName *string `field:"optional" json:"volumeName" yaml:"volumeName"`
	// Experimental.
	VolumeNamespace *string `field:"optional" json:"volumeNamespace" yaml:"volumeNamespace"`
}

// Experimental.
type TenantV2SpecSideCarsVolumesStorageosSecretRef struct {
	// Experimental.
	Name *string `field:"optional" json:"name" yaml:"name"`
}

// Experimental.
type TenantV2SpecSideCarsVolumesVsphereVolume struct {
	// Experimental.
	VolumePath *string `field:"required" json:"volumePath" yaml:"volumePath"`
	// Experimental.
	FsType *string `field:"optional" json:"fsType" yaml:"fsType"`
	// Experimental.
	StoragePolicyId *string `field:"optional" json:"storagePolicyId" yaml:"storagePolicyId"`
	// Experimental.
	StoragePolicyName *string `field:"optional" json:"storagePolicyName" yaml:"storagePolicyName"`
}

// Experimental.
type TenantV2SpecUsers struct {
	// Experimental.
	Name *string `field:"optional" json:"name" yaml:"name"`
}

